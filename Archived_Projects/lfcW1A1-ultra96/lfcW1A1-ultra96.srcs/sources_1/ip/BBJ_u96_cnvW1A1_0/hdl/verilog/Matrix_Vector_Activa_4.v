// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Matrix_Vector_Activa_4 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write,
        tmp_loc_dout,
        tmp_loc_empty_n,
        tmp_loc_read,
        weights0_m_weights_V_address0,
        weights0_m_weights_V_ce0,
        weights0_m_weights_V_q0,
        weights0_m_weights_V_1_address0,
        weights0_m_weights_V_1_ce0,
        weights0_m_weights_V_1_q0,
        weights0_m_weights_V_2_address0,
        weights0_m_weights_V_2_ce0,
        weights0_m_weights_V_2_q0,
        weights0_m_weights_V_3_address0,
        weights0_m_weights_V_3_ce0,
        weights0_m_weights_V_3_q0,
        weights0_m_weights_V_4_address0,
        weights0_m_weights_V_4_ce0,
        weights0_m_weights_V_4_q0,
        weights0_m_weights_V_5_address0,
        weights0_m_weights_V_5_ce0,
        weights0_m_weights_V_5_q0,
        weights0_m_weights_V_6_address0,
        weights0_m_weights_V_6_ce0,
        weights0_m_weights_V_6_q0,
        weights0_m_weights_V_7_address0,
        weights0_m_weights_V_7_ce0,
        weights0_m_weights_V_7_q0,
        weights0_m_weights_V_8_address0,
        weights0_m_weights_V_8_ce0,
        weights0_m_weights_V_8_q0,
        weights0_m_weights_V_9_address0,
        weights0_m_weights_V_9_ce0,
        weights0_m_weights_V_9_q0,
        weights0_m_weights_V_10_address0,
        weights0_m_weights_V_10_ce0,
        weights0_m_weights_V_10_q0,
        weights0_m_weights_V_11_address0,
        weights0_m_weights_V_11_ce0,
        weights0_m_weights_V_11_q0,
        weights0_m_weights_V_12_address0,
        weights0_m_weights_V_12_ce0,
        weights0_m_weights_V_12_q0,
        weights0_m_weights_V_13_address0,
        weights0_m_weights_V_13_ce0,
        weights0_m_weights_V_13_q0,
        weights0_m_weights_V_14_address0,
        weights0_m_weights_V_14_ce0,
        weights0_m_weights_V_14_q0,
        weights0_m_weights_V_15_address0,
        weights0_m_weights_V_15_ce0,
        weights0_m_weights_V_15_q0,
        threshs0_m_threshold_15_address0,
        threshs0_m_threshold_15_ce0,
        threshs0_m_threshold_15_q0,
        threshs0_m_threshold_14_address0,
        threshs0_m_threshold_14_ce0,
        threshs0_m_threshold_14_q0,
        threshs0_m_threshold_7_address0,
        threshs0_m_threshold_7_ce0,
        threshs0_m_threshold_7_q0,
        threshs0_m_threshold_6_address0,
        threshs0_m_threshold_6_ce0,
        threshs0_m_threshold_6_q0,
        threshs0_m_threshold_5_address0,
        threshs0_m_threshold_5_ce0,
        threshs0_m_threshold_5_q0,
        threshs0_m_threshold_4_address0,
        threshs0_m_threshold_4_ce0,
        threshs0_m_threshold_4_q0,
        threshs0_m_threshold_3_address0,
        threshs0_m_threshold_3_ce0,
        threshs0_m_threshold_3_q0,
        threshs0_m_threshold_2_address0,
        threshs0_m_threshold_2_ce0,
        threshs0_m_threshold_2_q0,
        threshs0_m_threshold_1_address0,
        threshs0_m_threshold_1_ce0,
        threshs0_m_threshold_1_q0,
        threshs0_m_threshold_address0,
        threshs0_m_threshold_ce0,
        threshs0_m_threshold_q0,
        threshs0_m_threshold_13_address0,
        threshs0_m_threshold_13_ce0,
        threshs0_m_threshold_13_q0,
        threshs0_m_threshold_12_address0,
        threshs0_m_threshold_12_ce0,
        threshs0_m_threshold_12_q0,
        threshs0_m_threshold_11_address0,
        threshs0_m_threshold_11_ce0,
        threshs0_m_threshold_11_q0,
        threshs0_m_threshold_10_address0,
        threshs0_m_threshold_10_ce0,
        threshs0_m_threshold_10_q0,
        threshs0_m_threshold_9_address0,
        threshs0_m_threshold_9_ce0,
        threshs0_m_threshold_9_q0,
        threshs0_m_threshold_8_address0,
        threshs0_m_threshold_8_ce0,
        threshs0_m_threshold_8_q0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state7 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [23:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [15:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;
input  [31:0] tmp_loc_dout;
input   tmp_loc_empty_n;
output   tmp_loc_read;
output  [5:0] weights0_m_weights_V_address0;
output   weights0_m_weights_V_ce0;
input  [2:0] weights0_m_weights_V_q0;
output  [5:0] weights0_m_weights_V_1_address0;
output   weights0_m_weights_V_1_ce0;
input  [2:0] weights0_m_weights_V_1_q0;
output  [5:0] weights0_m_weights_V_2_address0;
output   weights0_m_weights_V_2_ce0;
input  [2:0] weights0_m_weights_V_2_q0;
output  [5:0] weights0_m_weights_V_3_address0;
output   weights0_m_weights_V_3_ce0;
input  [2:0] weights0_m_weights_V_3_q0;
output  [5:0] weights0_m_weights_V_4_address0;
output   weights0_m_weights_V_4_ce0;
input  [2:0] weights0_m_weights_V_4_q0;
output  [5:0] weights0_m_weights_V_5_address0;
output   weights0_m_weights_V_5_ce0;
input  [2:0] weights0_m_weights_V_5_q0;
output  [5:0] weights0_m_weights_V_6_address0;
output   weights0_m_weights_V_6_ce0;
input  [2:0] weights0_m_weights_V_6_q0;
output  [5:0] weights0_m_weights_V_7_address0;
output   weights0_m_weights_V_7_ce0;
input  [2:0] weights0_m_weights_V_7_q0;
output  [5:0] weights0_m_weights_V_8_address0;
output   weights0_m_weights_V_8_ce0;
input  [2:0] weights0_m_weights_V_8_q0;
output  [5:0] weights0_m_weights_V_9_address0;
output   weights0_m_weights_V_9_ce0;
input  [2:0] weights0_m_weights_V_9_q0;
output  [5:0] weights0_m_weights_V_10_address0;
output   weights0_m_weights_V_10_ce0;
input  [2:0] weights0_m_weights_V_10_q0;
output  [5:0] weights0_m_weights_V_11_address0;
output   weights0_m_weights_V_11_ce0;
input  [2:0] weights0_m_weights_V_11_q0;
output  [5:0] weights0_m_weights_V_12_address0;
output   weights0_m_weights_V_12_ce0;
input  [2:0] weights0_m_weights_V_12_q0;
output  [5:0] weights0_m_weights_V_13_address0;
output   weights0_m_weights_V_13_ce0;
input  [2:0] weights0_m_weights_V_13_q0;
output  [5:0] weights0_m_weights_V_14_address0;
output   weights0_m_weights_V_14_ce0;
input  [2:0] weights0_m_weights_V_14_q0;
output  [5:0] weights0_m_weights_V_15_address0;
output   weights0_m_weights_V_15_ce0;
input  [2:0] weights0_m_weights_V_15_q0;
output  [1:0] threshs0_m_threshold_15_address0;
output   threshs0_m_threshold_15_ce0;
input  [23:0] threshs0_m_threshold_15_q0;
output  [1:0] threshs0_m_threshold_14_address0;
output   threshs0_m_threshold_14_ce0;
input  [23:0] threshs0_m_threshold_14_q0;
output  [1:0] threshs0_m_threshold_7_address0;
output   threshs0_m_threshold_7_ce0;
input  [23:0] threshs0_m_threshold_7_q0;
output  [1:0] threshs0_m_threshold_6_address0;
output   threshs0_m_threshold_6_ce0;
input  [23:0] threshs0_m_threshold_6_q0;
output  [1:0] threshs0_m_threshold_5_address0;
output   threshs0_m_threshold_5_ce0;
input  [23:0] threshs0_m_threshold_5_q0;
output  [1:0] threshs0_m_threshold_4_address0;
output   threshs0_m_threshold_4_ce0;
input  [23:0] threshs0_m_threshold_4_q0;
output  [1:0] threshs0_m_threshold_3_address0;
output   threshs0_m_threshold_3_ce0;
input  [23:0] threshs0_m_threshold_3_q0;
output  [1:0] threshs0_m_threshold_2_address0;
output   threshs0_m_threshold_2_ce0;
input  [23:0] threshs0_m_threshold_2_q0;
output  [1:0] threshs0_m_threshold_1_address0;
output   threshs0_m_threshold_1_ce0;
input  [23:0] threshs0_m_threshold_1_q0;
output  [1:0] threshs0_m_threshold_address0;
output   threshs0_m_threshold_ce0;
input  [23:0] threshs0_m_threshold_q0;
output  [1:0] threshs0_m_threshold_13_address0;
output   threshs0_m_threshold_13_ce0;
input  [23:0] threshs0_m_threshold_13_q0;
output  [1:0] threshs0_m_threshold_12_address0;
output   threshs0_m_threshold_12_ce0;
input  [23:0] threshs0_m_threshold_12_q0;
output  [1:0] threshs0_m_threshold_11_address0;
output   threshs0_m_threshold_11_ce0;
input  [23:0] threshs0_m_threshold_11_q0;
output  [1:0] threshs0_m_threshold_10_address0;
output   threshs0_m_threshold_10_ce0;
input  [23:0] threshs0_m_threshold_10_q0;
output  [1:0] threshs0_m_threshold_9_address0;
output   threshs0_m_threshold_9_ce0;
input  [23:0] threshs0_m_threshold_9_q0;
output  [1:0] threshs0_m_threshold_8_address0;
output   threshs0_m_threshold_8_ce0;
input  [23:0] threshs0_m_threshold_8_q0;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_V_V_read;
reg out_V_V_write;
reg tmp_loc_read;
reg weights0_m_weights_V_ce0;
reg weights0_m_weights_V_1_ce0;
reg weights0_m_weights_V_2_ce0;
reg weights0_m_weights_V_3_ce0;
reg weights0_m_weights_V_4_ce0;
reg weights0_m_weights_V_5_ce0;
reg weights0_m_weights_V_6_ce0;
reg weights0_m_weights_V_7_ce0;
reg weights0_m_weights_V_8_ce0;
reg weights0_m_weights_V_9_ce0;
reg weights0_m_weights_V_10_ce0;
reg weights0_m_weights_V_11_ce0;
reg weights0_m_weights_V_12_ce0;
reg weights0_m_weights_V_13_ce0;
reg weights0_m_weights_V_14_ce0;
reg weights0_m_weights_V_15_ce0;
reg threshs0_m_threshold_15_ce0;
reg threshs0_m_threshold_14_ce0;
reg threshs0_m_threshold_7_ce0;
reg threshs0_m_threshold_6_ce0;
reg threshs0_m_threshold_5_ce0;
reg threshs0_m_threshold_4_ce0;
reg threshs0_m_threshold_3_ce0;
reg threshs0_m_threshold_2_ce0;
reg threshs0_m_threshold_1_ce0;
reg threshs0_m_threshold_ce0;
reg threshs0_m_threshold_13_ce0;
reg threshs0_m_threshold_12_ce0;
reg threshs0_m_threshold_11_ce0;
reg threshs0_m_threshold_10_ce0;
reg threshs0_m_threshold_9_ce0;
reg threshs0_m_threshold_8_ce0;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    in_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_i_i_reg_3405;
reg   [0:0] tmp_i_i_1069_reg_3414;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] tmp_32_i_i_reg_3455;
reg   [0:0] tmp_32_i_i_reg_3455_pp0_iter3_reg;
reg    tmp_loc_blk_n;
reg   [31:0] i_i_i_reg_699;
wire   [31:0] tmp_i_i_fu_736_p2;
reg   [31:0] tmp_i_i_reg_3400;
reg    ap_block_state1;
wire   [0:0] exitcond_i_i_fu_752_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_predicate_op84_read_state3;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_state6_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] i_fu_757_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_i_i_1069_fu_766_p2;
wire   [3:0] tmp_1267_fu_775_p1;
reg   [3:0] tmp_1267_reg_3418;
wire   [3:0] tmp_1266_fu_779_p1;
reg   [3:0] tmp_1266_reg_3423;
wire   [0:0] tmp_31_i_i_fu_786_p2;
reg   [0:0] tmp_31_i_i_reg_3435;
reg   [0:0] tmp_31_i_i_reg_3435_pp0_iter1_reg;
reg   [0:0] tmp_31_i_i_reg_3435_pp0_iter2_reg;
wire   [0:0] tmp_32_i_i_fu_798_p2;
reg   [0:0] tmp_32_i_i_reg_3455_pp0_iter1_reg;
reg   [0:0] tmp_32_i_i_reg_3455_pp0_iter2_reg;
reg   [31:0] nf_assign_load_reg_3459;
reg   [31:0] nf_assign_load_reg_3459_pp0_iter1_reg;
wire   [0:0] tmp_33_i_i_fu_818_p2;
reg   [0:0] tmp_33_i_i_reg_3464;
wire   [23:0] inElem_V_fu_864_p11;
wire   [0:0] tmp_1268_fu_1228_p1;
reg   [0:0] tmp_1268_reg_3559;
wire  signed [8:0] tmp_112_0_i_i_fu_1236_p1;
reg  signed [8:0] tmp_112_0_i_i_reg_3564;
wire   [8:0] ret_V_2_0_i_i_fu_1240_p2;
reg   [8:0] ret_V_2_0_i_i_reg_3584;
wire   [10:0] tmp154_fu_1342_p2;
reg   [10:0] tmp154_reg_3604;
wire   [0:0] tmp_1272_fu_1348_p1;
reg   [0:0] tmp_1272_reg_3609;
wire   [10:0] tmp157_fu_1408_p2;
reg   [10:0] tmp157_reg_3614;
wire   [0:0] tmp_1275_fu_1414_p1;
reg   [0:0] tmp_1275_reg_3619;
wire   [10:0] tmp160_fu_1474_p2;
reg   [10:0] tmp160_reg_3624;
wire   [0:0] tmp_1278_fu_1480_p1;
reg   [0:0] tmp_1278_reg_3629;
wire   [10:0] tmp163_fu_1540_p2;
reg   [10:0] tmp163_reg_3634;
wire   [0:0] tmp_1281_fu_1546_p1;
reg   [0:0] tmp_1281_reg_3639;
wire   [10:0] tmp166_fu_1606_p2;
reg   [10:0] tmp166_reg_3644;
wire   [0:0] tmp_1284_fu_1612_p1;
reg   [0:0] tmp_1284_reg_3649;
wire   [10:0] tmp169_fu_1672_p2;
reg   [10:0] tmp169_reg_3654;
wire   [0:0] tmp_1287_fu_1678_p1;
reg   [0:0] tmp_1287_reg_3659;
wire   [10:0] tmp172_fu_1738_p2;
reg   [10:0] tmp172_reg_3664;
wire   [0:0] tmp_1290_fu_1744_p1;
reg   [0:0] tmp_1290_reg_3669;
wire   [10:0] tmp175_fu_1804_p2;
reg   [10:0] tmp175_reg_3674;
wire   [0:0] tmp_1293_fu_1810_p1;
reg   [0:0] tmp_1293_reg_3679;
wire   [10:0] tmp178_fu_1870_p2;
reg   [10:0] tmp178_reg_3684;
wire   [0:0] tmp_1296_fu_1876_p1;
reg   [0:0] tmp_1296_reg_3689;
wire   [10:0] tmp181_fu_1936_p2;
reg   [10:0] tmp181_reg_3694;
wire   [0:0] tmp_1299_fu_1942_p1;
reg   [0:0] tmp_1299_reg_3699;
wire   [10:0] tmp184_fu_2002_p2;
reg   [10:0] tmp184_reg_3704;
wire   [0:0] tmp_1302_fu_2008_p1;
reg   [0:0] tmp_1302_reg_3709;
wire   [10:0] tmp187_fu_2068_p2;
reg   [10:0] tmp187_reg_3714;
wire   [0:0] tmp_1305_fu_2074_p1;
reg   [0:0] tmp_1305_reg_3719;
wire   [10:0] tmp190_fu_2134_p2;
reg   [10:0] tmp190_reg_3724;
wire   [0:0] tmp_1308_fu_2140_p1;
reg   [0:0] tmp_1308_reg_3729;
wire   [10:0] tmp193_fu_2200_p2;
reg   [10:0] tmp193_reg_3734;
wire   [0:0] tmp_1311_fu_2206_p1;
reg   [0:0] tmp_1311_reg_3739;
wire   [10:0] tmp196_fu_2266_p2;
reg   [10:0] tmp196_reg_3744;
wire   [0:0] tmp_1314_fu_2272_p1;
reg   [0:0] tmp_1314_reg_3749;
wire   [10:0] tmp199_fu_2332_p2;
reg   [10:0] tmp199_reg_3754;
wire   [0:0] tmp_i_i_i_fu_3109_p2;
reg   [0:0] tmp_i_i_i_reg_3839;
wire   [0:0] tmp_i1151_i_i_fu_3115_p2;
reg   [0:0] tmp_i1151_i_i_reg_3844;
wire   [0:0] tmp_i1152_i_i_fu_3121_p2;
reg   [0:0] tmp_i1152_i_i_reg_3849;
wire   [0:0] tmp_i1153_i_i_fu_3127_p2;
reg   [0:0] tmp_i1153_i_i_reg_3854;
wire   [0:0] tmp_i1154_i_i_fu_3133_p2;
reg   [0:0] tmp_i1154_i_i_reg_3859;
wire   [0:0] tmp_i1155_i_i_fu_3139_p2;
reg   [0:0] tmp_i1155_i_i_reg_3864;
wire   [0:0] tmp_i1156_i_i_fu_3145_p2;
reg   [0:0] tmp_i1156_i_i_reg_3869;
wire   [0:0] tmp_i1157_i_i_fu_3151_p2;
reg   [0:0] tmp_i1157_i_i_reg_3874;
wire   [0:0] tmp_i1158_i_i_fu_3157_p2;
reg   [0:0] tmp_i1158_i_i_reg_3879;
wire   [0:0] tmp_i1159_i_i_fu_3163_p2;
reg   [0:0] tmp_i1159_i_i_reg_3884;
wire   [0:0] tmp_i1160_i_i_fu_3169_p2;
reg   [0:0] tmp_i1160_i_i_reg_3889;
wire   [0:0] tmp_i1161_i_i_fu_3175_p2;
reg   [0:0] tmp_i1161_i_i_reg_3894;
wire   [0:0] tmp_i1162_i_i_fu_3181_p2;
reg   [0:0] tmp_i1162_i_i_reg_3899;
wire   [0:0] tmp_i1163_i_i_fu_3187_p2;
reg   [0:0] tmp_i1163_i_i_reg_3904;
wire   [0:0] tmp_i1164_i_i_fu_3193_p2;
reg   [0:0] tmp_i1164_i_i_reg_3909;
wire   [0:0] tmp_i1165_i_i_fu_3199_p2;
reg   [0:0] tmp_i1165_i_i_reg_3914;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
wire   [23:0] ap_phi_reg_pp0_iter0_act_m_val_V_reg_710;
reg   [23:0] ap_phi_reg_pp0_iter1_act_m_val_V_reg_710;
reg   [23:0] ap_phi_reg_pp0_iter2_act_m_val_V_reg_710;
wire   [63:0] tmp_103_i_i_fu_1185_p1;
wire   [63:0] tmp_110_i_i_fu_2338_p1;
reg    ap_block_pp0_stage0_01001;
reg   [23:0] accu_V_0_i_i_fu_152;
wire   [23:0] accu_0_V_fu_2543_p2;
reg   [23:0] accu_V_1_i_i_fu_156;
wire   [23:0] accu_1_V_fu_2575_p2;
reg   [23:0] accu_V_2_i_i_fu_160;
wire   [23:0] accu_2_V_fu_2607_p2;
reg   [23:0] accu_V_3_i_i_fu_164;
wire   [23:0] accu_3_V_fu_2639_p2;
reg   [23:0] accu_V_4_i_i_fu_168;
wire   [23:0] accu_4_V_fu_2671_p2;
reg   [23:0] accu_V_5_i_i_fu_172;
wire   [23:0] accu_5_V_fu_2703_p2;
reg   [23:0] accu_V_6_i_i_fu_176;
wire   [23:0] accu_6_V_fu_2735_p2;
reg   [23:0] accu_V_7_i_i_fu_180;
wire   [23:0] accu_7_V_fu_2767_p2;
reg   [23:0] accu_V_8_i_i_fu_184;
wire   [23:0] accu_8_V_fu_2799_p2;
reg   [23:0] accu_V_9_i_i_fu_188;
wire   [23:0] accu_9_V_fu_2831_p2;
reg   [23:0] accu_V_10_i_i_fu_192;
wire   [23:0] accu_10_V_fu_2863_p2;
reg   [23:0] accu_V_11_i_i_fu_196;
wire   [23:0] accu_11_V_fu_2895_p2;
reg   [23:0] accu_V_12_i_i_fu_200;
wire   [23:0] accu_12_V_fu_2927_p2;
reg   [23:0] accu_V_13_i_i_fu_204;
wire   [23:0] accu_13_V_fu_2959_p2;
reg   [23:0] accu_V_14_i_i_fu_208;
wire   [23:0] accu_14_V_fu_2991_p2;
reg   [23:0] accu_V_15_i_i_fu_212;
wire   [23:0] accu_15_V_fu_3023_p2;
reg   [31:0] tile_assign_fu_216;
wire   [31:0] tile_fu_1205_p2;
wire   [31:0] p_4_i_i_fu_1216_p3;
reg   [31:0] sf_5_fu_220;
wire   [31:0] sf_fu_792_p2;
reg   [31:0] nf_assign_fu_224;
wire   [31:0] p_i_i_fu_824_p3;
reg   [23:0] inputBuf_8_V_2_fu_228;
wire   [23:0] inputBuf_8_V_24_fu_1129_p3;
reg   [23:0] inputBuf_8_V_13_fu_232;
wire   [23:0] inputBuf_8_V_23_fu_1121_p3;
reg   [23:0] inputBuf_8_V_11_fu_236;
wire   [23:0] inputBuf_8_V_21_fu_1105_p3;
reg   [23:0] inputBuf_8_V_9_fu_240;
wire   [23:0] inputBuf_8_V_20_fu_1089_p3;
reg   [23:0] inputBuf_8_V_7_fu_244;
wire   [23:0] inputBuf_8_V_8_fu_1065_p3;
reg   [23:0] inputBuf_8_V_5_fu_248;
wire   [23:0] inputBuf_8_V_6_fu_1049_p3;
reg   [23:0] inputBuf_8_V_3_fu_252;
wire   [23:0] inputBuf_8_V_4_fu_1025_p3;
reg   [23:0] inputBuf_8_V_16_fu_256;
wire   [23:0] inputBuf_8_V_1_fu_1001_p3;
reg   [23:0] inputBuf_8_V_18_fu_260;
wire   [23:0] inputBuf_8_V_fu_969_p3;
wire   [31:0] tmp_fu_724_p2;
wire   [31:0] tmp_1265_fu_730_p2;
wire   [31:0] nf_fu_812_p2;
wire   [0:0] sel_tmp7_fu_922_p2;
wire   [0:0] sel_tmp6_fu_917_p2;
wire   [0:0] sel_tmp5_fu_912_p2;
wire   [0:0] sel_tmp4_fu_907_p2;
wire   [0:0] sel_tmp3_fu_902_p2;
wire   [0:0] sel_tmp2_fu_897_p2;
wire   [0:0] sel_tmp1_fu_892_p2;
wire   [0:0] sel_tmp_fu_887_p2;
wire   [0:0] or_cond_fu_927_p2;
wire   [0:0] or_cond1_fu_933_p2;
wire   [0:0] or_cond2_fu_939_p2;
wire   [0:0] or_cond3_fu_945_p2;
wire   [0:0] or_cond4_fu_951_p2;
wire   [0:0] or_cond5_fu_957_p2;
wire   [0:0] or_cond6_fu_963_p2;
wire   [23:0] newSel_fu_977_p3;
wire   [23:0] newSel1_fu_985_p3;
wire   [23:0] newSel2_fu_993_p3;
wire   [23:0] newSel4_fu_1009_p3;
wire   [23:0] newSel5_fu_1017_p3;
wire   [23:0] newSel7_fu_1033_p3;
wire   [23:0] newSel8_fu_1041_p3;
wire   [23:0] newSel3_fu_1057_p3;
wire   [23:0] newSel6_fu_1073_p3;
wire   [23:0] newSel9_fu_1081_p3;
wire   [23:0] newSel10_fu_1097_p3;
wire   [23:0] inputBuf_8_V_22_fu_1113_p3;
wire   [7:0] tmp_1269_fu_1232_p1;
wire   [7:0] arg_V_read_assign_1_fu_1254_p4;
wire  signed [8:0] tmp_112_0_1_i_i_fu_1264_p1;
wire   [0:0] tmp_1270_fu_1246_p3;
wire   [8:0] ret_V_2_0_1_i_i_fu_1268_p2;
wire   [8:0] p_Val2_11_0_1_i_i_fu_1274_p3;
wire   [9:0] tmp_116_0_1_i_i_fu_1282_p3;
wire   [7:0] arg_V_read_assign_2_fu_1302_p4;
wire  signed [8:0] tmp_112_0_2_i_i_fu_1312_p1;
wire   [0:0] tmp_1271_fu_1294_p3;
wire   [8:0] ret_V_2_0_2_i_i_fu_1316_p2;
wire   [8:0] p_Val2_11_0_2_i_i_fu_1322_p3;
wire   [9:0] tmp_116_0_2_i_i_fu_1330_p3;
wire  signed [10:0] tmp_116_0_1_cast_i_i_fu_1290_p1;
wire  signed [10:0] tmp_116_0_2_cast_i_i_fu_1338_p1;
wire   [0:0] tmp_1273_fu_1352_p3;
wire   [8:0] p_Val2_11_1_1_i_i_fu_1360_p3;
wire   [9:0] tmp_116_1_1_i_i_fu_1368_p3;
wire   [0:0] tmp_1274_fu_1380_p3;
wire   [8:0] p_Val2_11_1_2_i_i_fu_1388_p3;
wire   [9:0] tmp_116_1_2_i_i_fu_1396_p3;
wire  signed [10:0] tmp_116_1_1_cast_i_i_fu_1376_p1;
wire  signed [10:0] tmp_116_1_2_cast_i_i_fu_1404_p1;
wire   [0:0] tmp_1276_fu_1418_p3;
wire   [8:0] p_Val2_11_2_1_i_i_fu_1426_p3;
wire   [9:0] tmp_116_2_1_i_i_fu_1434_p3;
wire   [0:0] tmp_1277_fu_1446_p3;
wire   [8:0] p_Val2_11_2_2_i_i_fu_1454_p3;
wire   [9:0] tmp_116_2_2_i_i_fu_1462_p3;
wire  signed [10:0] tmp_116_2_1_cast_i_i_fu_1442_p1;
wire  signed [10:0] tmp_116_2_2_cast_i_i_fu_1470_p1;
wire   [0:0] tmp_1279_fu_1484_p3;
wire   [8:0] p_Val2_11_3_1_i_i_fu_1492_p3;
wire   [9:0] tmp_116_3_1_i_i_fu_1500_p3;
wire   [0:0] tmp_1280_fu_1512_p3;
wire   [8:0] p_Val2_11_3_2_i_i_fu_1520_p3;
wire   [9:0] tmp_116_3_2_i_i_fu_1528_p3;
wire  signed [10:0] tmp_116_3_1_cast_i_i_fu_1508_p1;
wire  signed [10:0] tmp_116_3_2_cast_i_i_fu_1536_p1;
wire   [0:0] tmp_1282_fu_1550_p3;
wire   [8:0] p_Val2_11_4_1_i_i_fu_1558_p3;
wire   [9:0] tmp_116_4_1_i_i_fu_1566_p3;
wire   [0:0] tmp_1283_fu_1578_p3;
wire   [8:0] p_Val2_11_4_2_i_i_fu_1586_p3;
wire   [9:0] tmp_116_4_2_i_i_fu_1594_p3;
wire  signed [10:0] tmp_116_4_1_cast_i_i_fu_1574_p1;
wire  signed [10:0] tmp_116_4_2_cast_i_i_fu_1602_p1;
wire   [0:0] tmp_1285_fu_1616_p3;
wire   [8:0] p_Val2_11_5_1_i_i_fu_1624_p3;
wire   [9:0] tmp_116_5_1_i_i_fu_1632_p3;
wire   [0:0] tmp_1286_fu_1644_p3;
wire   [8:0] p_Val2_11_5_2_i_i_fu_1652_p3;
wire   [9:0] tmp_116_5_2_i_i_fu_1660_p3;
wire  signed [10:0] tmp_116_5_1_cast_i_i_fu_1640_p1;
wire  signed [10:0] tmp_116_5_2_cast_i_i_fu_1668_p1;
wire   [0:0] tmp_1288_fu_1682_p3;
wire   [8:0] p_Val2_11_6_1_i_i_fu_1690_p3;
wire   [9:0] tmp_116_6_1_i_i_fu_1698_p3;
wire   [0:0] tmp_1289_fu_1710_p3;
wire   [8:0] p_Val2_11_6_2_i_i_fu_1718_p3;
wire   [9:0] tmp_116_6_2_i_i_fu_1726_p3;
wire  signed [10:0] tmp_116_6_1_cast_i_i_fu_1706_p1;
wire  signed [10:0] tmp_116_6_2_cast_i_i_fu_1734_p1;
wire   [0:0] tmp_1291_fu_1748_p3;
wire   [8:0] p_Val2_11_7_1_i_i_fu_1756_p3;
wire   [9:0] tmp_116_7_1_i_i_fu_1764_p3;
wire   [0:0] tmp_1292_fu_1776_p3;
wire   [8:0] p_Val2_11_7_2_i_i_fu_1784_p3;
wire   [9:0] tmp_116_7_2_i_i_fu_1792_p3;
wire  signed [10:0] tmp_116_7_1_cast_i_i_fu_1772_p1;
wire  signed [10:0] tmp_116_7_2_cast_i_i_fu_1800_p1;
wire   [0:0] tmp_1294_fu_1814_p3;
wire   [8:0] p_Val2_11_8_1_i_i_fu_1822_p3;
wire   [9:0] tmp_116_8_1_i_i_fu_1830_p3;
wire   [0:0] tmp_1295_fu_1842_p3;
wire   [8:0] p_Val2_11_8_2_i_i_fu_1850_p3;
wire   [9:0] tmp_116_8_2_i_i_fu_1858_p3;
wire  signed [10:0] tmp_116_8_1_cast_i_i_fu_1838_p1;
wire  signed [10:0] tmp_116_8_2_cast_i_i_fu_1866_p1;
wire   [0:0] tmp_1297_fu_1880_p3;
wire   [8:0] p_Val2_11_9_1_i_i_fu_1888_p3;
wire   [9:0] tmp_116_9_1_i_i_fu_1896_p3;
wire   [0:0] tmp_1298_fu_1908_p3;
wire   [8:0] p_Val2_11_9_2_i_i_fu_1916_p3;
wire   [9:0] tmp_116_9_2_i_i_fu_1924_p3;
wire  signed [10:0] tmp_116_9_1_cast_i_i_fu_1904_p1;
wire  signed [10:0] tmp_116_9_2_cast_i_i_fu_1932_p1;
wire   [0:0] tmp_1300_fu_1946_p3;
wire   [8:0] p_Val2_11_10_1_i_i_fu_1954_p3;
wire   [9:0] tmp_116_10_1_i_i_fu_1962_p3;
wire   [0:0] tmp_1301_fu_1974_p3;
wire   [8:0] p_Val2_11_10_2_i_i_fu_1982_p3;
wire   [9:0] tmp_116_10_2_i_i_fu_1990_p3;
wire  signed [10:0] tmp_116_10_1_cast_i_s_fu_1970_p1;
wire  signed [10:0] tmp_116_10_2_cast_i_s_fu_1998_p1;
wire   [0:0] tmp_1303_fu_2012_p3;
wire   [8:0] p_Val2_11_11_1_i_i_fu_2020_p3;
wire   [9:0] tmp_116_11_1_i_i_fu_2028_p3;
wire   [0:0] tmp_1304_fu_2040_p3;
wire   [8:0] p_Val2_11_11_2_i_i_fu_2048_p3;
wire   [9:0] tmp_116_11_2_i_i_fu_2056_p3;
wire  signed [10:0] tmp_116_11_1_cast_i_s_fu_2036_p1;
wire  signed [10:0] tmp_116_11_2_cast_i_s_fu_2064_p1;
wire   [0:0] tmp_1306_fu_2078_p3;
wire   [8:0] p_Val2_11_12_1_i_i_fu_2086_p3;
wire   [9:0] tmp_116_12_1_i_i_fu_2094_p3;
wire   [0:0] tmp_1307_fu_2106_p3;
wire   [8:0] p_Val2_11_12_2_i_i_fu_2114_p3;
wire   [9:0] tmp_116_12_2_i_i_fu_2122_p3;
wire  signed [10:0] tmp_116_12_1_cast_i_s_fu_2102_p1;
wire  signed [10:0] tmp_116_12_2_cast_i_s_fu_2130_p1;
wire   [0:0] tmp_1309_fu_2144_p3;
wire   [8:0] p_Val2_11_13_1_i_i_fu_2152_p3;
wire   [9:0] tmp_116_13_1_i_i_fu_2160_p3;
wire   [0:0] tmp_1310_fu_2172_p3;
wire   [8:0] p_Val2_11_13_2_i_i_fu_2180_p3;
wire   [9:0] tmp_116_13_2_i_i_fu_2188_p3;
wire  signed [10:0] tmp_116_13_1_cast_i_s_fu_2168_p1;
wire  signed [10:0] tmp_116_13_2_cast_i_s_fu_2196_p1;
wire   [0:0] tmp_1312_fu_2210_p3;
wire   [8:0] p_Val2_11_14_1_i_i_fu_2218_p3;
wire   [9:0] tmp_116_14_1_i_i_fu_2226_p3;
wire   [0:0] tmp_1313_fu_2238_p3;
wire   [8:0] p_Val2_11_14_2_i_i_fu_2246_p3;
wire   [9:0] tmp_116_14_2_i_i_fu_2254_p3;
wire  signed [10:0] tmp_116_14_1_cast_i_s_fu_2234_p1;
wire  signed [10:0] tmp_116_14_2_cast_i_s_fu_2262_p1;
wire   [0:0] tmp_1315_fu_2276_p3;
wire   [8:0] p_Val2_11_15_1_i_i_fu_2284_p3;
wire   [9:0] tmp_116_15_1_i_i_fu_2292_p3;
wire   [0:0] tmp_1316_fu_2304_p3;
wire   [8:0] p_Val2_11_15_2_i_i_fu_2312_p3;
wire   [9:0] tmp_116_15_2_i_i_fu_2320_p3;
wire  signed [10:0] tmp_116_15_1_cast_i_s_fu_2300_p1;
wire  signed [10:0] tmp_116_15_2_cast_i_s_fu_2328_p1;
wire   [8:0] p_Val2_11_0_i_i_fu_2517_p3;
wire   [9:0] tmp_116_0_i_i_fu_2522_p3;
wire   [23:0] p_accu_V_0_i_i_fu_2510_p3;
wire  signed [23:0] tmp_116_0_cast_i_i_fu_2530_p1;
wire  signed [23:0] tmp154_cast_fu_2540_p1;
wire   [23:0] tmp153_fu_2534_p2;
wire   [8:0] p_Val2_11_1_i_i_fu_2549_p3;
wire   [9:0] tmp_116_1_i_i_fu_2554_p3;
wire   [23:0] p_accu_V_1_i_i_fu_2503_p3;
wire  signed [23:0] tmp_116_1_cast_i_i_fu_2562_p1;
wire  signed [23:0] tmp157_cast_fu_2572_p1;
wire   [23:0] tmp156_fu_2566_p2;
wire   [8:0] p_Val2_11_2_i_i_fu_2581_p3;
wire   [9:0] tmp_116_2_i_i_fu_2586_p3;
wire   [23:0] p_accu_V_2_i_i_fu_2496_p3;
wire  signed [23:0] tmp_116_2_cast_i_i_fu_2594_p1;
wire  signed [23:0] tmp160_cast_fu_2604_p1;
wire   [23:0] tmp159_fu_2598_p2;
wire   [8:0] p_Val2_11_3_i_i_fu_2613_p3;
wire   [9:0] tmp_116_3_i_i_fu_2618_p3;
wire   [23:0] p_accu_V_3_i_i_fu_2489_p3;
wire  signed [23:0] tmp_116_3_cast_i_i_fu_2626_p1;
wire  signed [23:0] tmp163_cast_fu_2636_p1;
wire   [23:0] tmp162_fu_2630_p2;
wire   [8:0] p_Val2_11_4_i_i_fu_2645_p3;
wire   [9:0] tmp_116_4_i_i_fu_2650_p3;
wire   [23:0] p_accu_V_4_i_i_fu_2482_p3;
wire  signed [23:0] tmp_116_4_cast_i_i_fu_2658_p1;
wire  signed [23:0] tmp166_cast_fu_2668_p1;
wire   [23:0] tmp165_fu_2662_p2;
wire   [8:0] p_Val2_11_5_i_i_fu_2677_p3;
wire   [9:0] tmp_116_5_i_i_fu_2682_p3;
wire   [23:0] p_accu_V_5_i_i_fu_2475_p3;
wire  signed [23:0] tmp_116_5_cast_i_i_fu_2690_p1;
wire  signed [23:0] tmp169_cast_fu_2700_p1;
wire   [23:0] tmp168_fu_2694_p2;
wire   [8:0] p_Val2_11_6_i_i_fu_2709_p3;
wire   [9:0] tmp_116_6_i_i_fu_2714_p3;
wire   [23:0] p_accu_V_6_i_i_fu_2468_p3;
wire  signed [23:0] tmp_116_6_cast_i_i_fu_2722_p1;
wire  signed [23:0] tmp172_cast_fu_2732_p1;
wire   [23:0] tmp171_fu_2726_p2;
wire   [8:0] p_Val2_11_7_i_i_fu_2741_p3;
wire   [9:0] tmp_116_7_i_i_fu_2746_p3;
wire   [23:0] p_accu_V_7_i_i_fu_2461_p3;
wire  signed [23:0] tmp_116_7_cast_i_i_fu_2754_p1;
wire  signed [23:0] tmp175_cast_fu_2764_p1;
wire   [23:0] tmp174_fu_2758_p2;
wire   [8:0] p_Val2_11_8_i_i_fu_2773_p3;
wire   [9:0] tmp_116_8_i_i_fu_2778_p3;
wire   [23:0] p_accu_V_8_i_i_fu_2454_p3;
wire  signed [23:0] tmp_116_8_cast_i_i_fu_2786_p1;
wire  signed [23:0] tmp178_cast_fu_2796_p1;
wire   [23:0] tmp177_fu_2790_p2;
wire   [8:0] p_Val2_11_9_i_i_fu_2805_p3;
wire   [9:0] tmp_116_9_i_i_fu_2810_p3;
wire   [23:0] p_accu_V_9_i_i_fu_2447_p3;
wire  signed [23:0] tmp_116_9_cast_i_i_fu_2818_p1;
wire  signed [23:0] tmp181_cast_fu_2828_p1;
wire   [23:0] tmp180_fu_2822_p2;
wire   [8:0] p_Val2_11_10_i_i_fu_2837_p3;
wire   [9:0] tmp_116_10_i_i_fu_2842_p3;
wire   [23:0] p_accu_V_10_i_i_fu_2440_p3;
wire  signed [23:0] tmp_116_10_cast_i_i_fu_2850_p1;
wire  signed [23:0] tmp184_cast_fu_2860_p1;
wire   [23:0] tmp183_fu_2854_p2;
wire   [8:0] p_Val2_11_11_i_i_fu_2869_p3;
wire   [9:0] tmp_116_11_i_i_fu_2874_p3;
wire   [23:0] p_accu_V_11_i_i_fu_2433_p3;
wire  signed [23:0] tmp_116_11_cast_i_i_fu_2882_p1;
wire  signed [23:0] tmp187_cast_fu_2892_p1;
wire   [23:0] tmp186_fu_2886_p2;
wire   [8:0] p_Val2_11_12_i_i_fu_2901_p3;
wire   [9:0] tmp_116_12_i_i_fu_2906_p3;
wire   [23:0] p_accu_V_12_i_i_fu_2426_p3;
wire  signed [23:0] tmp_116_12_cast_i_i_fu_2914_p1;
wire  signed [23:0] tmp190_cast_fu_2924_p1;
wire   [23:0] tmp189_fu_2918_p2;
wire   [8:0] p_Val2_11_13_i_i_fu_2933_p3;
wire   [9:0] tmp_116_13_i_i_fu_2938_p3;
wire   [23:0] p_accu_V_13_i_i_fu_2419_p3;
wire  signed [23:0] tmp_116_13_cast_i_i_fu_2946_p1;
wire  signed [23:0] tmp193_cast_fu_2956_p1;
wire   [23:0] tmp192_fu_2950_p2;
wire   [8:0] p_Val2_11_14_i_i_fu_2965_p3;
wire   [9:0] tmp_116_14_i_i_fu_2970_p3;
wire   [23:0] p_accu_V_14_i_i_fu_2412_p3;
wire  signed [23:0] tmp_116_14_cast_i_i_fu_2978_p1;
wire  signed [23:0] tmp196_cast_fu_2988_p1;
wire   [23:0] tmp195_fu_2982_p2;
wire   [8:0] p_Val2_11_15_i_i_fu_2997_p3;
wire   [9:0] tmp_116_15_i_i_fu_3002_p3;
wire   [23:0] p_accu_V_15_i_i_fu_2405_p3;
wire  signed [23:0] tmp_116_15_cast_i_i_fu_3010_p1;
wire  signed [23:0] tmp199_cast_fu_3020_p1;
wire   [23:0] tmp198_fu_3014_p2;
wire    ap_CS_fsm_state7;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_547;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

BBJ_u96_cnvW1A1_mhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 24 ),
    .din4_WIDTH( 24 ),
    .din5_WIDTH( 24 ),
    .din6_WIDTH( 24 ),
    .din7_WIDTH( 24 ),
    .din8_WIDTH( 24 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 24 ))
BBJ_u96_cnvW1A1_mhbi_U44(
    .din0(inputBuf_8_V_2_fu_228),
    .din1(inputBuf_8_V_13_fu_232),
    .din2(inputBuf_8_V_11_fu_236),
    .din3(inputBuf_8_V_9_fu_240),
    .din4(inputBuf_8_V_7_fu_244),
    .din5(inputBuf_8_V_5_fu_248),
    .din6(inputBuf_8_V_3_fu_252),
    .din7(inputBuf_8_V_16_fu_256),
    .din8(inputBuf_8_V_18_fu_260),
    .din9(tmp_1267_reg_3418),
    .dout(inElem_V_fu_864_p11)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (tmp_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((~((real_start == 1'b0) | (tmp_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_547)) begin
        if (((tmp_i_i_1069_reg_3414 == 1'd0) & (exitcond_i_i_reg_3405 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_act_m_val_V_reg_710 <= inElem_V_fu_864_p11;
        end else if (((tmp_i_i_1069_reg_3414 == 1'd1) & (exitcond_i_i_reg_3405 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_act_m_val_V_reg_710 <= in_V_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_act_m_val_V_reg_710 <= ap_phi_reg_pp0_iter1_act_m_val_V_reg_710;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_i_i_fu_752_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_i_i_reg_699 <= i_fu_757_p2;
    end else if ((~((real_start == 1'b0) | (tmp_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_i_i_reg_699 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_fu_798_p2 == 1'd1) & (exitcond_i_i_fu_752_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        nf_assign_fu_224 <= p_i_i_fu_824_p3;
    end else if ((~((real_start == 1'b0) | (tmp_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        nf_assign_fu_224 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_fu_798_p2 == 1'd0) & (exitcond_i_i_fu_752_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sf_5_fu_220 <= sf_fu_792_p2;
    end else if (((~((real_start == 1'b0) | (tmp_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_fu_798_p2 == 1'd1) & (exitcond_i_i_fu_752_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        sf_5_fu_220 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_reg_3455 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tile_assign_fu_216 <= p_4_i_i_fu_1216_p3;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_reg_3455 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tile_assign_fu_216 <= tile_fu_1205_p2;
    end else if ((~((real_start == 1'b0) | (tmp_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tile_assign_fu_216 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        accu_V_0_i_i_fu_152 <= accu_0_V_fu_2543_p2;
        accu_V_10_i_i_fu_192 <= accu_10_V_fu_2863_p2;
        accu_V_11_i_i_fu_196 <= accu_11_V_fu_2895_p2;
        accu_V_12_i_i_fu_200 <= accu_12_V_fu_2927_p2;
        accu_V_13_i_i_fu_204 <= accu_13_V_fu_2959_p2;
        accu_V_14_i_i_fu_208 <= accu_14_V_fu_2991_p2;
        accu_V_15_i_i_fu_212 <= accu_15_V_fu_3023_p2;
        accu_V_1_i_i_fu_156 <= accu_1_V_fu_2575_p2;
        accu_V_2_i_i_fu_160 <= accu_2_V_fu_2607_p2;
        accu_V_3_i_i_fu_164 <= accu_3_V_fu_2639_p2;
        accu_V_4_i_i_fu_168 <= accu_4_V_fu_2671_p2;
        accu_V_5_i_i_fu_172 <= accu_5_V_fu_2703_p2;
        accu_V_6_i_i_fu_176 <= accu_6_V_fu_2735_p2;
        accu_V_7_i_i_fu_180 <= accu_7_V_fu_2767_p2;
        accu_V_8_i_i_fu_184 <= accu_8_V_fu_2799_p2;
        accu_V_9_i_i_fu_188 <= accu_9_V_fu_2831_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_act_m_val_V_reg_710 <= ap_phi_reg_pp0_iter0_act_m_val_V_reg_710;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_i_i_reg_3405 <= exitcond_i_i_fu_752_p2;
        nf_assign_load_reg_3459_pp0_iter1_reg <= nf_assign_load_reg_3459;
        tmp_31_i_i_reg_3435_pp0_iter1_reg <= tmp_31_i_i_reg_3435;
        tmp_32_i_i_reg_3455_pp0_iter1_reg <= tmp_32_i_i_reg_3455;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op84_read_state3 == 1'b1))) begin
        inputBuf_8_V_11_fu_236 <= inputBuf_8_V_21_fu_1105_p3;
        inputBuf_8_V_13_fu_232 <= inputBuf_8_V_23_fu_1121_p3;
        inputBuf_8_V_16_fu_256 <= inputBuf_8_V_1_fu_1001_p3;
        inputBuf_8_V_18_fu_260 <= inputBuf_8_V_fu_969_p3;
        inputBuf_8_V_2_fu_228 <= inputBuf_8_V_24_fu_1129_p3;
        inputBuf_8_V_3_fu_252 <= inputBuf_8_V_4_fu_1025_p3;
        inputBuf_8_V_5_fu_248 <= inputBuf_8_V_6_fu_1049_p3;
        inputBuf_8_V_7_fu_244 <= inputBuf_8_V_8_fu_1065_p3;
        inputBuf_8_V_9_fu_240 <= inputBuf_8_V_20_fu_1089_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_fu_798_p2 == 1'd1) & (exitcond_i_i_fu_752_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        nf_assign_load_reg_3459 <= nf_assign_fu_224;
        tmp_33_i_i_reg_3464 <= tmp_33_i_i_fu_818_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ret_V_2_0_i_i_reg_3584 <= ret_V_2_0_i_i_fu_1240_p2;
        tmp154_reg_3604[10 : 1] <= tmp154_fu_1342_p2[10 : 1];
        tmp157_reg_3614[10 : 1] <= tmp157_fu_1408_p2[10 : 1];
        tmp160_reg_3624[10 : 1] <= tmp160_fu_1474_p2[10 : 1];
        tmp163_reg_3634[10 : 1] <= tmp163_fu_1540_p2[10 : 1];
        tmp166_reg_3644[10 : 1] <= tmp166_fu_1606_p2[10 : 1];
        tmp169_reg_3654[10 : 1] <= tmp169_fu_1672_p2[10 : 1];
        tmp172_reg_3664[10 : 1] <= tmp172_fu_1738_p2[10 : 1];
        tmp175_reg_3674[10 : 1] <= tmp175_fu_1804_p2[10 : 1];
        tmp178_reg_3684[10 : 1] <= tmp178_fu_1870_p2[10 : 1];
        tmp181_reg_3694[10 : 1] <= tmp181_fu_1936_p2[10 : 1];
        tmp184_reg_3704[10 : 1] <= tmp184_fu_2002_p2[10 : 1];
        tmp187_reg_3714[10 : 1] <= tmp187_fu_2068_p2[10 : 1];
        tmp190_reg_3724[10 : 1] <= tmp190_fu_2134_p2[10 : 1];
        tmp193_reg_3734[10 : 1] <= tmp193_fu_2200_p2[10 : 1];
        tmp196_reg_3744[10 : 1] <= tmp196_fu_2266_p2[10 : 1];
        tmp199_reg_3754[10 : 1] <= tmp199_fu_2332_p2[10 : 1];
        tmp_112_0_i_i_reg_3564 <= tmp_112_0_i_i_fu_1236_p1;
        tmp_1268_reg_3559 <= tmp_1268_fu_1228_p1;
        tmp_1272_reg_3609 <= tmp_1272_fu_1348_p1;
        tmp_1275_reg_3619 <= tmp_1275_fu_1414_p1;
        tmp_1278_reg_3629 <= tmp_1278_fu_1480_p1;
        tmp_1281_reg_3639 <= tmp_1281_fu_1546_p1;
        tmp_1284_reg_3649 <= tmp_1284_fu_1612_p1;
        tmp_1287_reg_3659 <= tmp_1287_fu_1678_p1;
        tmp_1290_reg_3669 <= tmp_1290_fu_1744_p1;
        tmp_1293_reg_3679 <= tmp_1293_fu_1810_p1;
        tmp_1296_reg_3689 <= tmp_1296_fu_1876_p1;
        tmp_1299_reg_3699 <= tmp_1299_fu_1942_p1;
        tmp_1302_reg_3709 <= tmp_1302_fu_2008_p1;
        tmp_1305_reg_3719 <= tmp_1305_fu_2074_p1;
        tmp_1308_reg_3729 <= tmp_1308_fu_2140_p1;
        tmp_1311_reg_3739 <= tmp_1311_fu_2206_p1;
        tmp_1314_reg_3749 <= tmp_1314_fu_2272_p1;
        tmp_31_i_i_reg_3435_pp0_iter2_reg <= tmp_31_i_i_reg_3435_pp0_iter1_reg;
        tmp_32_i_i_reg_3455_pp0_iter2_reg <= tmp_32_i_i_reg_3455_pp0_iter1_reg;
        tmp_32_i_i_reg_3455_pp0_iter3_reg <= tmp_32_i_i_reg_3455_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_i_i_1069_fu_766_p2 == 1'd1) & (exitcond_i_i_fu_752_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_1266_reg_3423 <= tmp_1266_fu_779_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_i_i_1069_fu_766_p2 == 1'd0) & (exitcond_i_i_fu_752_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_1267_reg_3418 <= tmp_1267_fu_775_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_i_i_fu_752_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_31_i_i_reg_3435 <= tmp_31_i_i_fu_786_p2;
        tmp_32_i_i_reg_3455 <= tmp_32_i_i_fu_798_p2;
        tmp_i_i_1069_reg_3414 <= tmp_i_i_1069_fu_766_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_reg_3455_pp0_iter2_reg == 1'd1))) begin
        tmp_i1151_i_i_reg_3844 <= tmp_i1151_i_i_fu_3115_p2;
        tmp_i1152_i_i_reg_3849 <= tmp_i1152_i_i_fu_3121_p2;
        tmp_i1153_i_i_reg_3854 <= tmp_i1153_i_i_fu_3127_p2;
        tmp_i1154_i_i_reg_3859 <= tmp_i1154_i_i_fu_3133_p2;
        tmp_i1155_i_i_reg_3864 <= tmp_i1155_i_i_fu_3139_p2;
        tmp_i1156_i_i_reg_3869 <= tmp_i1156_i_i_fu_3145_p2;
        tmp_i1157_i_i_reg_3874 <= tmp_i1157_i_i_fu_3151_p2;
        tmp_i1158_i_i_reg_3879 <= tmp_i1158_i_i_fu_3157_p2;
        tmp_i1159_i_i_reg_3884 <= tmp_i1159_i_i_fu_3163_p2;
        tmp_i1160_i_i_reg_3889 <= tmp_i1160_i_i_fu_3169_p2;
        tmp_i1161_i_i_reg_3894 <= tmp_i1161_i_i_fu_3175_p2;
        tmp_i1162_i_i_reg_3899 <= tmp_i1162_i_i_fu_3181_p2;
        tmp_i1163_i_i_reg_3904 <= tmp_i1163_i_i_fu_3187_p2;
        tmp_i1164_i_i_reg_3909 <= tmp_i1164_i_i_fu_3193_p2;
        tmp_i1165_i_i_reg_3914 <= tmp_i1165_i_i_fu_3199_p2;
        tmp_i_i_i_reg_3839 <= tmp_i_i_i_fu_3109_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (tmp_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_i_i_reg_3400[31 : 2] <= tmp_i_i_fu_736_p2[31 : 2];
    end
end

always @ (*) begin
    if ((exitcond_i_i_fu_752_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_i_i_1069_reg_3414 == 1'd1) & (exitcond_i_i_reg_3405 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op84_read_state3 == 1'b1))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_32_i_i_reg_3455_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_reg_3455_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_10_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_11_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_12_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_13_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_14_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_15_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_1_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_2_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_3_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_4_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_5_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_6_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_7_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_8_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_9_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_loc_blk_n = tmp_loc_empty_n;
    end else begin
        tmp_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (tmp_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_loc_read = 1'b1;
    end else begin
        tmp_loc_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_10_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_11_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_12_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_13_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_14_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_15_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_1_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_2_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_3_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_4_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_5_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_6_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_7_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_8_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_9_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (tmp_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_i_i_fu_752_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_i_i_fu_752_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign accu_0_V_fu_2543_p2 = ($signed(tmp154_cast_fu_2540_p1) + $signed(tmp153_fu_2534_p2));

assign accu_10_V_fu_2863_p2 = ($signed(tmp184_cast_fu_2860_p1) + $signed(tmp183_fu_2854_p2));

assign accu_11_V_fu_2895_p2 = ($signed(tmp187_cast_fu_2892_p1) + $signed(tmp186_fu_2886_p2));

assign accu_12_V_fu_2927_p2 = ($signed(tmp190_cast_fu_2924_p1) + $signed(tmp189_fu_2918_p2));

assign accu_13_V_fu_2959_p2 = ($signed(tmp193_cast_fu_2956_p1) + $signed(tmp192_fu_2950_p2));

assign accu_14_V_fu_2991_p2 = ($signed(tmp196_cast_fu_2988_p1) + $signed(tmp195_fu_2982_p2));

assign accu_15_V_fu_3023_p2 = ($signed(tmp199_cast_fu_3020_p1) + $signed(tmp198_fu_3014_p2));

assign accu_1_V_fu_2575_p2 = ($signed(tmp157_cast_fu_2572_p1) + $signed(tmp156_fu_2566_p2));

assign accu_2_V_fu_2607_p2 = ($signed(tmp160_cast_fu_2604_p1) + $signed(tmp159_fu_2598_p2));

assign accu_3_V_fu_2639_p2 = ($signed(tmp163_cast_fu_2636_p1) + $signed(tmp162_fu_2630_p2));

assign accu_4_V_fu_2671_p2 = ($signed(tmp166_cast_fu_2668_p1) + $signed(tmp165_fu_2662_p2));

assign accu_5_V_fu_2703_p2 = ($signed(tmp169_cast_fu_2700_p1) + $signed(tmp168_fu_2694_p2));

assign accu_6_V_fu_2735_p2 = ($signed(tmp172_cast_fu_2732_p1) + $signed(tmp171_fu_2726_p2));

assign accu_7_V_fu_2767_p2 = ($signed(tmp175_cast_fu_2764_p1) + $signed(tmp174_fu_2758_p2));

assign accu_8_V_fu_2799_p2 = ($signed(tmp178_cast_fu_2796_p1) + $signed(tmp177_fu_2790_p2));

assign accu_9_V_fu_2831_p2 = ($signed(tmp181_cast_fu_2828_p1) + $signed(tmp180_fu_2822_p2));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((out_V_V_full_n == 1'b0) & (tmp_32_i_i_reg_3455_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op84_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((out_V_V_full_n == 1'b0) & (tmp_32_i_i_reg_3455_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op84_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((out_V_V_full_n == 1'b0) & (tmp_32_i_i_reg_3455_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op84_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (tmp_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((in_V_V_empty_n == 1'b0) & (ap_predicate_op84_read_state3 == 1'b1));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter4 = ((out_V_V_full_n == 1'b0) & (tmp_32_i_i_reg_3455_pp0_iter3_reg == 1'd1));
end

always @ (*) begin
    ap_condition_547 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_act_m_val_V_reg_710 = 'bx;

always @ (*) begin
    ap_predicate_op84_read_state3 = ((tmp_i_i_1069_reg_3414 == 1'd1) & (exitcond_i_i_reg_3405 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign arg_V_read_assign_1_fu_1254_p4 = {{ap_phi_reg_pp0_iter2_act_m_val_V_reg_710[15:8]}};

assign arg_V_read_assign_2_fu_1302_p4 = {{ap_phi_reg_pp0_iter2_act_m_val_V_reg_710[23:16]}};

assign exitcond_i_i_fu_752_p2 = ((i_i_i_reg_699 == tmp_i_i_reg_3400) ? 1'b1 : 1'b0);

assign i_fu_757_p2 = (i_i_i_reg_699 + 32'd1);

assign inputBuf_8_V_1_fu_1001_p3 = ((or_cond6_fu_963_p2[0:0] === 1'b1) ? newSel2_fu_993_p3 : inputBuf_8_V_16_fu_256);

assign inputBuf_8_V_20_fu_1089_p3 = ((or_cond4_fu_951_p2[0:0] === 1'b1) ? newSel9_fu_1081_p3 : inputBuf_8_V_9_fu_240);

assign inputBuf_8_V_21_fu_1105_p3 = ((or_cond_fu_927_p2[0:0] === 1'b1) ? inputBuf_8_V_11_fu_236 : newSel10_fu_1097_p3);

assign inputBuf_8_V_22_fu_1113_p3 = ((sel_tmp6_fu_917_p2[0:0] === 1'b1) ? in_V_V_dout : inputBuf_8_V_13_fu_232);

assign inputBuf_8_V_23_fu_1121_p3 = ((sel_tmp7_fu_922_p2[0:0] === 1'b1) ? inputBuf_8_V_13_fu_232 : inputBuf_8_V_22_fu_1113_p3);

assign inputBuf_8_V_24_fu_1129_p3 = ((sel_tmp7_fu_922_p2[0:0] === 1'b1) ? in_V_V_dout : inputBuf_8_V_2_fu_228);

assign inputBuf_8_V_4_fu_1025_p3 = ((or_cond4_fu_951_p2[0:0] === 1'b1) ? inputBuf_8_V_3_fu_252 : newSel5_fu_1017_p3);

assign inputBuf_8_V_6_fu_1049_p3 = ((or_cond4_fu_951_p2[0:0] === 1'b1) ? inputBuf_8_V_5_fu_248 : newSel8_fu_1041_p3);

assign inputBuf_8_V_8_fu_1065_p3 = ((or_cond4_fu_951_p2[0:0] === 1'b1) ? inputBuf_8_V_7_fu_244 : newSel3_fu_1057_p3);

assign inputBuf_8_V_fu_969_p3 = ((or_cond6_fu_963_p2[0:0] === 1'b1) ? inputBuf_8_V_18_fu_260 : in_V_V_dout);

assign newSel10_fu_1097_p3 = ((sel_tmp5_fu_912_p2[0:0] === 1'b1) ? in_V_V_dout : inputBuf_8_V_11_fu_236);

assign newSel1_fu_985_p3 = ((or_cond2_fu_939_p2[0:0] === 1'b1) ? inputBuf_8_V_16_fu_256 : newSel_fu_977_p3);

assign newSel2_fu_993_p3 = ((or_cond4_fu_951_p2[0:0] === 1'b1) ? inputBuf_8_V_16_fu_256 : newSel1_fu_985_p3);

assign newSel3_fu_1057_p3 = ((sel_tmp3_fu_902_p2[0:0] === 1'b1) ? in_V_V_dout : inputBuf_8_V_7_fu_244);

assign newSel4_fu_1009_p3 = ((sel_tmp1_fu_892_p2[0:0] === 1'b1) ? in_V_V_dout : inputBuf_8_V_3_fu_252);

assign newSel5_fu_1017_p3 = ((or_cond2_fu_939_p2[0:0] === 1'b1) ? inputBuf_8_V_3_fu_252 : newSel4_fu_1009_p3);

assign newSel6_fu_1073_p3 = ((sel_tmp5_fu_912_p2[0:0] === 1'b1) ? inputBuf_8_V_9_fu_240 : in_V_V_dout);

assign newSel7_fu_1033_p3 = ((sel_tmp3_fu_902_p2[0:0] === 1'b1) ? inputBuf_8_V_5_fu_248 : in_V_V_dout);

assign newSel8_fu_1041_p3 = ((or_cond2_fu_939_p2[0:0] === 1'b1) ? newSel7_fu_1033_p3 : inputBuf_8_V_5_fu_248);

assign newSel9_fu_1081_p3 = ((or_cond_fu_927_p2[0:0] === 1'b1) ? inputBuf_8_V_9_fu_240 : newSel6_fu_1073_p3);

assign newSel_fu_977_p3 = ((sel_tmp1_fu_892_p2[0:0] === 1'b1) ? inputBuf_8_V_16_fu_256 : in_V_V_dout);

assign nf_fu_812_p2 = (nf_assign_fu_224 + 32'd1);

assign or_cond1_fu_933_p2 = (sel_tmp5_fu_912_p2 | sel_tmp4_fu_907_p2);

assign or_cond2_fu_939_p2 = (sel_tmp3_fu_902_p2 | sel_tmp2_fu_897_p2);

assign or_cond3_fu_945_p2 = (sel_tmp_fu_887_p2 | sel_tmp1_fu_892_p2);

assign or_cond4_fu_951_p2 = (or_cond_fu_927_p2 | or_cond1_fu_933_p2);

assign or_cond5_fu_957_p2 = (or_cond3_fu_945_p2 | or_cond2_fu_939_p2);

assign or_cond6_fu_963_p2 = (or_cond5_fu_957_p2 | or_cond4_fu_951_p2);

assign or_cond_fu_927_p2 = (sel_tmp7_fu_922_p2 | sel_tmp6_fu_917_p2);

assign out_V_V_din = {{{{{{{{{{{{{{{{tmp_i1165_i_i_reg_3914}, {tmp_i1164_i_i_reg_3909}}, {tmp_i1163_i_i_reg_3904}}, {tmp_i1162_i_i_reg_3899}}, {tmp_i1161_i_i_reg_3894}}, {tmp_i1160_i_i_reg_3889}}, {tmp_i1159_i_i_reg_3884}}, {tmp_i1158_i_i_reg_3879}}, {tmp_i1157_i_i_reg_3874}}, {tmp_i1156_i_i_reg_3869}}, {tmp_i1155_i_i_reg_3864}}, {tmp_i1154_i_i_reg_3859}}, {tmp_i1153_i_i_reg_3854}}, {tmp_i1152_i_i_reg_3849}}, {tmp_i1151_i_i_reg_3844}}, {tmp_i_i_i_reg_3839}};

assign p_4_i_i_fu_1216_p3 = ((tmp_33_i_i_reg_3464[0:0] === 1'b1) ? 32'd0 : tile_fu_1205_p2);

assign p_Val2_11_0_1_i_i_fu_1274_p3 = ((tmp_1270_fu_1246_p3[0:0] === 1'b1) ? tmp_112_0_1_i_i_fu_1264_p1 : ret_V_2_0_1_i_i_fu_1268_p2);

assign p_Val2_11_0_2_i_i_fu_1322_p3 = ((tmp_1271_fu_1294_p3[0:0] === 1'b1) ? tmp_112_0_2_i_i_fu_1312_p1 : ret_V_2_0_2_i_i_fu_1316_p2);

assign p_Val2_11_0_i_i_fu_2517_p3 = ((tmp_1268_reg_3559[0:0] === 1'b1) ? tmp_112_0_i_i_reg_3564 : ret_V_2_0_i_i_reg_3584);

assign p_Val2_11_10_1_i_i_fu_1954_p3 = ((tmp_1300_fu_1946_p3[0:0] === 1'b1) ? tmp_112_0_1_i_i_fu_1264_p1 : ret_V_2_0_1_i_i_fu_1268_p2);

assign p_Val2_11_10_2_i_i_fu_1982_p3 = ((tmp_1301_fu_1974_p3[0:0] === 1'b1) ? tmp_112_0_2_i_i_fu_1312_p1 : ret_V_2_0_2_i_i_fu_1316_p2);

assign p_Val2_11_10_i_i_fu_2837_p3 = ((tmp_1299_reg_3699[0:0] === 1'b1) ? tmp_112_0_i_i_reg_3564 : ret_V_2_0_i_i_reg_3584);

assign p_Val2_11_11_1_i_i_fu_2020_p3 = ((tmp_1303_fu_2012_p3[0:0] === 1'b1) ? tmp_112_0_1_i_i_fu_1264_p1 : ret_V_2_0_1_i_i_fu_1268_p2);

assign p_Val2_11_11_2_i_i_fu_2048_p3 = ((tmp_1304_fu_2040_p3[0:0] === 1'b1) ? tmp_112_0_2_i_i_fu_1312_p1 : ret_V_2_0_2_i_i_fu_1316_p2);

assign p_Val2_11_11_i_i_fu_2869_p3 = ((tmp_1302_reg_3709[0:0] === 1'b1) ? tmp_112_0_i_i_reg_3564 : ret_V_2_0_i_i_reg_3584);

assign p_Val2_11_12_1_i_i_fu_2086_p3 = ((tmp_1306_fu_2078_p3[0:0] === 1'b1) ? tmp_112_0_1_i_i_fu_1264_p1 : ret_V_2_0_1_i_i_fu_1268_p2);

assign p_Val2_11_12_2_i_i_fu_2114_p3 = ((tmp_1307_fu_2106_p3[0:0] === 1'b1) ? tmp_112_0_2_i_i_fu_1312_p1 : ret_V_2_0_2_i_i_fu_1316_p2);

assign p_Val2_11_12_i_i_fu_2901_p3 = ((tmp_1305_reg_3719[0:0] === 1'b1) ? tmp_112_0_i_i_reg_3564 : ret_V_2_0_i_i_reg_3584);

assign p_Val2_11_13_1_i_i_fu_2152_p3 = ((tmp_1309_fu_2144_p3[0:0] === 1'b1) ? tmp_112_0_1_i_i_fu_1264_p1 : ret_V_2_0_1_i_i_fu_1268_p2);

assign p_Val2_11_13_2_i_i_fu_2180_p3 = ((tmp_1310_fu_2172_p3[0:0] === 1'b1) ? tmp_112_0_2_i_i_fu_1312_p1 : ret_V_2_0_2_i_i_fu_1316_p2);

assign p_Val2_11_13_i_i_fu_2933_p3 = ((tmp_1308_reg_3729[0:0] === 1'b1) ? tmp_112_0_i_i_reg_3564 : ret_V_2_0_i_i_reg_3584);

assign p_Val2_11_14_1_i_i_fu_2218_p3 = ((tmp_1312_fu_2210_p3[0:0] === 1'b1) ? tmp_112_0_1_i_i_fu_1264_p1 : ret_V_2_0_1_i_i_fu_1268_p2);

assign p_Val2_11_14_2_i_i_fu_2246_p3 = ((tmp_1313_fu_2238_p3[0:0] === 1'b1) ? tmp_112_0_2_i_i_fu_1312_p1 : ret_V_2_0_2_i_i_fu_1316_p2);

assign p_Val2_11_14_i_i_fu_2965_p3 = ((tmp_1311_reg_3739[0:0] === 1'b1) ? tmp_112_0_i_i_reg_3564 : ret_V_2_0_i_i_reg_3584);

assign p_Val2_11_15_1_i_i_fu_2284_p3 = ((tmp_1315_fu_2276_p3[0:0] === 1'b1) ? tmp_112_0_1_i_i_fu_1264_p1 : ret_V_2_0_1_i_i_fu_1268_p2);

assign p_Val2_11_15_2_i_i_fu_2312_p3 = ((tmp_1316_fu_2304_p3[0:0] === 1'b1) ? tmp_112_0_2_i_i_fu_1312_p1 : ret_V_2_0_2_i_i_fu_1316_p2);

assign p_Val2_11_15_i_i_fu_2997_p3 = ((tmp_1314_reg_3749[0:0] === 1'b1) ? tmp_112_0_i_i_reg_3564 : ret_V_2_0_i_i_reg_3584);

assign p_Val2_11_1_1_i_i_fu_1360_p3 = ((tmp_1273_fu_1352_p3[0:0] === 1'b1) ? tmp_112_0_1_i_i_fu_1264_p1 : ret_V_2_0_1_i_i_fu_1268_p2);

assign p_Val2_11_1_2_i_i_fu_1388_p3 = ((tmp_1274_fu_1380_p3[0:0] === 1'b1) ? tmp_112_0_2_i_i_fu_1312_p1 : ret_V_2_0_2_i_i_fu_1316_p2);

assign p_Val2_11_1_i_i_fu_2549_p3 = ((tmp_1272_reg_3609[0:0] === 1'b1) ? tmp_112_0_i_i_reg_3564 : ret_V_2_0_i_i_reg_3584);

assign p_Val2_11_2_1_i_i_fu_1426_p3 = ((tmp_1276_fu_1418_p3[0:0] === 1'b1) ? tmp_112_0_1_i_i_fu_1264_p1 : ret_V_2_0_1_i_i_fu_1268_p2);

assign p_Val2_11_2_2_i_i_fu_1454_p3 = ((tmp_1277_fu_1446_p3[0:0] === 1'b1) ? tmp_112_0_2_i_i_fu_1312_p1 : ret_V_2_0_2_i_i_fu_1316_p2);

assign p_Val2_11_2_i_i_fu_2581_p3 = ((tmp_1275_reg_3619[0:0] === 1'b1) ? tmp_112_0_i_i_reg_3564 : ret_V_2_0_i_i_reg_3584);

assign p_Val2_11_3_1_i_i_fu_1492_p3 = ((tmp_1279_fu_1484_p3[0:0] === 1'b1) ? tmp_112_0_1_i_i_fu_1264_p1 : ret_V_2_0_1_i_i_fu_1268_p2);

assign p_Val2_11_3_2_i_i_fu_1520_p3 = ((tmp_1280_fu_1512_p3[0:0] === 1'b1) ? tmp_112_0_2_i_i_fu_1312_p1 : ret_V_2_0_2_i_i_fu_1316_p2);

assign p_Val2_11_3_i_i_fu_2613_p3 = ((tmp_1278_reg_3629[0:0] === 1'b1) ? tmp_112_0_i_i_reg_3564 : ret_V_2_0_i_i_reg_3584);

assign p_Val2_11_4_1_i_i_fu_1558_p3 = ((tmp_1282_fu_1550_p3[0:0] === 1'b1) ? tmp_112_0_1_i_i_fu_1264_p1 : ret_V_2_0_1_i_i_fu_1268_p2);

assign p_Val2_11_4_2_i_i_fu_1586_p3 = ((tmp_1283_fu_1578_p3[0:0] === 1'b1) ? tmp_112_0_2_i_i_fu_1312_p1 : ret_V_2_0_2_i_i_fu_1316_p2);

assign p_Val2_11_4_i_i_fu_2645_p3 = ((tmp_1281_reg_3639[0:0] === 1'b1) ? tmp_112_0_i_i_reg_3564 : ret_V_2_0_i_i_reg_3584);

assign p_Val2_11_5_1_i_i_fu_1624_p3 = ((tmp_1285_fu_1616_p3[0:0] === 1'b1) ? tmp_112_0_1_i_i_fu_1264_p1 : ret_V_2_0_1_i_i_fu_1268_p2);

assign p_Val2_11_5_2_i_i_fu_1652_p3 = ((tmp_1286_fu_1644_p3[0:0] === 1'b1) ? tmp_112_0_2_i_i_fu_1312_p1 : ret_V_2_0_2_i_i_fu_1316_p2);

assign p_Val2_11_5_i_i_fu_2677_p3 = ((tmp_1284_reg_3649[0:0] === 1'b1) ? tmp_112_0_i_i_reg_3564 : ret_V_2_0_i_i_reg_3584);

assign p_Val2_11_6_1_i_i_fu_1690_p3 = ((tmp_1288_fu_1682_p3[0:0] === 1'b1) ? tmp_112_0_1_i_i_fu_1264_p1 : ret_V_2_0_1_i_i_fu_1268_p2);

assign p_Val2_11_6_2_i_i_fu_1718_p3 = ((tmp_1289_fu_1710_p3[0:0] === 1'b1) ? tmp_112_0_2_i_i_fu_1312_p1 : ret_V_2_0_2_i_i_fu_1316_p2);

assign p_Val2_11_6_i_i_fu_2709_p3 = ((tmp_1287_reg_3659[0:0] === 1'b1) ? tmp_112_0_i_i_reg_3564 : ret_V_2_0_i_i_reg_3584);

assign p_Val2_11_7_1_i_i_fu_1756_p3 = ((tmp_1291_fu_1748_p3[0:0] === 1'b1) ? tmp_112_0_1_i_i_fu_1264_p1 : ret_V_2_0_1_i_i_fu_1268_p2);

assign p_Val2_11_7_2_i_i_fu_1784_p3 = ((tmp_1292_fu_1776_p3[0:0] === 1'b1) ? tmp_112_0_2_i_i_fu_1312_p1 : ret_V_2_0_2_i_i_fu_1316_p2);

assign p_Val2_11_7_i_i_fu_2741_p3 = ((tmp_1290_reg_3669[0:0] === 1'b1) ? tmp_112_0_i_i_reg_3564 : ret_V_2_0_i_i_reg_3584);

assign p_Val2_11_8_1_i_i_fu_1822_p3 = ((tmp_1294_fu_1814_p3[0:0] === 1'b1) ? tmp_112_0_1_i_i_fu_1264_p1 : ret_V_2_0_1_i_i_fu_1268_p2);

assign p_Val2_11_8_2_i_i_fu_1850_p3 = ((tmp_1295_fu_1842_p3[0:0] === 1'b1) ? tmp_112_0_2_i_i_fu_1312_p1 : ret_V_2_0_2_i_i_fu_1316_p2);

assign p_Val2_11_8_i_i_fu_2773_p3 = ((tmp_1293_reg_3679[0:0] === 1'b1) ? tmp_112_0_i_i_reg_3564 : ret_V_2_0_i_i_reg_3584);

assign p_Val2_11_9_1_i_i_fu_1888_p3 = ((tmp_1297_fu_1880_p3[0:0] === 1'b1) ? tmp_112_0_1_i_i_fu_1264_p1 : ret_V_2_0_1_i_i_fu_1268_p2);

assign p_Val2_11_9_2_i_i_fu_1916_p3 = ((tmp_1298_fu_1908_p3[0:0] === 1'b1) ? tmp_112_0_2_i_i_fu_1312_p1 : ret_V_2_0_2_i_i_fu_1316_p2);

assign p_Val2_11_9_i_i_fu_2805_p3 = ((tmp_1296_reg_3689[0:0] === 1'b1) ? tmp_112_0_i_i_reg_3564 : ret_V_2_0_i_i_reg_3584);

assign p_accu_V_0_i_i_fu_2510_p3 = ((tmp_31_i_i_reg_3435_pp0_iter2_reg[0:0] === 1'b1) ? 24'd0 : accu_V_0_i_i_fu_152);

assign p_accu_V_10_i_i_fu_2440_p3 = ((tmp_31_i_i_reg_3435_pp0_iter2_reg[0:0] === 1'b1) ? 24'd0 : accu_V_10_i_i_fu_192);

assign p_accu_V_11_i_i_fu_2433_p3 = ((tmp_31_i_i_reg_3435_pp0_iter2_reg[0:0] === 1'b1) ? 24'd0 : accu_V_11_i_i_fu_196);

assign p_accu_V_12_i_i_fu_2426_p3 = ((tmp_31_i_i_reg_3435_pp0_iter2_reg[0:0] === 1'b1) ? 24'd0 : accu_V_12_i_i_fu_200);

assign p_accu_V_13_i_i_fu_2419_p3 = ((tmp_31_i_i_reg_3435_pp0_iter2_reg[0:0] === 1'b1) ? 24'd0 : accu_V_13_i_i_fu_204);

assign p_accu_V_14_i_i_fu_2412_p3 = ((tmp_31_i_i_reg_3435_pp0_iter2_reg[0:0] === 1'b1) ? 24'd0 : accu_V_14_i_i_fu_208);

assign p_accu_V_15_i_i_fu_2405_p3 = ((tmp_31_i_i_reg_3435_pp0_iter2_reg[0:0] === 1'b1) ? 24'd0 : accu_V_15_i_i_fu_212);

assign p_accu_V_1_i_i_fu_2503_p3 = ((tmp_31_i_i_reg_3435_pp0_iter2_reg[0:0] === 1'b1) ? 24'd0 : accu_V_1_i_i_fu_156);

assign p_accu_V_2_i_i_fu_2496_p3 = ((tmp_31_i_i_reg_3435_pp0_iter2_reg[0:0] === 1'b1) ? 24'd0 : accu_V_2_i_i_fu_160);

assign p_accu_V_3_i_i_fu_2489_p3 = ((tmp_31_i_i_reg_3435_pp0_iter2_reg[0:0] === 1'b1) ? 24'd0 : accu_V_3_i_i_fu_164);

assign p_accu_V_4_i_i_fu_2482_p3 = ((tmp_31_i_i_reg_3435_pp0_iter2_reg[0:0] === 1'b1) ? 24'd0 : accu_V_4_i_i_fu_168);

assign p_accu_V_5_i_i_fu_2475_p3 = ((tmp_31_i_i_reg_3435_pp0_iter2_reg[0:0] === 1'b1) ? 24'd0 : accu_V_5_i_i_fu_172);

assign p_accu_V_6_i_i_fu_2468_p3 = ((tmp_31_i_i_reg_3435_pp0_iter2_reg[0:0] === 1'b1) ? 24'd0 : accu_V_6_i_i_fu_176);

assign p_accu_V_7_i_i_fu_2461_p3 = ((tmp_31_i_i_reg_3435_pp0_iter2_reg[0:0] === 1'b1) ? 24'd0 : accu_V_7_i_i_fu_180);

assign p_accu_V_8_i_i_fu_2454_p3 = ((tmp_31_i_i_reg_3435_pp0_iter2_reg[0:0] === 1'b1) ? 24'd0 : accu_V_8_i_i_fu_184);

assign p_accu_V_9_i_i_fu_2447_p3 = ((tmp_31_i_i_reg_3435_pp0_iter2_reg[0:0] === 1'b1) ? 24'd0 : accu_V_9_i_i_fu_188);

assign p_i_i_fu_824_p3 = ((tmp_33_i_i_fu_818_p2[0:0] === 1'b1) ? 32'd0 : nf_fu_812_p2);

assign ret_V_2_0_1_i_i_fu_1268_p2 = ($signed(9'd0) - $signed(tmp_112_0_1_i_i_fu_1264_p1));

assign ret_V_2_0_2_i_i_fu_1316_p2 = ($signed(9'd0) - $signed(tmp_112_0_2_i_i_fu_1312_p1));

assign ret_V_2_0_i_i_fu_1240_p2 = ($signed(9'd0) - $signed(tmp_112_0_i_i_fu_1236_p1));

assign sel_tmp1_fu_892_p2 = ((tmp_1266_reg_3423 == 4'd6) ? 1'b1 : 1'b0);

assign sel_tmp2_fu_897_p2 = ((tmp_1266_reg_3423 == 4'd5) ? 1'b1 : 1'b0);

assign sel_tmp3_fu_902_p2 = ((tmp_1266_reg_3423 == 4'd4) ? 1'b1 : 1'b0);

assign sel_tmp4_fu_907_p2 = ((tmp_1266_reg_3423 == 4'd3) ? 1'b1 : 1'b0);

assign sel_tmp5_fu_912_p2 = ((tmp_1266_reg_3423 == 4'd2) ? 1'b1 : 1'b0);

assign sel_tmp6_fu_917_p2 = ((tmp_1266_reg_3423 == 4'd1) ? 1'b1 : 1'b0);

assign sel_tmp7_fu_922_p2 = ((tmp_1266_reg_3423 == 4'd0) ? 1'b1 : 1'b0);

assign sel_tmp_fu_887_p2 = ((tmp_1266_reg_3423 == 4'd7) ? 1'b1 : 1'b0);

assign sf_fu_792_p2 = (32'd1 + sf_5_fu_220);

assign start_out = real_start;

assign threshs0_m_threshold_10_address0 = tmp_110_i_i_fu_2338_p1;

assign threshs0_m_threshold_11_address0 = tmp_110_i_i_fu_2338_p1;

assign threshs0_m_threshold_12_address0 = tmp_110_i_i_fu_2338_p1;

assign threshs0_m_threshold_13_address0 = tmp_110_i_i_fu_2338_p1;

assign threshs0_m_threshold_14_address0 = tmp_110_i_i_fu_2338_p1;

assign threshs0_m_threshold_15_address0 = tmp_110_i_i_fu_2338_p1;

assign threshs0_m_threshold_1_address0 = tmp_110_i_i_fu_2338_p1;

assign threshs0_m_threshold_2_address0 = tmp_110_i_i_fu_2338_p1;

assign threshs0_m_threshold_3_address0 = tmp_110_i_i_fu_2338_p1;

assign threshs0_m_threshold_4_address0 = tmp_110_i_i_fu_2338_p1;

assign threshs0_m_threshold_5_address0 = tmp_110_i_i_fu_2338_p1;

assign threshs0_m_threshold_6_address0 = tmp_110_i_i_fu_2338_p1;

assign threshs0_m_threshold_7_address0 = tmp_110_i_i_fu_2338_p1;

assign threshs0_m_threshold_8_address0 = tmp_110_i_i_fu_2338_p1;

assign threshs0_m_threshold_9_address0 = tmp_110_i_i_fu_2338_p1;

assign threshs0_m_threshold_address0 = tmp_110_i_i_fu_2338_p1;

assign tile_fu_1205_p2 = (32'd1 + tile_assign_fu_216);

assign tmp153_fu_2534_p2 = ($signed(p_accu_V_0_i_i_fu_2510_p3) + $signed(tmp_116_0_cast_i_i_fu_2530_p1));

assign tmp154_cast_fu_2540_p1 = $signed(tmp154_reg_3604);

assign tmp154_fu_1342_p2 = ($signed(tmp_116_0_1_cast_i_i_fu_1290_p1) + $signed(tmp_116_0_2_cast_i_i_fu_1338_p1));

assign tmp156_fu_2566_p2 = ($signed(p_accu_V_1_i_i_fu_2503_p3) + $signed(tmp_116_1_cast_i_i_fu_2562_p1));

assign tmp157_cast_fu_2572_p1 = $signed(tmp157_reg_3614);

assign tmp157_fu_1408_p2 = ($signed(tmp_116_1_1_cast_i_i_fu_1376_p1) + $signed(tmp_116_1_2_cast_i_i_fu_1404_p1));

assign tmp159_fu_2598_p2 = ($signed(p_accu_V_2_i_i_fu_2496_p3) + $signed(tmp_116_2_cast_i_i_fu_2594_p1));

assign tmp160_cast_fu_2604_p1 = $signed(tmp160_reg_3624);

assign tmp160_fu_1474_p2 = ($signed(tmp_116_2_1_cast_i_i_fu_1442_p1) + $signed(tmp_116_2_2_cast_i_i_fu_1470_p1));

assign tmp162_fu_2630_p2 = ($signed(p_accu_V_3_i_i_fu_2489_p3) + $signed(tmp_116_3_cast_i_i_fu_2626_p1));

assign tmp163_cast_fu_2636_p1 = $signed(tmp163_reg_3634);

assign tmp163_fu_1540_p2 = ($signed(tmp_116_3_1_cast_i_i_fu_1508_p1) + $signed(tmp_116_3_2_cast_i_i_fu_1536_p1));

assign tmp165_fu_2662_p2 = ($signed(p_accu_V_4_i_i_fu_2482_p3) + $signed(tmp_116_4_cast_i_i_fu_2658_p1));

assign tmp166_cast_fu_2668_p1 = $signed(tmp166_reg_3644);

assign tmp166_fu_1606_p2 = ($signed(tmp_116_4_1_cast_i_i_fu_1574_p1) + $signed(tmp_116_4_2_cast_i_i_fu_1602_p1));

assign tmp168_fu_2694_p2 = ($signed(p_accu_V_5_i_i_fu_2475_p3) + $signed(tmp_116_5_cast_i_i_fu_2690_p1));

assign tmp169_cast_fu_2700_p1 = $signed(tmp169_reg_3654);

assign tmp169_fu_1672_p2 = ($signed(tmp_116_5_1_cast_i_i_fu_1640_p1) + $signed(tmp_116_5_2_cast_i_i_fu_1668_p1));

assign tmp171_fu_2726_p2 = ($signed(p_accu_V_6_i_i_fu_2468_p3) + $signed(tmp_116_6_cast_i_i_fu_2722_p1));

assign tmp172_cast_fu_2732_p1 = $signed(tmp172_reg_3664);

assign tmp172_fu_1738_p2 = ($signed(tmp_116_6_1_cast_i_i_fu_1706_p1) + $signed(tmp_116_6_2_cast_i_i_fu_1734_p1));

assign tmp174_fu_2758_p2 = ($signed(p_accu_V_7_i_i_fu_2461_p3) + $signed(tmp_116_7_cast_i_i_fu_2754_p1));

assign tmp175_cast_fu_2764_p1 = $signed(tmp175_reg_3674);

assign tmp175_fu_1804_p2 = ($signed(tmp_116_7_1_cast_i_i_fu_1772_p1) + $signed(tmp_116_7_2_cast_i_i_fu_1800_p1));

assign tmp177_fu_2790_p2 = ($signed(p_accu_V_8_i_i_fu_2454_p3) + $signed(tmp_116_8_cast_i_i_fu_2786_p1));

assign tmp178_cast_fu_2796_p1 = $signed(tmp178_reg_3684);

assign tmp178_fu_1870_p2 = ($signed(tmp_116_8_1_cast_i_i_fu_1838_p1) + $signed(tmp_116_8_2_cast_i_i_fu_1866_p1));

assign tmp180_fu_2822_p2 = ($signed(p_accu_V_9_i_i_fu_2447_p3) + $signed(tmp_116_9_cast_i_i_fu_2818_p1));

assign tmp181_cast_fu_2828_p1 = $signed(tmp181_reg_3694);

assign tmp181_fu_1936_p2 = ($signed(tmp_116_9_1_cast_i_i_fu_1904_p1) + $signed(tmp_116_9_2_cast_i_i_fu_1932_p1));

assign tmp183_fu_2854_p2 = ($signed(p_accu_V_10_i_i_fu_2440_p3) + $signed(tmp_116_10_cast_i_i_fu_2850_p1));

assign tmp184_cast_fu_2860_p1 = $signed(tmp184_reg_3704);

assign tmp184_fu_2002_p2 = ($signed(tmp_116_10_1_cast_i_s_fu_1970_p1) + $signed(tmp_116_10_2_cast_i_s_fu_1998_p1));

assign tmp186_fu_2886_p2 = ($signed(p_accu_V_11_i_i_fu_2433_p3) + $signed(tmp_116_11_cast_i_i_fu_2882_p1));

assign tmp187_cast_fu_2892_p1 = $signed(tmp187_reg_3714);

assign tmp187_fu_2068_p2 = ($signed(tmp_116_11_1_cast_i_s_fu_2036_p1) + $signed(tmp_116_11_2_cast_i_s_fu_2064_p1));

assign tmp189_fu_2918_p2 = ($signed(p_accu_V_12_i_i_fu_2426_p3) + $signed(tmp_116_12_cast_i_i_fu_2914_p1));

assign tmp190_cast_fu_2924_p1 = $signed(tmp190_reg_3724);

assign tmp190_fu_2134_p2 = ($signed(tmp_116_12_1_cast_i_s_fu_2102_p1) + $signed(tmp_116_12_2_cast_i_s_fu_2130_p1));

assign tmp192_fu_2950_p2 = ($signed(p_accu_V_13_i_i_fu_2419_p3) + $signed(tmp_116_13_cast_i_i_fu_2946_p1));

assign tmp193_cast_fu_2956_p1 = $signed(tmp193_reg_3734);

assign tmp193_fu_2200_p2 = ($signed(tmp_116_13_1_cast_i_s_fu_2168_p1) + $signed(tmp_116_13_2_cast_i_s_fu_2196_p1));

assign tmp195_fu_2982_p2 = ($signed(p_accu_V_14_i_i_fu_2412_p3) + $signed(tmp_116_14_cast_i_i_fu_2978_p1));

assign tmp196_cast_fu_2988_p1 = $signed(tmp196_reg_3744);

assign tmp196_fu_2266_p2 = ($signed(tmp_116_14_1_cast_i_s_fu_2234_p1) + $signed(tmp_116_14_2_cast_i_s_fu_2262_p1));

assign tmp198_fu_3014_p2 = ($signed(p_accu_V_15_i_i_fu_2405_p3) + $signed(tmp_116_15_cast_i_i_fu_3010_p1));

assign tmp199_cast_fu_3020_p1 = $signed(tmp199_reg_3754);

assign tmp199_fu_2332_p2 = ($signed(tmp_116_15_1_cast_i_s_fu_2300_p1) + $signed(tmp_116_15_2_cast_i_s_fu_2328_p1));

assign tmp_103_i_i_fu_1185_p1 = tile_assign_fu_216;

assign tmp_110_i_i_fu_2338_p1 = nf_assign_load_reg_3459_pp0_iter1_reg;

assign tmp_112_0_1_i_i_fu_1264_p1 = $signed(arg_V_read_assign_1_fu_1254_p4);

assign tmp_112_0_2_i_i_fu_1312_p1 = $signed(arg_V_read_assign_2_fu_1302_p4);

assign tmp_112_0_i_i_fu_1236_p1 = $signed(tmp_1269_fu_1232_p1);

assign tmp_116_0_1_cast_i_i_fu_1290_p1 = $signed(tmp_116_0_1_i_i_fu_1282_p3);

assign tmp_116_0_1_i_i_fu_1282_p3 = {{p_Val2_11_0_1_i_i_fu_1274_p3}, {1'd0}};

assign tmp_116_0_2_cast_i_i_fu_1338_p1 = $signed(tmp_116_0_2_i_i_fu_1330_p3);

assign tmp_116_0_2_i_i_fu_1330_p3 = {{p_Val2_11_0_2_i_i_fu_1322_p3}, {1'd0}};

assign tmp_116_0_cast_i_i_fu_2530_p1 = $signed(tmp_116_0_i_i_fu_2522_p3);

assign tmp_116_0_i_i_fu_2522_p3 = {{p_Val2_11_0_i_i_fu_2517_p3}, {1'd0}};

assign tmp_116_10_1_cast_i_s_fu_1970_p1 = $signed(tmp_116_10_1_i_i_fu_1962_p3);

assign tmp_116_10_1_i_i_fu_1962_p3 = {{p_Val2_11_10_1_i_i_fu_1954_p3}, {1'd0}};

assign tmp_116_10_2_cast_i_s_fu_1998_p1 = $signed(tmp_116_10_2_i_i_fu_1990_p3);

assign tmp_116_10_2_i_i_fu_1990_p3 = {{p_Val2_11_10_2_i_i_fu_1982_p3}, {1'd0}};

assign tmp_116_10_cast_i_i_fu_2850_p1 = $signed(tmp_116_10_i_i_fu_2842_p3);

assign tmp_116_10_i_i_fu_2842_p3 = {{p_Val2_11_10_i_i_fu_2837_p3}, {1'd0}};

assign tmp_116_11_1_cast_i_s_fu_2036_p1 = $signed(tmp_116_11_1_i_i_fu_2028_p3);

assign tmp_116_11_1_i_i_fu_2028_p3 = {{p_Val2_11_11_1_i_i_fu_2020_p3}, {1'd0}};

assign tmp_116_11_2_cast_i_s_fu_2064_p1 = $signed(tmp_116_11_2_i_i_fu_2056_p3);

assign tmp_116_11_2_i_i_fu_2056_p3 = {{p_Val2_11_11_2_i_i_fu_2048_p3}, {1'd0}};

assign tmp_116_11_cast_i_i_fu_2882_p1 = $signed(tmp_116_11_i_i_fu_2874_p3);

assign tmp_116_11_i_i_fu_2874_p3 = {{p_Val2_11_11_i_i_fu_2869_p3}, {1'd0}};

assign tmp_116_12_1_cast_i_s_fu_2102_p1 = $signed(tmp_116_12_1_i_i_fu_2094_p3);

assign tmp_116_12_1_i_i_fu_2094_p3 = {{p_Val2_11_12_1_i_i_fu_2086_p3}, {1'd0}};

assign tmp_116_12_2_cast_i_s_fu_2130_p1 = $signed(tmp_116_12_2_i_i_fu_2122_p3);

assign tmp_116_12_2_i_i_fu_2122_p3 = {{p_Val2_11_12_2_i_i_fu_2114_p3}, {1'd0}};

assign tmp_116_12_cast_i_i_fu_2914_p1 = $signed(tmp_116_12_i_i_fu_2906_p3);

assign tmp_116_12_i_i_fu_2906_p3 = {{p_Val2_11_12_i_i_fu_2901_p3}, {1'd0}};

assign tmp_116_13_1_cast_i_s_fu_2168_p1 = $signed(tmp_116_13_1_i_i_fu_2160_p3);

assign tmp_116_13_1_i_i_fu_2160_p3 = {{p_Val2_11_13_1_i_i_fu_2152_p3}, {1'd0}};

assign tmp_116_13_2_cast_i_s_fu_2196_p1 = $signed(tmp_116_13_2_i_i_fu_2188_p3);

assign tmp_116_13_2_i_i_fu_2188_p3 = {{p_Val2_11_13_2_i_i_fu_2180_p3}, {1'd0}};

assign tmp_116_13_cast_i_i_fu_2946_p1 = $signed(tmp_116_13_i_i_fu_2938_p3);

assign tmp_116_13_i_i_fu_2938_p3 = {{p_Val2_11_13_i_i_fu_2933_p3}, {1'd0}};

assign tmp_116_14_1_cast_i_s_fu_2234_p1 = $signed(tmp_116_14_1_i_i_fu_2226_p3);

assign tmp_116_14_1_i_i_fu_2226_p3 = {{p_Val2_11_14_1_i_i_fu_2218_p3}, {1'd0}};

assign tmp_116_14_2_cast_i_s_fu_2262_p1 = $signed(tmp_116_14_2_i_i_fu_2254_p3);

assign tmp_116_14_2_i_i_fu_2254_p3 = {{p_Val2_11_14_2_i_i_fu_2246_p3}, {1'd0}};

assign tmp_116_14_cast_i_i_fu_2978_p1 = $signed(tmp_116_14_i_i_fu_2970_p3);

assign tmp_116_14_i_i_fu_2970_p3 = {{p_Val2_11_14_i_i_fu_2965_p3}, {1'd0}};

assign tmp_116_15_1_cast_i_s_fu_2300_p1 = $signed(tmp_116_15_1_i_i_fu_2292_p3);

assign tmp_116_15_1_i_i_fu_2292_p3 = {{p_Val2_11_15_1_i_i_fu_2284_p3}, {1'd0}};

assign tmp_116_15_2_cast_i_s_fu_2328_p1 = $signed(tmp_116_15_2_i_i_fu_2320_p3);

assign tmp_116_15_2_i_i_fu_2320_p3 = {{p_Val2_11_15_2_i_i_fu_2312_p3}, {1'd0}};

assign tmp_116_15_cast_i_i_fu_3010_p1 = $signed(tmp_116_15_i_i_fu_3002_p3);

assign tmp_116_15_i_i_fu_3002_p3 = {{p_Val2_11_15_i_i_fu_2997_p3}, {1'd0}};

assign tmp_116_1_1_cast_i_i_fu_1376_p1 = $signed(tmp_116_1_1_i_i_fu_1368_p3);

assign tmp_116_1_1_i_i_fu_1368_p3 = {{p_Val2_11_1_1_i_i_fu_1360_p3}, {1'd0}};

assign tmp_116_1_2_cast_i_i_fu_1404_p1 = $signed(tmp_116_1_2_i_i_fu_1396_p3);

assign tmp_116_1_2_i_i_fu_1396_p3 = {{p_Val2_11_1_2_i_i_fu_1388_p3}, {1'd0}};

assign tmp_116_1_cast_i_i_fu_2562_p1 = $signed(tmp_116_1_i_i_fu_2554_p3);

assign tmp_116_1_i_i_fu_2554_p3 = {{p_Val2_11_1_i_i_fu_2549_p3}, {1'd0}};

assign tmp_116_2_1_cast_i_i_fu_1442_p1 = $signed(tmp_116_2_1_i_i_fu_1434_p3);

assign tmp_116_2_1_i_i_fu_1434_p3 = {{p_Val2_11_2_1_i_i_fu_1426_p3}, {1'd0}};

assign tmp_116_2_2_cast_i_i_fu_1470_p1 = $signed(tmp_116_2_2_i_i_fu_1462_p3);

assign tmp_116_2_2_i_i_fu_1462_p3 = {{p_Val2_11_2_2_i_i_fu_1454_p3}, {1'd0}};

assign tmp_116_2_cast_i_i_fu_2594_p1 = $signed(tmp_116_2_i_i_fu_2586_p3);

assign tmp_116_2_i_i_fu_2586_p3 = {{p_Val2_11_2_i_i_fu_2581_p3}, {1'd0}};

assign tmp_116_3_1_cast_i_i_fu_1508_p1 = $signed(tmp_116_3_1_i_i_fu_1500_p3);

assign tmp_116_3_1_i_i_fu_1500_p3 = {{p_Val2_11_3_1_i_i_fu_1492_p3}, {1'd0}};

assign tmp_116_3_2_cast_i_i_fu_1536_p1 = $signed(tmp_116_3_2_i_i_fu_1528_p3);

assign tmp_116_3_2_i_i_fu_1528_p3 = {{p_Val2_11_3_2_i_i_fu_1520_p3}, {1'd0}};

assign tmp_116_3_cast_i_i_fu_2626_p1 = $signed(tmp_116_3_i_i_fu_2618_p3);

assign tmp_116_3_i_i_fu_2618_p3 = {{p_Val2_11_3_i_i_fu_2613_p3}, {1'd0}};

assign tmp_116_4_1_cast_i_i_fu_1574_p1 = $signed(tmp_116_4_1_i_i_fu_1566_p3);

assign tmp_116_4_1_i_i_fu_1566_p3 = {{p_Val2_11_4_1_i_i_fu_1558_p3}, {1'd0}};

assign tmp_116_4_2_cast_i_i_fu_1602_p1 = $signed(tmp_116_4_2_i_i_fu_1594_p3);

assign tmp_116_4_2_i_i_fu_1594_p3 = {{p_Val2_11_4_2_i_i_fu_1586_p3}, {1'd0}};

assign tmp_116_4_cast_i_i_fu_2658_p1 = $signed(tmp_116_4_i_i_fu_2650_p3);

assign tmp_116_4_i_i_fu_2650_p3 = {{p_Val2_11_4_i_i_fu_2645_p3}, {1'd0}};

assign tmp_116_5_1_cast_i_i_fu_1640_p1 = $signed(tmp_116_5_1_i_i_fu_1632_p3);

assign tmp_116_5_1_i_i_fu_1632_p3 = {{p_Val2_11_5_1_i_i_fu_1624_p3}, {1'd0}};

assign tmp_116_5_2_cast_i_i_fu_1668_p1 = $signed(tmp_116_5_2_i_i_fu_1660_p3);

assign tmp_116_5_2_i_i_fu_1660_p3 = {{p_Val2_11_5_2_i_i_fu_1652_p3}, {1'd0}};

assign tmp_116_5_cast_i_i_fu_2690_p1 = $signed(tmp_116_5_i_i_fu_2682_p3);

assign tmp_116_5_i_i_fu_2682_p3 = {{p_Val2_11_5_i_i_fu_2677_p3}, {1'd0}};

assign tmp_116_6_1_cast_i_i_fu_1706_p1 = $signed(tmp_116_6_1_i_i_fu_1698_p3);

assign tmp_116_6_1_i_i_fu_1698_p3 = {{p_Val2_11_6_1_i_i_fu_1690_p3}, {1'd0}};

assign tmp_116_6_2_cast_i_i_fu_1734_p1 = $signed(tmp_116_6_2_i_i_fu_1726_p3);

assign tmp_116_6_2_i_i_fu_1726_p3 = {{p_Val2_11_6_2_i_i_fu_1718_p3}, {1'd0}};

assign tmp_116_6_cast_i_i_fu_2722_p1 = $signed(tmp_116_6_i_i_fu_2714_p3);

assign tmp_116_6_i_i_fu_2714_p3 = {{p_Val2_11_6_i_i_fu_2709_p3}, {1'd0}};

assign tmp_116_7_1_cast_i_i_fu_1772_p1 = $signed(tmp_116_7_1_i_i_fu_1764_p3);

assign tmp_116_7_1_i_i_fu_1764_p3 = {{p_Val2_11_7_1_i_i_fu_1756_p3}, {1'd0}};

assign tmp_116_7_2_cast_i_i_fu_1800_p1 = $signed(tmp_116_7_2_i_i_fu_1792_p3);

assign tmp_116_7_2_i_i_fu_1792_p3 = {{p_Val2_11_7_2_i_i_fu_1784_p3}, {1'd0}};

assign tmp_116_7_cast_i_i_fu_2754_p1 = $signed(tmp_116_7_i_i_fu_2746_p3);

assign tmp_116_7_i_i_fu_2746_p3 = {{p_Val2_11_7_i_i_fu_2741_p3}, {1'd0}};

assign tmp_116_8_1_cast_i_i_fu_1838_p1 = $signed(tmp_116_8_1_i_i_fu_1830_p3);

assign tmp_116_8_1_i_i_fu_1830_p3 = {{p_Val2_11_8_1_i_i_fu_1822_p3}, {1'd0}};

assign tmp_116_8_2_cast_i_i_fu_1866_p1 = $signed(tmp_116_8_2_i_i_fu_1858_p3);

assign tmp_116_8_2_i_i_fu_1858_p3 = {{p_Val2_11_8_2_i_i_fu_1850_p3}, {1'd0}};

assign tmp_116_8_cast_i_i_fu_2786_p1 = $signed(tmp_116_8_i_i_fu_2778_p3);

assign tmp_116_8_i_i_fu_2778_p3 = {{p_Val2_11_8_i_i_fu_2773_p3}, {1'd0}};

assign tmp_116_9_1_cast_i_i_fu_1904_p1 = $signed(tmp_116_9_1_i_i_fu_1896_p3);

assign tmp_116_9_1_i_i_fu_1896_p3 = {{p_Val2_11_9_1_i_i_fu_1888_p3}, {1'd0}};

assign tmp_116_9_2_cast_i_i_fu_1932_p1 = $signed(tmp_116_9_2_i_i_fu_1924_p3);

assign tmp_116_9_2_i_i_fu_1924_p3 = {{p_Val2_11_9_2_i_i_fu_1916_p3}, {1'd0}};

assign tmp_116_9_cast_i_i_fu_2818_p1 = $signed(tmp_116_9_i_i_fu_2810_p3);

assign tmp_116_9_i_i_fu_2810_p3 = {{p_Val2_11_9_i_i_fu_2805_p3}, {1'd0}};

assign tmp_1265_fu_730_p2 = tmp_loc_dout << 32'd2;

assign tmp_1266_fu_779_p1 = sf_5_fu_220[3:0];

assign tmp_1267_fu_775_p1 = sf_5_fu_220[3:0];

assign tmp_1268_fu_1228_p1 = weights0_m_weights_V_q0[0:0];

assign tmp_1269_fu_1232_p1 = ap_phi_reg_pp0_iter2_act_m_val_V_reg_710[7:0];

assign tmp_1270_fu_1246_p3 = weights0_m_weights_V_q0[32'd1];

assign tmp_1271_fu_1294_p3 = weights0_m_weights_V_q0[32'd2];

assign tmp_1272_fu_1348_p1 = weights0_m_weights_V_1_q0[0:0];

assign tmp_1273_fu_1352_p3 = weights0_m_weights_V_1_q0[32'd1];

assign tmp_1274_fu_1380_p3 = weights0_m_weights_V_1_q0[32'd2];

assign tmp_1275_fu_1414_p1 = weights0_m_weights_V_2_q0[0:0];

assign tmp_1276_fu_1418_p3 = weights0_m_weights_V_2_q0[32'd1];

assign tmp_1277_fu_1446_p3 = weights0_m_weights_V_2_q0[32'd2];

assign tmp_1278_fu_1480_p1 = weights0_m_weights_V_3_q0[0:0];

assign tmp_1279_fu_1484_p3 = weights0_m_weights_V_3_q0[32'd1];

assign tmp_1280_fu_1512_p3 = weights0_m_weights_V_3_q0[32'd2];

assign tmp_1281_fu_1546_p1 = weights0_m_weights_V_4_q0[0:0];

assign tmp_1282_fu_1550_p3 = weights0_m_weights_V_4_q0[32'd1];

assign tmp_1283_fu_1578_p3 = weights0_m_weights_V_4_q0[32'd2];

assign tmp_1284_fu_1612_p1 = weights0_m_weights_V_5_q0[0:0];

assign tmp_1285_fu_1616_p3 = weights0_m_weights_V_5_q0[32'd1];

assign tmp_1286_fu_1644_p3 = weights0_m_weights_V_5_q0[32'd2];

assign tmp_1287_fu_1678_p1 = weights0_m_weights_V_6_q0[0:0];

assign tmp_1288_fu_1682_p3 = weights0_m_weights_V_6_q0[32'd1];

assign tmp_1289_fu_1710_p3 = weights0_m_weights_V_6_q0[32'd2];

assign tmp_1290_fu_1744_p1 = weights0_m_weights_V_7_q0[0:0];

assign tmp_1291_fu_1748_p3 = weights0_m_weights_V_7_q0[32'd1];

assign tmp_1292_fu_1776_p3 = weights0_m_weights_V_7_q0[32'd2];

assign tmp_1293_fu_1810_p1 = weights0_m_weights_V_8_q0[0:0];

assign tmp_1294_fu_1814_p3 = weights0_m_weights_V_8_q0[32'd1];

assign tmp_1295_fu_1842_p3 = weights0_m_weights_V_8_q0[32'd2];

assign tmp_1296_fu_1876_p1 = weights0_m_weights_V_9_q0[0:0];

assign tmp_1297_fu_1880_p3 = weights0_m_weights_V_9_q0[32'd1];

assign tmp_1298_fu_1908_p3 = weights0_m_weights_V_9_q0[32'd2];

assign tmp_1299_fu_1942_p1 = weights0_m_weights_V_10_q0[0:0];

assign tmp_1300_fu_1946_p3 = weights0_m_weights_V_10_q0[32'd1];

assign tmp_1301_fu_1974_p3 = weights0_m_weights_V_10_q0[32'd2];

assign tmp_1302_fu_2008_p1 = weights0_m_weights_V_11_q0[0:0];

assign tmp_1303_fu_2012_p3 = weights0_m_weights_V_11_q0[32'd1];

assign tmp_1304_fu_2040_p3 = weights0_m_weights_V_11_q0[32'd2];

assign tmp_1305_fu_2074_p1 = weights0_m_weights_V_12_q0[0:0];

assign tmp_1306_fu_2078_p3 = weights0_m_weights_V_12_q0[32'd1];

assign tmp_1307_fu_2106_p3 = weights0_m_weights_V_12_q0[32'd2];

assign tmp_1308_fu_2140_p1 = weights0_m_weights_V_13_q0[0:0];

assign tmp_1309_fu_2144_p3 = weights0_m_weights_V_13_q0[32'd1];

assign tmp_1310_fu_2172_p3 = weights0_m_weights_V_13_q0[32'd2];

assign tmp_1311_fu_2206_p1 = weights0_m_weights_V_14_q0[0:0];

assign tmp_1312_fu_2210_p3 = weights0_m_weights_V_14_q0[32'd1];

assign tmp_1313_fu_2238_p3 = weights0_m_weights_V_14_q0[32'd2];

assign tmp_1314_fu_2272_p1 = weights0_m_weights_V_15_q0[0:0];

assign tmp_1315_fu_2276_p3 = weights0_m_weights_V_15_q0[32'd1];

assign tmp_1316_fu_2304_p3 = weights0_m_weights_V_15_q0[32'd2];

assign tmp_31_i_i_fu_786_p2 = ((sf_5_fu_220 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_32_i_i_fu_798_p2 = ((sf_fu_792_p2 == 32'd9) ? 1'b1 : 1'b0);

assign tmp_33_i_i_fu_818_p2 = ((nf_fu_812_p2 == 32'd4) ? 1'b1 : 1'b0);

assign tmp_fu_724_p2 = tmp_loc_dout << 32'd5;

assign tmp_i1151_i_i_fu_3115_p2 = (($signed(threshs0_m_threshold_14_q0) < $signed(accu_1_V_fu_2575_p2)) ? 1'b1 : 1'b0);

assign tmp_i1152_i_i_fu_3121_p2 = (($signed(threshs0_m_threshold_7_q0) < $signed(accu_2_V_fu_2607_p2)) ? 1'b1 : 1'b0);

assign tmp_i1153_i_i_fu_3127_p2 = (($signed(threshs0_m_threshold_6_q0) < $signed(accu_3_V_fu_2639_p2)) ? 1'b1 : 1'b0);

assign tmp_i1154_i_i_fu_3133_p2 = (($signed(threshs0_m_threshold_5_q0) < $signed(accu_4_V_fu_2671_p2)) ? 1'b1 : 1'b0);

assign tmp_i1155_i_i_fu_3139_p2 = (($signed(threshs0_m_threshold_4_q0) < $signed(accu_5_V_fu_2703_p2)) ? 1'b1 : 1'b0);

assign tmp_i1156_i_i_fu_3145_p2 = (($signed(threshs0_m_threshold_3_q0) < $signed(accu_6_V_fu_2735_p2)) ? 1'b1 : 1'b0);

assign tmp_i1157_i_i_fu_3151_p2 = (($signed(threshs0_m_threshold_2_q0) < $signed(accu_7_V_fu_2767_p2)) ? 1'b1 : 1'b0);

assign tmp_i1158_i_i_fu_3157_p2 = (($signed(threshs0_m_threshold_1_q0) < $signed(accu_8_V_fu_2799_p2)) ? 1'b1 : 1'b0);

assign tmp_i1159_i_i_fu_3163_p2 = (($signed(threshs0_m_threshold_q0) < $signed(accu_9_V_fu_2831_p2)) ? 1'b1 : 1'b0);

assign tmp_i1160_i_i_fu_3169_p2 = (($signed(threshs0_m_threshold_13_q0) < $signed(accu_10_V_fu_2863_p2)) ? 1'b1 : 1'b0);

assign tmp_i1161_i_i_fu_3175_p2 = (($signed(threshs0_m_threshold_12_q0) < $signed(accu_11_V_fu_2895_p2)) ? 1'b1 : 1'b0);

assign tmp_i1162_i_i_fu_3181_p2 = (($signed(threshs0_m_threshold_11_q0) < $signed(accu_12_V_fu_2927_p2)) ? 1'b1 : 1'b0);

assign tmp_i1163_i_i_fu_3187_p2 = (($signed(threshs0_m_threshold_10_q0) < $signed(accu_13_V_fu_2959_p2)) ? 1'b1 : 1'b0);

assign tmp_i1164_i_i_fu_3193_p2 = (($signed(threshs0_m_threshold_9_q0) < $signed(accu_14_V_fu_2991_p2)) ? 1'b1 : 1'b0);

assign tmp_i1165_i_i_fu_3199_p2 = (($signed(threshs0_m_threshold_8_q0) < $signed(accu_15_V_fu_3023_p2)) ? 1'b1 : 1'b0);

assign tmp_i_i_1069_fu_766_p2 = ((nf_assign_fu_224 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_i_i_fu_736_p2 = (tmp_fu_724_p2 + tmp_1265_fu_730_p2);

assign tmp_i_i_i_fu_3109_p2 = (($signed(threshs0_m_threshold_15_q0) < $signed(accu_0_V_fu_2543_p2)) ? 1'b1 : 1'b0);

assign weights0_m_weights_V_10_address0 = tmp_103_i_i_fu_1185_p1;

assign weights0_m_weights_V_11_address0 = tmp_103_i_i_fu_1185_p1;

assign weights0_m_weights_V_12_address0 = tmp_103_i_i_fu_1185_p1;

assign weights0_m_weights_V_13_address0 = tmp_103_i_i_fu_1185_p1;

assign weights0_m_weights_V_14_address0 = tmp_103_i_i_fu_1185_p1;

assign weights0_m_weights_V_15_address0 = tmp_103_i_i_fu_1185_p1;

assign weights0_m_weights_V_1_address0 = tmp_103_i_i_fu_1185_p1;

assign weights0_m_weights_V_2_address0 = tmp_103_i_i_fu_1185_p1;

assign weights0_m_weights_V_3_address0 = tmp_103_i_i_fu_1185_p1;

assign weights0_m_weights_V_4_address0 = tmp_103_i_i_fu_1185_p1;

assign weights0_m_weights_V_5_address0 = tmp_103_i_i_fu_1185_p1;

assign weights0_m_weights_V_6_address0 = tmp_103_i_i_fu_1185_p1;

assign weights0_m_weights_V_7_address0 = tmp_103_i_i_fu_1185_p1;

assign weights0_m_weights_V_8_address0 = tmp_103_i_i_fu_1185_p1;

assign weights0_m_weights_V_9_address0 = tmp_103_i_i_fu_1185_p1;

assign weights0_m_weights_V_address0 = tmp_103_i_i_fu_1185_p1;

always @ (posedge ap_clk) begin
    tmp_i_i_reg_3400[1:0] <= 2'b00;
    tmp154_reg_3604[0] <= 1'b0;
    tmp157_reg_3614[0] <= 1'b0;
    tmp160_reg_3624[0] <= 1'b0;
    tmp163_reg_3634[0] <= 1'b0;
    tmp166_reg_3644[0] <= 1'b0;
    tmp169_reg_3654[0] <= 1'b0;
    tmp172_reg_3664[0] <= 1'b0;
    tmp175_reg_3674[0] <= 1'b0;
    tmp178_reg_3684[0] <= 1'b0;
    tmp181_reg_3694[0] <= 1'b0;
    tmp184_reg_3704[0] <= 1'b0;
    tmp187_reg_3714[0] <= 1'b0;
    tmp190_reg_3724[0] <= 1'b0;
    tmp193_reg_3734[0] <= 1'b0;
    tmp196_reg_3744[0] <= 1'b0;
    tmp199_reg_3754[0] <= 1'b0;
end

endmodule //Matrix_Vector_Activa_4
