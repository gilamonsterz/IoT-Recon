// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Matrix_Vector_Activa_4 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write,
        tmp_loc_dout,
        tmp_loc_empty_n,
        tmp_loc_read,
        weights0_m_weights_V_address0,
        weights0_m_weights_V_ce0,
        weights0_m_weights_V_q0,
        weights0_m_weights_V_1_address0,
        weights0_m_weights_V_1_ce0,
        weights0_m_weights_V_1_q0,
        weights0_m_weights_V_2_address0,
        weights0_m_weights_V_2_ce0,
        weights0_m_weights_V_2_q0,
        weights0_m_weights_V_3_address0,
        weights0_m_weights_V_3_ce0,
        weights0_m_weights_V_3_q0,
        weights0_m_weights_V_4_address0,
        weights0_m_weights_V_4_ce0,
        weights0_m_weights_V_4_q0,
        weights0_m_weights_V_5_address0,
        weights0_m_weights_V_5_ce0,
        weights0_m_weights_V_5_q0,
        weights0_m_weights_V_6_address0,
        weights0_m_weights_V_6_ce0,
        weights0_m_weights_V_6_q0,
        weights0_m_weights_V_7_address0,
        weights0_m_weights_V_7_ce0,
        weights0_m_weights_V_7_q0,
        threshs0_m_threshold_15_address0,
        threshs0_m_threshold_15_ce0,
        threshs0_m_threshold_15_q0,
        threshs0_m_threshold_14_address0,
        threshs0_m_threshold_14_ce0,
        threshs0_m_threshold_14_q0,
        threshs0_m_threshold_13_address0,
        threshs0_m_threshold_13_ce0,
        threshs0_m_threshold_13_q0,
        threshs0_m_threshold_12_address0,
        threshs0_m_threshold_12_ce0,
        threshs0_m_threshold_12_q0,
        threshs0_m_threshold_11_address0,
        threshs0_m_threshold_11_ce0,
        threshs0_m_threshold_11_q0,
        threshs0_m_threshold_10_address0,
        threshs0_m_threshold_10_ce0,
        threshs0_m_threshold_10_q0,
        threshs0_m_threshold_9_address0,
        threshs0_m_threshold_9_ce0,
        threshs0_m_threshold_9_q0,
        threshs0_m_threshold_8_address0,
        threshs0_m_threshold_8_ce0,
        threshs0_m_threshold_8_q0,
        threshs0_m_threshold_7_address0,
        threshs0_m_threshold_7_ce0,
        threshs0_m_threshold_7_q0,
        threshs0_m_threshold_6_address0,
        threshs0_m_threshold_6_ce0,
        threshs0_m_threshold_6_q0,
        threshs0_m_threshold_5_address0,
        threshs0_m_threshold_5_ce0,
        threshs0_m_threshold_5_q0,
        threshs0_m_threshold_4_address0,
        threshs0_m_threshold_4_ce0,
        threshs0_m_threshold_4_q0,
        threshs0_m_threshold_3_address0,
        threshs0_m_threshold_3_ce0,
        threshs0_m_threshold_3_q0,
        threshs0_m_threshold_2_address0,
        threshs0_m_threshold_2_ce0,
        threshs0_m_threshold_2_q0,
        threshs0_m_threshold_1_address0,
        threshs0_m_threshold_1_ce0,
        threshs0_m_threshold_1_q0,
        threshs0_m_threshold_address0,
        threshs0_m_threshold_ce0,
        threshs0_m_threshold_q0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state8 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [23:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [15:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;
input  [31:0] tmp_loc_dout;
input   tmp_loc_empty_n;
output   tmp_loc_read;
output  [6:0] weights0_m_weights_V_address0;
output   weights0_m_weights_V_ce0;
input  [5:0] weights0_m_weights_V_q0;
output  [6:0] weights0_m_weights_V_1_address0;
output   weights0_m_weights_V_1_ce0;
input  [5:0] weights0_m_weights_V_1_q0;
output  [6:0] weights0_m_weights_V_2_address0;
output   weights0_m_weights_V_2_ce0;
input  [5:0] weights0_m_weights_V_2_q0;
output  [6:0] weights0_m_weights_V_3_address0;
output   weights0_m_weights_V_3_ce0;
input  [5:0] weights0_m_weights_V_3_q0;
output  [6:0] weights0_m_weights_V_4_address0;
output   weights0_m_weights_V_4_ce0;
input  [5:0] weights0_m_weights_V_4_q0;
output  [6:0] weights0_m_weights_V_5_address0;
output   weights0_m_weights_V_5_ce0;
input  [5:0] weights0_m_weights_V_5_q0;
output  [6:0] weights0_m_weights_V_6_address0;
output   weights0_m_weights_V_6_ce0;
input  [5:0] weights0_m_weights_V_6_q0;
output  [6:0] weights0_m_weights_V_7_address0;
output   weights0_m_weights_V_7_ce0;
input  [5:0] weights0_m_weights_V_7_q0;
output  [2:0] threshs0_m_threshold_15_address0;
output   threshs0_m_threshold_15_ce0;
input  [23:0] threshs0_m_threshold_15_q0;
output  [2:0] threshs0_m_threshold_14_address0;
output   threshs0_m_threshold_14_ce0;
input  [23:0] threshs0_m_threshold_14_q0;
output  [2:0] threshs0_m_threshold_13_address0;
output   threshs0_m_threshold_13_ce0;
input  [23:0] threshs0_m_threshold_13_q0;
output  [2:0] threshs0_m_threshold_12_address0;
output   threshs0_m_threshold_12_ce0;
input  [23:0] threshs0_m_threshold_12_q0;
output  [2:0] threshs0_m_threshold_11_address0;
output   threshs0_m_threshold_11_ce0;
input  [23:0] threshs0_m_threshold_11_q0;
output  [2:0] threshs0_m_threshold_10_address0;
output   threshs0_m_threshold_10_ce0;
input  [23:0] threshs0_m_threshold_10_q0;
output  [2:0] threshs0_m_threshold_9_address0;
output   threshs0_m_threshold_9_ce0;
input  [23:0] threshs0_m_threshold_9_q0;
output  [2:0] threshs0_m_threshold_8_address0;
output   threshs0_m_threshold_8_ce0;
input  [23:0] threshs0_m_threshold_8_q0;
output  [2:0] threshs0_m_threshold_7_address0;
output   threshs0_m_threshold_7_ce0;
input  [23:0] threshs0_m_threshold_7_q0;
output  [2:0] threshs0_m_threshold_6_address0;
output   threshs0_m_threshold_6_ce0;
input  [23:0] threshs0_m_threshold_6_q0;
output  [2:0] threshs0_m_threshold_5_address0;
output   threshs0_m_threshold_5_ce0;
input  [23:0] threshs0_m_threshold_5_q0;
output  [2:0] threshs0_m_threshold_4_address0;
output   threshs0_m_threshold_4_ce0;
input  [23:0] threshs0_m_threshold_4_q0;
output  [2:0] threshs0_m_threshold_3_address0;
output   threshs0_m_threshold_3_ce0;
input  [23:0] threshs0_m_threshold_3_q0;
output  [2:0] threshs0_m_threshold_2_address0;
output   threshs0_m_threshold_2_ce0;
input  [23:0] threshs0_m_threshold_2_q0;
output  [2:0] threshs0_m_threshold_1_address0;
output   threshs0_m_threshold_1_ce0;
input  [23:0] threshs0_m_threshold_1_q0;
output  [2:0] threshs0_m_threshold_address0;
output   threshs0_m_threshold_ce0;
input  [23:0] threshs0_m_threshold_q0;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_V_V_read;
reg out_V_V_write;
reg tmp_loc_read;
reg weights0_m_weights_V_ce0;
reg weights0_m_weights_V_1_ce0;
reg weights0_m_weights_V_2_ce0;
reg weights0_m_weights_V_3_ce0;
reg weights0_m_weights_V_4_ce0;
reg weights0_m_weights_V_5_ce0;
reg weights0_m_weights_V_6_ce0;
reg weights0_m_weights_V_7_ce0;
reg threshs0_m_threshold_15_ce0;
reg threshs0_m_threshold_14_ce0;
reg threshs0_m_threshold_13_ce0;
reg threshs0_m_threshold_12_ce0;
reg threshs0_m_threshold_11_ce0;
reg threshs0_m_threshold_10_ce0;
reg threshs0_m_threshold_9_ce0;
reg threshs0_m_threshold_8_ce0;
reg threshs0_m_threshold_7_ce0;
reg threshs0_m_threshold_6_ce0;
reg threshs0_m_threshold_5_ce0;
reg threshs0_m_threshold_4_ce0;
reg threshs0_m_threshold_3_ce0;
reg threshs0_m_threshold_2_ce0;
reg threshs0_m_threshold_1_ce0;
reg threshs0_m_threshold_ce0;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    in_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_i_i_reg_2530;
reg   [0:0] tmp_i_i_1231_reg_2539;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] tmp_34_i_i_reg_2572;
reg   [0:0] tmp_34_i_i_reg_2572_pp0_iter4_reg;
reg    tmp_loc_blk_n;
reg   [31:0] i_i_i_reg_555;
wire   [31:0] tmp_i_i_fu_592_p2;
reg   [31:0] tmp_i_i_reg_2525;
reg    ap_block_state1;
wire   [0:0] exitcond_i_i_fu_608_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_predicate_op77_read_state3;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
reg    ap_block_state7_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] i_fu_613_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_i_i_1231_fu_622_p2;
wire   [3:0] tmp_185_fu_631_p1;
reg   [3:0] tmp_185_reg_2543;
wire   [3:0] tmp_184_fu_635_p1;
reg   [3:0] tmp_184_reg_2548;
wire   [0:0] tmp_33_i_i_fu_642_p2;
reg   [0:0] tmp_33_i_i_reg_2560;
reg   [0:0] tmp_33_i_i_reg_2560_pp0_iter1_reg;
reg   [0:0] tmp_33_i_i_reg_2560_pp0_iter2_reg;
reg   [0:0] tmp_33_i_i_reg_2560_pp0_iter3_reg;
wire   [0:0] tmp_34_i_i_fu_654_p2;
reg   [0:0] tmp_34_i_i_reg_2572_pp0_iter1_reg;
reg   [0:0] tmp_34_i_i_reg_2572_pp0_iter2_reg;
reg   [0:0] tmp_34_i_i_reg_2572_pp0_iter3_reg;
reg   [31:0] nf_assign_load_reg_2576;
reg   [31:0] nf_assign_load_reg_2576_pp0_iter1_reg;
reg   [31:0] nf_assign_load_reg_2576_pp0_iter2_reg;
wire   [0:0] tmp_35_i_i_fu_674_p2;
reg   [0:0] tmp_35_i_i_reg_2581;
wire   [23:0] inElem_V_fu_720_p11;
wire   [1:0] wgt_M_instance_0_V_fu_1076_p1;
reg  signed [1:0] wgt_M_instance_0_V_reg_2636;
wire   [7:0] tmp_187_fu_1100_p1;
reg   [7:0] tmp_187_reg_2641;
wire   [9:0] r_V_9_0_0_1_i_i_fu_1122_p2;
reg   [9:0] r_V_9_0_0_1_i_i_reg_2646;
wire   [9:0] r_V_9_0_0_2_i_i_fu_1146_p2;
reg   [9:0] r_V_9_0_0_2_i_i_reg_2651;
wire   [1:0] wgt_M_instance_0_V_11_fu_1152_p1;
reg  signed [1:0] wgt_M_instance_0_V_11_reg_2656;
wire   [9:0] r_V_9_0_1_1_i_i_fu_1180_p2;
reg   [9:0] r_V_9_0_1_1_i_i_reg_2661;
wire   [9:0] r_V_9_0_1_2_i_i_fu_1190_p2;
reg   [9:0] r_V_9_0_1_2_i_i_reg_2666;
wire   [1:0] wgt_M_instance_0_V_12_fu_1196_p1;
reg  signed [1:0] wgt_M_instance_0_V_12_reg_2671;
wire   [9:0] r_V_9_0_2_1_i_i_fu_1224_p2;
reg   [9:0] r_V_9_0_2_1_i_i_reg_2676;
wire   [9:0] r_V_9_0_2_2_i_i_fu_1234_p2;
reg   [9:0] r_V_9_0_2_2_i_i_reg_2681;
wire   [1:0] wgt_M_instance_0_V_13_fu_1240_p1;
reg  signed [1:0] wgt_M_instance_0_V_13_reg_2686;
wire   [9:0] r_V_9_0_3_1_i_i_fu_1268_p2;
reg   [9:0] r_V_9_0_3_1_i_i_reg_2691;
wire   [9:0] r_V_9_0_3_2_i_i_fu_1278_p2;
reg   [9:0] r_V_9_0_3_2_i_i_reg_2696;
wire   [1:0] wgt_M_instance_0_V_14_fu_1284_p1;
reg  signed [1:0] wgt_M_instance_0_V_14_reg_2701;
wire   [9:0] r_V_9_0_4_1_i_i_fu_1312_p2;
reg   [9:0] r_V_9_0_4_1_i_i_reg_2706;
wire   [9:0] r_V_9_0_4_2_i_i_fu_1322_p2;
reg   [9:0] r_V_9_0_4_2_i_i_reg_2711;
wire   [1:0] wgt_M_instance_0_V_15_fu_1328_p1;
reg  signed [1:0] wgt_M_instance_0_V_15_reg_2716;
wire   [9:0] r_V_9_0_5_1_i_i_fu_1356_p2;
reg   [9:0] r_V_9_0_5_1_i_i_reg_2721;
wire   [9:0] r_V_9_0_5_2_i_i_fu_1366_p2;
reg   [9:0] r_V_9_0_5_2_i_i_reg_2726;
wire   [1:0] wgt_M_instance_0_V_16_fu_1372_p1;
reg  signed [1:0] wgt_M_instance_0_V_16_reg_2731;
wire   [9:0] r_V_9_0_6_1_i_i_fu_1400_p2;
reg   [9:0] r_V_9_0_6_1_i_i_reg_2736;
wire   [9:0] r_V_9_0_6_2_i_i_fu_1410_p2;
reg   [9:0] r_V_9_0_6_2_i_i_reg_2741;
wire   [1:0] wgt_M_instance_0_V_17_fu_1416_p1;
reg  signed [1:0] wgt_M_instance_0_V_17_reg_2746;
wire   [9:0] r_V_9_0_7_1_i_i_fu_1444_p2;
reg   [9:0] r_V_9_0_7_1_i_i_reg_2751;
wire   [9:0] r_V_9_0_7_2_i_i_fu_1454_p2;
reg   [9:0] r_V_9_0_7_2_i_i_reg_2756;
wire   [9:0] r_V_9_0_0_i_i_fu_1466_p2;
reg   [9:0] r_V_9_0_0_i_i_reg_2761;
wire   [11:0] tmp154_fu_1494_p2;
reg   [11:0] tmp154_reg_2766;
wire   [9:0] r_V_9_0_1_i_i_fu_1503_p2;
reg   [9:0] r_V_9_0_1_i_i_reg_2771;
wire   [11:0] tmp157_fu_1531_p2;
reg   [11:0] tmp157_reg_2776;
wire   [9:0] r_V_9_0_2_i_i_fu_1540_p2;
reg   [9:0] r_V_9_0_2_i_i_reg_2781;
wire   [11:0] tmp160_fu_1568_p2;
reg   [11:0] tmp160_reg_2786;
wire   [9:0] r_V_9_0_3_i_i_fu_1577_p2;
reg   [9:0] r_V_9_0_3_i_i_reg_2791;
wire   [11:0] tmp163_fu_1605_p2;
reg   [11:0] tmp163_reg_2796;
wire   [9:0] r_V_9_0_4_i_i_fu_1614_p2;
reg   [9:0] r_V_9_0_4_i_i_reg_2801;
wire   [11:0] tmp166_fu_1642_p2;
reg   [11:0] tmp166_reg_2806;
wire   [9:0] r_V_9_0_5_i_i_fu_1651_p2;
reg   [9:0] r_V_9_0_5_i_i_reg_2811;
wire   [11:0] tmp169_fu_1679_p2;
reg   [11:0] tmp169_reg_2816;
wire   [9:0] r_V_9_0_6_i_i_fu_1688_p2;
reg   [9:0] r_V_9_0_6_i_i_reg_2821;
wire   [11:0] tmp172_fu_1716_p2;
reg   [11:0] tmp172_reg_2826;
wire   [9:0] r_V_9_0_7_i_i_fu_1725_p2;
reg   [9:0] r_V_9_0_7_i_i_reg_2831;
wire   [11:0] tmp175_fu_1753_p2;
reg   [11:0] tmp175_reg_2836;
wire   [0:0] slt_fu_2106_p2;
reg   [0:0] slt_reg_2921;
wire   [0:0] tmp_i446_i_i_fu_2112_p2;
reg   [0:0] tmp_i446_i_i_reg_2926;
wire   [0:0] slt11_fu_2118_p2;
reg   [0:0] slt11_reg_2931;
wire   [0:0] tmp_i448_i_i_fu_2124_p2;
reg   [0:0] tmp_i448_i_i_reg_2936;
wire   [0:0] slt12_fu_2130_p2;
reg   [0:0] slt12_reg_2941;
wire   [0:0] tmp_i450_i_i_fu_2136_p2;
reg   [0:0] tmp_i450_i_i_reg_2946;
wire   [0:0] slt13_fu_2142_p2;
reg   [0:0] slt13_reg_2951;
wire   [0:0] tmp_i452_i_i_fu_2148_p2;
reg   [0:0] tmp_i452_i_i_reg_2956;
wire   [0:0] slt14_fu_2154_p2;
reg   [0:0] slt14_reg_2961;
wire   [0:0] tmp_i454_i_i_fu_2160_p2;
reg   [0:0] tmp_i454_i_i_reg_2966;
wire   [0:0] slt15_fu_2166_p2;
reg   [0:0] slt15_reg_2971;
wire   [0:0] tmp_i456_i_i_fu_2172_p2;
reg   [0:0] tmp_i456_i_i_reg_2976;
wire   [0:0] slt16_fu_2178_p2;
reg   [0:0] slt16_reg_2981;
wire   [0:0] tmp_i458_i_i_fu_2184_p2;
reg   [0:0] tmp_i458_i_i_reg_2986;
wire   [0:0] slt17_fu_2190_p2;
reg   [0:0] slt17_reg_2991;
wire   [0:0] tmp_i460_i_i_fu_2196_p2;
reg   [0:0] tmp_i460_i_i_reg_2996;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
wire   [23:0] ap_phi_reg_pp0_iter0_act_m_val_V_reg_566;
reg   [23:0] ap_phi_reg_pp0_iter1_act_m_val_V_reg_566;
reg   [23:0] ap_phi_reg_pp0_iter2_act_m_val_V_reg_566;
wire   [63:0] tmp_134_0_i_i_fu_1041_p1;
wire   [63:0] tmp_137_i_i_fu_1759_p1;
reg    ap_block_pp0_stage0_01001;
reg   [23:0] accu_V_0_i_i_fu_144;
wire   [23:0] accu_0_V_fu_1878_p2;
reg   [23:0] accu_V_1_i_i_fu_148;
wire   [23:0] accu_1_V_fu_1904_p2;
reg   [23:0] accu_V_2_i_i_fu_152;
wire   [23:0] accu_2_V_fu_1930_p2;
reg   [23:0] accu_V_3_i_i_fu_156;
wire   [23:0] accu_3_V_fu_1956_p2;
reg   [23:0] accu_V_4_i_i_fu_160;
wire   [23:0] accu_4_V_fu_1982_p2;
reg   [23:0] accu_V_5_i_i_fu_164;
wire   [23:0] accu_5_V_fu_2008_p2;
reg   [23:0] accu_V_6_i_i_fu_168;
wire   [23:0] accu_6_V_fu_2034_p2;
reg   [23:0] accu_V_7_i_i_fu_172;
wire   [23:0] accu_7_V_fu_2060_p2;
reg   [31:0] tile_assign_fu_176;
wire   [31:0] tile_fu_1053_p2;
wire   [31:0] p_5_i_i_fu_1064_p3;
reg   [31:0] sf_5_fu_180;
wire   [31:0] sf_fu_648_p2;
reg   [31:0] nf_assign_fu_184;
wire   [31:0] p_i_i_fu_680_p3;
reg   [23:0] inputBuf_8_V_2_fu_188;
wire   [23:0] inputBuf_8_V_24_fu_985_p3;
reg   [23:0] inputBuf_8_V_13_fu_192;
wire   [23:0] inputBuf_8_V_23_fu_977_p3;
reg   [23:0] inputBuf_8_V_11_fu_196;
wire   [23:0] inputBuf_8_V_21_fu_961_p3;
reg   [23:0] inputBuf_8_V_9_fu_200;
wire   [23:0] inputBuf_8_V_20_fu_945_p3;
reg   [23:0] inputBuf_8_V_7_fu_204;
wire   [23:0] inputBuf_8_V_8_fu_921_p3;
reg   [23:0] inputBuf_8_V_5_fu_208;
wire   [23:0] inputBuf_8_V_6_fu_905_p3;
reg   [23:0] inputBuf_8_V_3_fu_212;
wire   [23:0] inputBuf_8_V_4_fu_881_p3;
reg   [23:0] inputBuf_8_V_16_fu_216;
wire   [23:0] inputBuf_8_V_1_fu_857_p3;
reg   [23:0] inputBuf_8_V_18_fu_220;
wire   [23:0] inputBuf_8_V_fu_825_p3;
wire   [31:0] tmp_fu_580_p2;
wire   [31:0] tmp_183_fu_586_p2;
wire   [31:0] nf_fu_668_p2;
wire   [0:0] sel_tmp7_fu_778_p2;
wire   [0:0] sel_tmp6_fu_773_p2;
wire   [0:0] sel_tmp5_fu_768_p2;
wire   [0:0] sel_tmp4_fu_763_p2;
wire   [0:0] sel_tmp3_fu_758_p2;
wire   [0:0] sel_tmp2_fu_753_p2;
wire   [0:0] sel_tmp1_fu_748_p2;
wire   [0:0] sel_tmp_fu_743_p2;
wire   [0:0] or_cond_fu_783_p2;
wire   [0:0] or_cond1_fu_789_p2;
wire   [0:0] or_cond2_fu_795_p2;
wire   [0:0] or_cond3_fu_801_p2;
wire   [0:0] or_cond4_fu_807_p2;
wire   [0:0] or_cond5_fu_813_p2;
wire   [0:0] or_cond6_fu_819_p2;
wire   [23:0] newSel_fu_833_p3;
wire   [23:0] newSel1_fu_841_p3;
wire   [23:0] newSel2_fu_849_p3;
wire   [23:0] newSel4_fu_865_p3;
wire   [23:0] newSel5_fu_873_p3;
wire   [23:0] newSel7_fu_889_p3;
wire   [23:0] newSel8_fu_897_p3;
wire   [23:0] newSel3_fu_913_p3;
wire   [23:0] newSel6_fu_929_p3;
wire   [23:0] newSel9_fu_937_p3;
wire   [23:0] newSel10_fu_953_p3;
wire   [23:0] inputBuf_8_V_22_fu_969_p3;
wire  signed [1:0] wgt_M_instance_1_V_fu_1080_p4;
wire   [7:0] arg_V_read_assign_s_fu_1104_p4;
wire  signed [7:0] r_V_9_0_0_1_i_i_fu_1122_p0;
wire  signed [9:0] OP2_V_0_1_i_i_fu_1118_p1;
wire  signed [1:0] wgt_M_instance_2_V_fu_1090_p4;
wire   [7:0] arg_V_read_assign_27_fu_1128_p4;
wire  signed [7:0] r_V_9_0_0_2_i_i_fu_1146_p0;
wire  signed [9:0] OP2_V_0_2_i_i_fu_1142_p1;
wire  signed [1:0] wgt_M_instance_1_V_11_fu_1156_p4;
wire  signed [7:0] r_V_9_0_1_1_i_i_fu_1180_p0;
wire  signed [1:0] wgt_M_instance_2_V_11_fu_1166_p4;
wire  signed [7:0] r_V_9_0_1_2_i_i_fu_1190_p0;
wire  signed [1:0] wgt_M_instance_1_V_12_fu_1200_p4;
wire  signed [7:0] r_V_9_0_2_1_i_i_fu_1224_p0;
wire  signed [1:0] wgt_M_instance_2_V_12_fu_1210_p4;
wire  signed [7:0] r_V_9_0_2_2_i_i_fu_1234_p0;
wire  signed [1:0] wgt_M_instance_1_V_13_fu_1244_p4;
wire  signed [7:0] r_V_9_0_3_1_i_i_fu_1268_p0;
wire  signed [1:0] wgt_M_instance_2_V_13_fu_1254_p4;
wire  signed [7:0] r_V_9_0_3_2_i_i_fu_1278_p0;
wire  signed [1:0] wgt_M_instance_1_V_14_fu_1288_p4;
wire  signed [7:0] r_V_9_0_4_1_i_i_fu_1312_p0;
wire  signed [1:0] wgt_M_instance_2_V_14_fu_1298_p4;
wire  signed [7:0] r_V_9_0_4_2_i_i_fu_1322_p0;
wire  signed [1:0] wgt_M_instance_1_V_15_fu_1332_p4;
wire  signed [7:0] r_V_9_0_5_1_i_i_fu_1356_p0;
wire  signed [1:0] wgt_M_instance_2_V_15_fu_1342_p4;
wire  signed [7:0] r_V_9_0_5_2_i_i_fu_1366_p0;
wire  signed [1:0] wgt_M_instance_1_V_16_fu_1376_p4;
wire  signed [7:0] r_V_9_0_6_1_i_i_fu_1400_p0;
wire  signed [1:0] wgt_M_instance_2_V_16_fu_1386_p4;
wire  signed [7:0] r_V_9_0_6_2_i_i_fu_1410_p0;
wire  signed [1:0] wgt_M_instance_1_V_17_fu_1420_p4;
wire  signed [7:0] r_V_9_0_7_1_i_i_fu_1444_p0;
wire  signed [1:0] wgt_M_instance_2_V_17_fu_1430_p4;
wire  signed [7:0] r_V_9_0_7_2_i_i_fu_1454_p0;
wire  signed [7:0] r_V_9_0_0_i_i_fu_1466_p0;
wire  signed [9:0] OP2_V_0_i_i_fu_1463_p1;
wire   [10:0] tmp_142_0_1_i_i_fu_1472_p3;
wire   [10:0] tmp_142_0_2_i_i_fu_1483_p3;
wire  signed [11:0] tmp_142_0_1_cast_i_i_fu_1479_p1;
wire  signed [11:0] tmp_142_0_2_cast_i_i_fu_1490_p1;
wire  signed [7:0] r_V_9_0_1_i_i_fu_1503_p0;
wire   [10:0] tmp_142_1_1_i_i_fu_1509_p3;
wire   [10:0] tmp_142_1_2_i_i_fu_1520_p3;
wire  signed [11:0] tmp_142_1_1_cast_i_i_fu_1516_p1;
wire  signed [11:0] tmp_142_1_2_cast_i_i_fu_1527_p1;
wire  signed [7:0] r_V_9_0_2_i_i_fu_1540_p0;
wire   [10:0] tmp_142_2_1_i_i_fu_1546_p3;
wire   [10:0] tmp_142_2_2_i_i_fu_1557_p3;
wire  signed [11:0] tmp_142_2_1_cast_i_i_fu_1553_p1;
wire  signed [11:0] tmp_142_2_2_cast_i_i_fu_1564_p1;
wire  signed [7:0] r_V_9_0_3_i_i_fu_1577_p0;
wire   [10:0] tmp_142_3_1_i_i_fu_1583_p3;
wire   [10:0] tmp_142_3_2_i_i_fu_1594_p3;
wire  signed [11:0] tmp_142_3_1_cast_i_i_fu_1590_p1;
wire  signed [11:0] tmp_142_3_2_cast_i_i_fu_1601_p1;
wire  signed [7:0] r_V_9_0_4_i_i_fu_1614_p0;
wire   [10:0] tmp_142_4_1_i_i_fu_1620_p3;
wire   [10:0] tmp_142_4_2_i_i_fu_1631_p3;
wire  signed [11:0] tmp_142_4_1_cast_i_i_fu_1627_p1;
wire  signed [11:0] tmp_142_4_2_cast_i_i_fu_1638_p1;
wire  signed [7:0] r_V_9_0_5_i_i_fu_1651_p0;
wire   [10:0] tmp_142_5_1_i_i_fu_1657_p3;
wire   [10:0] tmp_142_5_2_i_i_fu_1668_p3;
wire  signed [11:0] tmp_142_5_1_cast_i_i_fu_1664_p1;
wire  signed [11:0] tmp_142_5_2_cast_i_i_fu_1675_p1;
wire  signed [7:0] r_V_9_0_6_i_i_fu_1688_p0;
wire   [10:0] tmp_142_6_1_i_i_fu_1694_p3;
wire   [10:0] tmp_142_6_2_i_i_fu_1705_p3;
wire  signed [11:0] tmp_142_6_1_cast_i_i_fu_1701_p1;
wire  signed [11:0] tmp_142_6_2_cast_i_i_fu_1712_p1;
wire  signed [7:0] r_V_9_0_7_i_i_fu_1725_p0;
wire   [10:0] tmp_142_7_1_i_i_fu_1731_p3;
wire   [10:0] tmp_142_7_2_i_i_fu_1742_p3;
wire  signed [11:0] tmp_142_7_1_cast_i_i_fu_1738_p1;
wire  signed [11:0] tmp_142_7_2_cast_i_i_fu_1749_p1;
wire   [10:0] tmp_142_0_i_i_fu_1858_p3;
wire   [23:0] p_accu_V_0_i_i_fu_1851_p3;
wire  signed [23:0] tmp_142_0_cast_i_i_fu_1865_p1;
wire  signed [23:0] tmp154_cast_fu_1875_p1;
wire   [23:0] tmp153_fu_1869_p2;
wire   [10:0] tmp_142_1_i_i_fu_1884_p3;
wire   [23:0] p_accu_V_1_i_i_fu_1844_p3;
wire  signed [23:0] tmp_142_1_cast_i_i_fu_1891_p1;
wire  signed [23:0] tmp157_cast_fu_1901_p1;
wire   [23:0] tmp156_fu_1895_p2;
wire   [10:0] tmp_142_2_i_i_fu_1910_p3;
wire   [23:0] p_accu_V_2_i_i_fu_1837_p3;
wire  signed [23:0] tmp_142_2_cast_i_i_fu_1917_p1;
wire  signed [23:0] tmp160_cast_fu_1927_p1;
wire   [23:0] tmp159_fu_1921_p2;
wire   [10:0] tmp_142_3_i_i_fu_1936_p3;
wire   [23:0] p_accu_V_3_i_i_fu_1830_p3;
wire  signed [23:0] tmp_142_3_cast_i_i_fu_1943_p1;
wire  signed [23:0] tmp163_cast_fu_1953_p1;
wire   [23:0] tmp162_fu_1947_p2;
wire   [10:0] tmp_142_4_i_i_fu_1962_p3;
wire   [23:0] p_accu_V_4_i_i_fu_1823_p3;
wire  signed [23:0] tmp_142_4_cast_i_i_fu_1969_p1;
wire  signed [23:0] tmp166_cast_fu_1979_p1;
wire   [23:0] tmp165_fu_1973_p2;
wire   [10:0] tmp_142_5_i_i_fu_1988_p3;
wire   [23:0] p_accu_V_5_i_i_fu_1816_p3;
wire  signed [23:0] tmp_142_5_cast_i_i_fu_1995_p1;
wire  signed [23:0] tmp169_cast_fu_2005_p1;
wire   [23:0] tmp168_fu_1999_p2;
wire   [10:0] tmp_142_6_i_i_fu_2014_p3;
wire   [23:0] p_accu_V_6_i_i_fu_1809_p3;
wire  signed [23:0] tmp_142_6_cast_i_i_fu_2021_p1;
wire  signed [23:0] tmp172_cast_fu_2031_p1;
wire   [23:0] tmp171_fu_2025_p2;
wire   [10:0] tmp_142_7_i_i_fu_2040_p3;
wire   [23:0] p_accu_V_7_i_i_fu_1802_p3;
wire  signed [23:0] tmp_142_7_cast_i_i_fu_2047_p1;
wire  signed [23:0] tmp175_cast_fu_2057_p1;
wire   [23:0] tmp174_fu_2051_p2;
wire   [0:0] rev_fu_2202_p2;
wire   [1:0] result_V_0_cast_i_i_fu_2207_p3;
wire   [1:0] tmp_145_0_1_i_i_fu_2215_p1;
wire   [0:0] rev11_fu_2224_p2;
wire   [1:0] result_V_1_cast_i_i_fu_2229_p3;
wire   [1:0] tmp_145_1_1_i_i_fu_2237_p1;
wire   [0:0] rev12_fu_2246_p2;
wire   [1:0] result_V_2_cast_i_i_fu_2251_p3;
wire   [1:0] tmp_145_2_1_i_i_fu_2259_p1;
wire   [0:0] rev13_fu_2268_p2;
wire   [1:0] result_V_3_cast_i_i_fu_2273_p3;
wire   [1:0] tmp_145_3_1_i_i_fu_2281_p1;
wire   [0:0] rev14_fu_2290_p2;
wire   [1:0] result_V_4_cast_i_i_fu_2295_p3;
wire   [1:0] tmp_145_4_1_i_i_fu_2303_p1;
wire   [0:0] rev15_fu_2312_p2;
wire   [1:0] result_V_5_cast_i_i_fu_2317_p3;
wire   [1:0] tmp_145_5_1_i_i_fu_2325_p1;
wire   [0:0] rev16_fu_2334_p2;
wire   [1:0] result_V_6_cast_i_i_fu_2339_p3;
wire   [1:0] tmp_145_6_1_i_i_fu_2347_p1;
wire   [0:0] rev17_fu_2356_p2;
wire   [1:0] result_V_7_cast_i_i_fu_2361_p3;
wire   [1:0] tmp_145_7_1_i_i_fu_2369_p1;
wire   [1:0] result_V_7_1_i_i_fu_2372_p2;
wire   [1:0] result_V_6_1_i_i_fu_2350_p2;
wire   [1:0] result_V_5_1_i_i_fu_2328_p2;
wire   [1:0] result_V_4_1_i_i_fu_2306_p2;
wire   [1:0] result_V_3_1_i_i_fu_2284_p2;
wire   [1:0] result_V_2_1_i_i_fu_2262_p2;
wire   [1:0] result_V_1_1_i_i_fu_2240_p2;
wire   [1:0] result_V_0_1_i_i_fu_2218_p2;
wire    ap_CS_fsm_state8;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_504;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

BBJ_u96_cnvW2A2_mhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 24 ),
    .din4_WIDTH( 24 ),
    .din5_WIDTH( 24 ),
    .din6_WIDTH( 24 ),
    .din7_WIDTH( 24 ),
    .din8_WIDTH( 24 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 24 ))
BBJ_u96_cnvW2A2_mhbi_U44(
    .din0(inputBuf_8_V_2_fu_188),
    .din1(inputBuf_8_V_13_fu_192),
    .din2(inputBuf_8_V_11_fu_196),
    .din3(inputBuf_8_V_9_fu_200),
    .din4(inputBuf_8_V_7_fu_204),
    .din5(inputBuf_8_V_5_fu_208),
    .din6(inputBuf_8_V_3_fu_212),
    .din7(inputBuf_8_V_16_fu_216),
    .din8(inputBuf_8_V_18_fu_220),
    .din9(tmp_185_reg_2543),
    .dout(inElem_V_fu_720_p11)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U45(
    .din0(r_V_9_0_0_1_i_i_fu_1122_p0),
    .din1(wgt_M_instance_1_V_fu_1080_p4),
    .dout(r_V_9_0_0_1_i_i_fu_1122_p2)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U46(
    .din0(r_V_9_0_0_2_i_i_fu_1146_p0),
    .din1(wgt_M_instance_2_V_fu_1090_p4),
    .dout(r_V_9_0_0_2_i_i_fu_1146_p2)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U47(
    .din0(r_V_9_0_1_1_i_i_fu_1180_p0),
    .din1(wgt_M_instance_1_V_11_fu_1156_p4),
    .dout(r_V_9_0_1_1_i_i_fu_1180_p2)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U48(
    .din0(r_V_9_0_1_2_i_i_fu_1190_p0),
    .din1(wgt_M_instance_2_V_11_fu_1166_p4),
    .dout(r_V_9_0_1_2_i_i_fu_1190_p2)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U49(
    .din0(r_V_9_0_2_1_i_i_fu_1224_p0),
    .din1(wgt_M_instance_1_V_12_fu_1200_p4),
    .dout(r_V_9_0_2_1_i_i_fu_1224_p2)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U50(
    .din0(r_V_9_0_2_2_i_i_fu_1234_p0),
    .din1(wgt_M_instance_2_V_12_fu_1210_p4),
    .dout(r_V_9_0_2_2_i_i_fu_1234_p2)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U51(
    .din0(r_V_9_0_3_1_i_i_fu_1268_p0),
    .din1(wgt_M_instance_1_V_13_fu_1244_p4),
    .dout(r_V_9_0_3_1_i_i_fu_1268_p2)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U52(
    .din0(r_V_9_0_3_2_i_i_fu_1278_p0),
    .din1(wgt_M_instance_2_V_13_fu_1254_p4),
    .dout(r_V_9_0_3_2_i_i_fu_1278_p2)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U53(
    .din0(r_V_9_0_4_1_i_i_fu_1312_p0),
    .din1(wgt_M_instance_1_V_14_fu_1288_p4),
    .dout(r_V_9_0_4_1_i_i_fu_1312_p2)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U54(
    .din0(r_V_9_0_4_2_i_i_fu_1322_p0),
    .din1(wgt_M_instance_2_V_14_fu_1298_p4),
    .dout(r_V_9_0_4_2_i_i_fu_1322_p2)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U55(
    .din0(r_V_9_0_5_1_i_i_fu_1356_p0),
    .din1(wgt_M_instance_1_V_15_fu_1332_p4),
    .dout(r_V_9_0_5_1_i_i_fu_1356_p2)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U56(
    .din0(r_V_9_0_5_2_i_i_fu_1366_p0),
    .din1(wgt_M_instance_2_V_15_fu_1342_p4),
    .dout(r_V_9_0_5_2_i_i_fu_1366_p2)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U57(
    .din0(r_V_9_0_6_1_i_i_fu_1400_p0),
    .din1(wgt_M_instance_1_V_16_fu_1376_p4),
    .dout(r_V_9_0_6_1_i_i_fu_1400_p2)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U58(
    .din0(r_V_9_0_6_2_i_i_fu_1410_p0),
    .din1(wgt_M_instance_2_V_16_fu_1386_p4),
    .dout(r_V_9_0_6_2_i_i_fu_1410_p2)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U59(
    .din0(r_V_9_0_7_1_i_i_fu_1444_p0),
    .din1(wgt_M_instance_1_V_17_fu_1420_p4),
    .dout(r_V_9_0_7_1_i_i_fu_1444_p2)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U60(
    .din0(r_V_9_0_7_2_i_i_fu_1454_p0),
    .din1(wgt_M_instance_2_V_17_fu_1430_p4),
    .dout(r_V_9_0_7_2_i_i_fu_1454_p2)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U61(
    .din0(r_V_9_0_0_i_i_fu_1466_p0),
    .din1(wgt_M_instance_0_V_reg_2636),
    .dout(r_V_9_0_0_i_i_fu_1466_p2)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U62(
    .din0(r_V_9_0_1_i_i_fu_1503_p0),
    .din1(wgt_M_instance_0_V_11_reg_2656),
    .dout(r_V_9_0_1_i_i_fu_1503_p2)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U63(
    .din0(r_V_9_0_2_i_i_fu_1540_p0),
    .din1(wgt_M_instance_0_V_12_reg_2671),
    .dout(r_V_9_0_2_i_i_fu_1540_p2)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U64(
    .din0(r_V_9_0_3_i_i_fu_1577_p0),
    .din1(wgt_M_instance_0_V_13_reg_2686),
    .dout(r_V_9_0_3_i_i_fu_1577_p2)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U65(
    .din0(r_V_9_0_4_i_i_fu_1614_p0),
    .din1(wgt_M_instance_0_V_14_reg_2701),
    .dout(r_V_9_0_4_i_i_fu_1614_p2)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U66(
    .din0(r_V_9_0_5_i_i_fu_1651_p0),
    .din1(wgt_M_instance_0_V_15_reg_2716),
    .dout(r_V_9_0_5_i_i_fu_1651_p2)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U67(
    .din0(r_V_9_0_6_i_i_fu_1688_p0),
    .din1(wgt_M_instance_0_V_16_reg_2731),
    .dout(r_V_9_0_6_i_i_fu_1688_p2)
);

BBJ_u96_cnvW2A2_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
BBJ_u96_cnvW2A2_mibs_U68(
    .din0(r_V_9_0_7_i_i_fu_1725_p0),
    .din1(wgt_M_instance_0_V_17_reg_2746),
    .dout(r_V_9_0_7_i_i_fu_1725_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (tmp_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if ((~((real_start == 1'b0) | (tmp_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_504)) begin
        if (((tmp_i_i_1231_reg_2539 == 1'd0) & (exitcond_i_i_reg_2530 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_act_m_val_V_reg_566 <= inElem_V_fu_720_p11;
        end else if (((tmp_i_i_1231_reg_2539 == 1'd1) & (exitcond_i_i_reg_2530 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_act_m_val_V_reg_566 <= in_V_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_act_m_val_V_reg_566 <= ap_phi_reg_pp0_iter1_act_m_val_V_reg_566;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_i_i_fu_608_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_i_i_reg_555 <= i_fu_613_p2;
    end else if ((~((real_start == 1'b0) | (tmp_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_i_i_reg_555 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_34_i_i_fu_654_p2 == 1'd1) & (exitcond_i_i_fu_608_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        nf_assign_fu_184 <= p_i_i_fu_680_p3;
    end else if ((~((real_start == 1'b0) | (tmp_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        nf_assign_fu_184 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_34_i_i_fu_654_p2 == 1'd0) & (exitcond_i_i_fu_608_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sf_5_fu_180 <= sf_fu_648_p2;
    end else if (((~((real_start == 1'b0) | (tmp_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_34_i_i_fu_654_p2 == 1'd1) & (exitcond_i_i_fu_608_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        sf_5_fu_180 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_34_i_i_reg_2572 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tile_assign_fu_176 <= p_5_i_i_fu_1064_p3;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_34_i_i_reg_2572 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tile_assign_fu_176 <= tile_fu_1053_p2;
    end else if ((~((real_start == 1'b0) | (tmp_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tile_assign_fu_176 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        accu_V_0_i_i_fu_144 <= accu_0_V_fu_1878_p2;
        accu_V_1_i_i_fu_148 <= accu_1_V_fu_1904_p2;
        accu_V_2_i_i_fu_152 <= accu_2_V_fu_1930_p2;
        accu_V_3_i_i_fu_156 <= accu_3_V_fu_1956_p2;
        accu_V_4_i_i_fu_160 <= accu_4_V_fu_1982_p2;
        accu_V_5_i_i_fu_164 <= accu_5_V_fu_2008_p2;
        accu_V_6_i_i_fu_168 <= accu_6_V_fu_2034_p2;
        accu_V_7_i_i_fu_172 <= accu_7_V_fu_2060_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_act_m_val_V_reg_566 <= ap_phi_reg_pp0_iter0_act_m_val_V_reg_566;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_i_i_reg_2530 <= exitcond_i_i_fu_608_p2;
        nf_assign_load_reg_2576_pp0_iter1_reg <= nf_assign_load_reg_2576;
        tmp_33_i_i_reg_2560_pp0_iter1_reg <= tmp_33_i_i_reg_2560;
        tmp_34_i_i_reg_2572_pp0_iter1_reg <= tmp_34_i_i_reg_2572;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op77_read_state3 == 1'b1))) begin
        inputBuf_8_V_11_fu_196 <= inputBuf_8_V_21_fu_961_p3;
        inputBuf_8_V_13_fu_192 <= inputBuf_8_V_23_fu_977_p3;
        inputBuf_8_V_16_fu_216 <= inputBuf_8_V_1_fu_857_p3;
        inputBuf_8_V_18_fu_220 <= inputBuf_8_V_fu_825_p3;
        inputBuf_8_V_2_fu_188 <= inputBuf_8_V_24_fu_985_p3;
        inputBuf_8_V_3_fu_212 <= inputBuf_8_V_4_fu_881_p3;
        inputBuf_8_V_5_fu_208 <= inputBuf_8_V_6_fu_905_p3;
        inputBuf_8_V_7_fu_204 <= inputBuf_8_V_8_fu_921_p3;
        inputBuf_8_V_9_fu_200 <= inputBuf_8_V_20_fu_945_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_34_i_i_fu_654_p2 == 1'd1) & (exitcond_i_i_fu_608_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        nf_assign_load_reg_2576 <= nf_assign_fu_184;
        tmp_35_i_i_reg_2581 <= tmp_35_i_i_fu_674_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        nf_assign_load_reg_2576_pp0_iter2_reg <= nf_assign_load_reg_2576_pp0_iter1_reg;
        r_V_9_0_0_1_i_i_reg_2646 <= r_V_9_0_0_1_i_i_fu_1122_p2;
        r_V_9_0_0_2_i_i_reg_2651 <= r_V_9_0_0_2_i_i_fu_1146_p2;
        r_V_9_0_0_i_i_reg_2761 <= r_V_9_0_0_i_i_fu_1466_p2;
        r_V_9_0_1_1_i_i_reg_2661 <= r_V_9_0_1_1_i_i_fu_1180_p2;
        r_V_9_0_1_2_i_i_reg_2666 <= r_V_9_0_1_2_i_i_fu_1190_p2;
        r_V_9_0_1_i_i_reg_2771 <= r_V_9_0_1_i_i_fu_1503_p2;
        r_V_9_0_2_1_i_i_reg_2676 <= r_V_9_0_2_1_i_i_fu_1224_p2;
        r_V_9_0_2_2_i_i_reg_2681 <= r_V_9_0_2_2_i_i_fu_1234_p2;
        r_V_9_0_2_i_i_reg_2781 <= r_V_9_0_2_i_i_fu_1540_p2;
        r_V_9_0_3_1_i_i_reg_2691 <= r_V_9_0_3_1_i_i_fu_1268_p2;
        r_V_9_0_3_2_i_i_reg_2696 <= r_V_9_0_3_2_i_i_fu_1278_p2;
        r_V_9_0_3_i_i_reg_2791 <= r_V_9_0_3_i_i_fu_1577_p2;
        r_V_9_0_4_1_i_i_reg_2706 <= r_V_9_0_4_1_i_i_fu_1312_p2;
        r_V_9_0_4_2_i_i_reg_2711 <= r_V_9_0_4_2_i_i_fu_1322_p2;
        r_V_9_0_4_i_i_reg_2801 <= r_V_9_0_4_i_i_fu_1614_p2;
        r_V_9_0_5_1_i_i_reg_2721 <= r_V_9_0_5_1_i_i_fu_1356_p2;
        r_V_9_0_5_2_i_i_reg_2726 <= r_V_9_0_5_2_i_i_fu_1366_p2;
        r_V_9_0_5_i_i_reg_2811 <= r_V_9_0_5_i_i_fu_1651_p2;
        r_V_9_0_6_1_i_i_reg_2736 <= r_V_9_0_6_1_i_i_fu_1400_p2;
        r_V_9_0_6_2_i_i_reg_2741 <= r_V_9_0_6_2_i_i_fu_1410_p2;
        r_V_9_0_6_i_i_reg_2821 <= r_V_9_0_6_i_i_fu_1688_p2;
        r_V_9_0_7_1_i_i_reg_2751 <= r_V_9_0_7_1_i_i_fu_1444_p2;
        r_V_9_0_7_2_i_i_reg_2756 <= r_V_9_0_7_2_i_i_fu_1454_p2;
        r_V_9_0_7_i_i_reg_2831 <= r_V_9_0_7_i_i_fu_1725_p2;
        tmp154_reg_2766[11 : 1] <= tmp154_fu_1494_p2[11 : 1];
        tmp157_reg_2776[11 : 1] <= tmp157_fu_1531_p2[11 : 1];
        tmp160_reg_2786[11 : 1] <= tmp160_fu_1568_p2[11 : 1];
        tmp163_reg_2796[11 : 1] <= tmp163_fu_1605_p2[11 : 1];
        tmp166_reg_2806[11 : 1] <= tmp166_fu_1642_p2[11 : 1];
        tmp169_reg_2816[11 : 1] <= tmp169_fu_1679_p2[11 : 1];
        tmp172_reg_2826[11 : 1] <= tmp172_fu_1716_p2[11 : 1];
        tmp175_reg_2836[11 : 1] <= tmp175_fu_1753_p2[11 : 1];
        tmp_187_reg_2641 <= tmp_187_fu_1100_p1;
        tmp_33_i_i_reg_2560_pp0_iter2_reg <= tmp_33_i_i_reg_2560_pp0_iter1_reg;
        tmp_33_i_i_reg_2560_pp0_iter3_reg <= tmp_33_i_i_reg_2560_pp0_iter2_reg;
        tmp_34_i_i_reg_2572_pp0_iter2_reg <= tmp_34_i_i_reg_2572_pp0_iter1_reg;
        tmp_34_i_i_reg_2572_pp0_iter3_reg <= tmp_34_i_i_reg_2572_pp0_iter2_reg;
        tmp_34_i_i_reg_2572_pp0_iter4_reg <= tmp_34_i_i_reg_2572_pp0_iter3_reg;
        wgt_M_instance_0_V_11_reg_2656 <= wgt_M_instance_0_V_11_fu_1152_p1;
        wgt_M_instance_0_V_12_reg_2671 <= wgt_M_instance_0_V_12_fu_1196_p1;
        wgt_M_instance_0_V_13_reg_2686 <= wgt_M_instance_0_V_13_fu_1240_p1;
        wgt_M_instance_0_V_14_reg_2701 <= wgt_M_instance_0_V_14_fu_1284_p1;
        wgt_M_instance_0_V_15_reg_2716 <= wgt_M_instance_0_V_15_fu_1328_p1;
        wgt_M_instance_0_V_16_reg_2731 <= wgt_M_instance_0_V_16_fu_1372_p1;
        wgt_M_instance_0_V_17_reg_2746 <= wgt_M_instance_0_V_17_fu_1416_p1;
        wgt_M_instance_0_V_reg_2636 <= wgt_M_instance_0_V_fu_1076_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_34_i_i_reg_2572_pp0_iter3_reg == 1'd1))) begin
        slt11_reg_2931 <= slt11_fu_2118_p2;
        slt12_reg_2941 <= slt12_fu_2130_p2;
        slt13_reg_2951 <= slt13_fu_2142_p2;
        slt14_reg_2961 <= slt14_fu_2154_p2;
        slt15_reg_2971 <= slt15_fu_2166_p2;
        slt16_reg_2981 <= slt16_fu_2178_p2;
        slt17_reg_2991 <= slt17_fu_2190_p2;
        slt_reg_2921 <= slt_fu_2106_p2;
        tmp_i446_i_i_reg_2926 <= tmp_i446_i_i_fu_2112_p2;
        tmp_i448_i_i_reg_2936 <= tmp_i448_i_i_fu_2124_p2;
        tmp_i450_i_i_reg_2946 <= tmp_i450_i_i_fu_2136_p2;
        tmp_i452_i_i_reg_2956 <= tmp_i452_i_i_fu_2148_p2;
        tmp_i454_i_i_reg_2966 <= tmp_i454_i_i_fu_2160_p2;
        tmp_i456_i_i_reg_2976 <= tmp_i456_i_i_fu_2172_p2;
        tmp_i458_i_i_reg_2986 <= tmp_i458_i_i_fu_2184_p2;
        tmp_i460_i_i_reg_2996 <= tmp_i460_i_i_fu_2196_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_i_i_1231_fu_622_p2 == 1'd1) & (exitcond_i_i_fu_608_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_184_reg_2548 <= tmp_184_fu_635_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_i_i_1231_fu_622_p2 == 1'd0) & (exitcond_i_i_fu_608_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_185_reg_2543 <= tmp_185_fu_631_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_i_i_fu_608_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_33_i_i_reg_2560 <= tmp_33_i_i_fu_642_p2;
        tmp_34_i_i_reg_2572 <= tmp_34_i_i_fu_654_p2;
        tmp_i_i_1231_reg_2539 <= tmp_i_i_1231_fu_622_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (tmp_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_i_i_reg_2525[31 : 3] <= tmp_i_i_fu_592_p2[31 : 3];
    end
end

always @ (*) begin
    if ((exitcond_i_i_fu_608_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_i_i_1231_reg_2539 == 1'd1) & (exitcond_i_i_reg_2530 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op77_read_state3 == 1'b1))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_34_i_i_reg_2572_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_34_i_i_reg_2572_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_10_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_11_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_12_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_13_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_14_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_15_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_1_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_2_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_3_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_4_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_5_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_6_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_7_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_8_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_9_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_loc_blk_n = tmp_loc_empty_n;
    end else begin
        tmp_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (tmp_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_loc_read = 1'b1;
    end else begin
        tmp_loc_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_1_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_2_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_3_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_4_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_5_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_6_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_7_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (tmp_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_i_i_fu_608_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_i_i_fu_608_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP2_V_0_1_i_i_fu_1118_p1 = $signed(arg_V_read_assign_s_fu_1104_p4);

assign OP2_V_0_2_i_i_fu_1142_p1 = $signed(arg_V_read_assign_27_fu_1128_p4);

assign OP2_V_0_i_i_fu_1463_p1 = $signed(tmp_187_reg_2641);

assign accu_0_V_fu_1878_p2 = ($signed(tmp154_cast_fu_1875_p1) + $signed(tmp153_fu_1869_p2));

assign accu_1_V_fu_1904_p2 = ($signed(tmp157_cast_fu_1901_p1) + $signed(tmp156_fu_1895_p2));

assign accu_2_V_fu_1930_p2 = ($signed(tmp160_cast_fu_1927_p1) + $signed(tmp159_fu_1921_p2));

assign accu_3_V_fu_1956_p2 = ($signed(tmp163_cast_fu_1953_p1) + $signed(tmp162_fu_1947_p2));

assign accu_4_V_fu_1982_p2 = ($signed(tmp166_cast_fu_1979_p1) + $signed(tmp165_fu_1973_p2));

assign accu_5_V_fu_2008_p2 = ($signed(tmp169_cast_fu_2005_p1) + $signed(tmp168_fu_1999_p2));

assign accu_6_V_fu_2034_p2 = ($signed(tmp172_cast_fu_2031_p1) + $signed(tmp171_fu_2025_p2));

assign accu_7_V_fu_2060_p2 = ($signed(tmp175_cast_fu_2057_p1) + $signed(tmp174_fu_2051_p2));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((out_V_V_full_n == 1'b0) & (tmp_34_i_i_reg_2572_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op77_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((out_V_V_full_n == 1'b0) & (tmp_34_i_i_reg_2572_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op77_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((out_V_V_full_n == 1'b0) & (tmp_34_i_i_reg_2572_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op77_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (tmp_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((in_V_V_empty_n == 1'b0) & (ap_predicate_op77_read_state3 == 1'b1));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter5 = ((out_V_V_full_n == 1'b0) & (tmp_34_i_i_reg_2572_pp0_iter4_reg == 1'd1));
end

always @ (*) begin
    ap_condition_504 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_act_m_val_V_reg_566 = 'bx;

always @ (*) begin
    ap_predicate_op77_read_state3 = ((tmp_i_i_1231_reg_2539 == 1'd1) & (exitcond_i_i_reg_2530 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign arg_V_read_assign_27_fu_1128_p4 = {{ap_phi_reg_pp0_iter2_act_m_val_V_reg_566[23:16]}};

assign arg_V_read_assign_s_fu_1104_p4 = {{ap_phi_reg_pp0_iter2_act_m_val_V_reg_566[15:8]}};

assign exitcond_i_i_fu_608_p2 = ((i_i_i_reg_555 == tmp_i_i_reg_2525) ? 1'b1 : 1'b0);

assign i_fu_613_p2 = (i_i_i_reg_555 + 32'd1);

assign inputBuf_8_V_1_fu_857_p3 = ((or_cond6_fu_819_p2[0:0] === 1'b1) ? newSel2_fu_849_p3 : inputBuf_8_V_16_fu_216);

assign inputBuf_8_V_20_fu_945_p3 = ((or_cond4_fu_807_p2[0:0] === 1'b1) ? newSel9_fu_937_p3 : inputBuf_8_V_9_fu_200);

assign inputBuf_8_V_21_fu_961_p3 = ((or_cond_fu_783_p2[0:0] === 1'b1) ? inputBuf_8_V_11_fu_196 : newSel10_fu_953_p3);

assign inputBuf_8_V_22_fu_969_p3 = ((sel_tmp6_fu_773_p2[0:0] === 1'b1) ? in_V_V_dout : inputBuf_8_V_13_fu_192);

assign inputBuf_8_V_23_fu_977_p3 = ((sel_tmp7_fu_778_p2[0:0] === 1'b1) ? inputBuf_8_V_13_fu_192 : inputBuf_8_V_22_fu_969_p3);

assign inputBuf_8_V_24_fu_985_p3 = ((sel_tmp7_fu_778_p2[0:0] === 1'b1) ? in_V_V_dout : inputBuf_8_V_2_fu_188);

assign inputBuf_8_V_4_fu_881_p3 = ((or_cond4_fu_807_p2[0:0] === 1'b1) ? inputBuf_8_V_3_fu_212 : newSel5_fu_873_p3);

assign inputBuf_8_V_6_fu_905_p3 = ((or_cond4_fu_807_p2[0:0] === 1'b1) ? inputBuf_8_V_5_fu_208 : newSel8_fu_897_p3);

assign inputBuf_8_V_8_fu_921_p3 = ((or_cond4_fu_807_p2[0:0] === 1'b1) ? inputBuf_8_V_7_fu_204 : newSel3_fu_913_p3);

assign inputBuf_8_V_fu_825_p3 = ((or_cond6_fu_819_p2[0:0] === 1'b1) ? inputBuf_8_V_18_fu_220 : in_V_V_dout);

assign newSel10_fu_953_p3 = ((sel_tmp5_fu_768_p2[0:0] === 1'b1) ? in_V_V_dout : inputBuf_8_V_11_fu_196);

assign newSel1_fu_841_p3 = ((or_cond2_fu_795_p2[0:0] === 1'b1) ? inputBuf_8_V_16_fu_216 : newSel_fu_833_p3);

assign newSel2_fu_849_p3 = ((or_cond4_fu_807_p2[0:0] === 1'b1) ? inputBuf_8_V_16_fu_216 : newSel1_fu_841_p3);

assign newSel3_fu_913_p3 = ((sel_tmp3_fu_758_p2[0:0] === 1'b1) ? in_V_V_dout : inputBuf_8_V_7_fu_204);

assign newSel4_fu_865_p3 = ((sel_tmp1_fu_748_p2[0:0] === 1'b1) ? in_V_V_dout : inputBuf_8_V_3_fu_212);

assign newSel5_fu_873_p3 = ((or_cond2_fu_795_p2[0:0] === 1'b1) ? inputBuf_8_V_3_fu_212 : newSel4_fu_865_p3);

assign newSel6_fu_929_p3 = ((sel_tmp5_fu_768_p2[0:0] === 1'b1) ? inputBuf_8_V_9_fu_200 : in_V_V_dout);

assign newSel7_fu_889_p3 = ((sel_tmp3_fu_758_p2[0:0] === 1'b1) ? inputBuf_8_V_5_fu_208 : in_V_V_dout);

assign newSel8_fu_897_p3 = ((or_cond2_fu_795_p2[0:0] === 1'b1) ? newSel7_fu_889_p3 : inputBuf_8_V_5_fu_208);

assign newSel9_fu_937_p3 = ((or_cond_fu_783_p2[0:0] === 1'b1) ? inputBuf_8_V_9_fu_200 : newSel6_fu_929_p3);

assign newSel_fu_833_p3 = ((sel_tmp1_fu_748_p2[0:0] === 1'b1) ? inputBuf_8_V_16_fu_216 : in_V_V_dout);

assign nf_fu_668_p2 = (32'd1 + nf_assign_fu_184);

assign or_cond1_fu_789_p2 = (sel_tmp5_fu_768_p2 | sel_tmp4_fu_763_p2);

assign or_cond2_fu_795_p2 = (sel_tmp3_fu_758_p2 | sel_tmp2_fu_753_p2);

assign or_cond3_fu_801_p2 = (sel_tmp_fu_743_p2 | sel_tmp1_fu_748_p2);

assign or_cond4_fu_807_p2 = (or_cond_fu_783_p2 | or_cond1_fu_789_p2);

assign or_cond5_fu_813_p2 = (or_cond3_fu_801_p2 | or_cond2_fu_795_p2);

assign or_cond6_fu_819_p2 = (or_cond5_fu_813_p2 | or_cond4_fu_807_p2);

assign or_cond_fu_783_p2 = (sel_tmp7_fu_778_p2 | sel_tmp6_fu_773_p2);

assign out_V_V_din = {{{{{{{{result_V_7_1_i_i_fu_2372_p2}, {result_V_6_1_i_i_fu_2350_p2}}, {result_V_5_1_i_i_fu_2328_p2}}, {result_V_4_1_i_i_fu_2306_p2}}, {result_V_3_1_i_i_fu_2284_p2}}, {result_V_2_1_i_i_fu_2262_p2}}, {result_V_1_1_i_i_fu_2240_p2}}, {result_V_0_1_i_i_fu_2218_p2}};

assign p_5_i_i_fu_1064_p3 = ((tmp_35_i_i_reg_2581[0:0] === 1'b1) ? 32'd0 : tile_fu_1053_p2);

assign p_accu_V_0_i_i_fu_1851_p3 = ((tmp_33_i_i_reg_2560_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_0_i_i_fu_144);

assign p_accu_V_1_i_i_fu_1844_p3 = ((tmp_33_i_i_reg_2560_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_1_i_i_fu_148);

assign p_accu_V_2_i_i_fu_1837_p3 = ((tmp_33_i_i_reg_2560_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_2_i_i_fu_152);

assign p_accu_V_3_i_i_fu_1830_p3 = ((tmp_33_i_i_reg_2560_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_3_i_i_fu_156);

assign p_accu_V_4_i_i_fu_1823_p3 = ((tmp_33_i_i_reg_2560_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_4_i_i_fu_160);

assign p_accu_V_5_i_i_fu_1816_p3 = ((tmp_33_i_i_reg_2560_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_5_i_i_fu_164);

assign p_accu_V_6_i_i_fu_1809_p3 = ((tmp_33_i_i_reg_2560_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_6_i_i_fu_168);

assign p_accu_V_7_i_i_fu_1802_p3 = ((tmp_33_i_i_reg_2560_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_7_i_i_fu_172);

assign p_i_i_fu_680_p3 = ((tmp_35_i_i_fu_674_p2[0:0] === 1'b1) ? 32'd0 : nf_fu_668_p2);

assign r_V_9_0_0_1_i_i_fu_1122_p0 = OP2_V_0_1_i_i_fu_1118_p1;

assign r_V_9_0_0_2_i_i_fu_1146_p0 = OP2_V_0_2_i_i_fu_1142_p1;

assign r_V_9_0_0_i_i_fu_1466_p0 = OP2_V_0_i_i_fu_1463_p1;

assign r_V_9_0_1_1_i_i_fu_1180_p0 = OP2_V_0_1_i_i_fu_1118_p1;

assign r_V_9_0_1_2_i_i_fu_1190_p0 = OP2_V_0_2_i_i_fu_1142_p1;

assign r_V_9_0_1_i_i_fu_1503_p0 = OP2_V_0_i_i_fu_1463_p1;

assign r_V_9_0_2_1_i_i_fu_1224_p0 = OP2_V_0_1_i_i_fu_1118_p1;

assign r_V_9_0_2_2_i_i_fu_1234_p0 = OP2_V_0_2_i_i_fu_1142_p1;

assign r_V_9_0_2_i_i_fu_1540_p0 = OP2_V_0_i_i_fu_1463_p1;

assign r_V_9_0_3_1_i_i_fu_1268_p0 = OP2_V_0_1_i_i_fu_1118_p1;

assign r_V_9_0_3_2_i_i_fu_1278_p0 = OP2_V_0_2_i_i_fu_1142_p1;

assign r_V_9_0_3_i_i_fu_1577_p0 = OP2_V_0_i_i_fu_1463_p1;

assign r_V_9_0_4_1_i_i_fu_1312_p0 = OP2_V_0_1_i_i_fu_1118_p1;

assign r_V_9_0_4_2_i_i_fu_1322_p0 = OP2_V_0_2_i_i_fu_1142_p1;

assign r_V_9_0_4_i_i_fu_1614_p0 = OP2_V_0_i_i_fu_1463_p1;

assign r_V_9_0_5_1_i_i_fu_1356_p0 = OP2_V_0_1_i_i_fu_1118_p1;

assign r_V_9_0_5_2_i_i_fu_1366_p0 = OP2_V_0_2_i_i_fu_1142_p1;

assign r_V_9_0_5_i_i_fu_1651_p0 = OP2_V_0_i_i_fu_1463_p1;

assign r_V_9_0_6_1_i_i_fu_1400_p0 = OP2_V_0_1_i_i_fu_1118_p1;

assign r_V_9_0_6_2_i_i_fu_1410_p0 = OP2_V_0_2_i_i_fu_1142_p1;

assign r_V_9_0_6_i_i_fu_1688_p0 = OP2_V_0_i_i_fu_1463_p1;

assign r_V_9_0_7_1_i_i_fu_1444_p0 = OP2_V_0_1_i_i_fu_1118_p1;

assign r_V_9_0_7_2_i_i_fu_1454_p0 = OP2_V_0_2_i_i_fu_1142_p1;

assign r_V_9_0_7_i_i_fu_1725_p0 = OP2_V_0_i_i_fu_1463_p1;

assign result_V_0_1_i_i_fu_2218_p2 = (result_V_0_cast_i_i_fu_2207_p3 + tmp_145_0_1_i_i_fu_2215_p1);

assign result_V_0_cast_i_i_fu_2207_p3 = ((rev_fu_2202_p2[0:0] === 1'b1) ? 2'd3 : 2'd0);

assign result_V_1_1_i_i_fu_2240_p2 = (result_V_1_cast_i_i_fu_2229_p3 + tmp_145_1_1_i_i_fu_2237_p1);

assign result_V_1_cast_i_i_fu_2229_p3 = ((rev11_fu_2224_p2[0:0] === 1'b1) ? 2'd3 : 2'd0);

assign result_V_2_1_i_i_fu_2262_p2 = (result_V_2_cast_i_i_fu_2251_p3 + tmp_145_2_1_i_i_fu_2259_p1);

assign result_V_2_cast_i_i_fu_2251_p3 = ((rev12_fu_2246_p2[0:0] === 1'b1) ? 2'd3 : 2'd0);

assign result_V_3_1_i_i_fu_2284_p2 = (result_V_3_cast_i_i_fu_2273_p3 + tmp_145_3_1_i_i_fu_2281_p1);

assign result_V_3_cast_i_i_fu_2273_p3 = ((rev13_fu_2268_p2[0:0] === 1'b1) ? 2'd3 : 2'd0);

assign result_V_4_1_i_i_fu_2306_p2 = (result_V_4_cast_i_i_fu_2295_p3 + tmp_145_4_1_i_i_fu_2303_p1);

assign result_V_4_cast_i_i_fu_2295_p3 = ((rev14_fu_2290_p2[0:0] === 1'b1) ? 2'd3 : 2'd0);

assign result_V_5_1_i_i_fu_2328_p2 = (result_V_5_cast_i_i_fu_2317_p3 + tmp_145_5_1_i_i_fu_2325_p1);

assign result_V_5_cast_i_i_fu_2317_p3 = ((rev15_fu_2312_p2[0:0] === 1'b1) ? 2'd3 : 2'd0);

assign result_V_6_1_i_i_fu_2350_p2 = (result_V_6_cast_i_i_fu_2339_p3 + tmp_145_6_1_i_i_fu_2347_p1);

assign result_V_6_cast_i_i_fu_2339_p3 = ((rev16_fu_2334_p2[0:0] === 1'b1) ? 2'd3 : 2'd0);

assign result_V_7_1_i_i_fu_2372_p2 = (result_V_7_cast_i_i_fu_2361_p3 + tmp_145_7_1_i_i_fu_2369_p1);

assign result_V_7_cast_i_i_fu_2361_p3 = ((rev17_fu_2356_p2[0:0] === 1'b1) ? 2'd3 : 2'd0);

assign rev11_fu_2224_p2 = (slt11_reg_2931 ^ 1'd1);

assign rev12_fu_2246_p2 = (slt12_reg_2941 ^ 1'd1);

assign rev13_fu_2268_p2 = (slt13_reg_2951 ^ 1'd1);

assign rev14_fu_2290_p2 = (slt14_reg_2961 ^ 1'd1);

assign rev15_fu_2312_p2 = (slt15_reg_2971 ^ 1'd1);

assign rev16_fu_2334_p2 = (slt16_reg_2981 ^ 1'd1);

assign rev17_fu_2356_p2 = (slt17_reg_2991 ^ 1'd1);

assign rev_fu_2202_p2 = (slt_reg_2921 ^ 1'd1);

assign sel_tmp1_fu_748_p2 = ((tmp_184_reg_2548 == 4'd6) ? 1'b1 : 1'b0);

assign sel_tmp2_fu_753_p2 = ((tmp_184_reg_2548 == 4'd5) ? 1'b1 : 1'b0);

assign sel_tmp3_fu_758_p2 = ((tmp_184_reg_2548 == 4'd4) ? 1'b1 : 1'b0);

assign sel_tmp4_fu_763_p2 = ((tmp_184_reg_2548 == 4'd3) ? 1'b1 : 1'b0);

assign sel_tmp5_fu_768_p2 = ((tmp_184_reg_2548 == 4'd2) ? 1'b1 : 1'b0);

assign sel_tmp6_fu_773_p2 = ((tmp_184_reg_2548 == 4'd1) ? 1'b1 : 1'b0);

assign sel_tmp7_fu_778_p2 = ((tmp_184_reg_2548 == 4'd0) ? 1'b1 : 1'b0);

assign sel_tmp_fu_743_p2 = ((tmp_184_reg_2548 == 4'd7) ? 1'b1 : 1'b0);

assign sf_fu_648_p2 = (32'd1 + sf_5_fu_180);

assign slt11_fu_2118_p2 = (($signed(threshs0_m_threshold_13_q0) < $signed(accu_1_V_fu_1904_p2)) ? 1'b1 : 1'b0);

assign slt12_fu_2130_p2 = (($signed(threshs0_m_threshold_11_q0) < $signed(accu_2_V_fu_1930_p2)) ? 1'b1 : 1'b0);

assign slt13_fu_2142_p2 = (($signed(threshs0_m_threshold_9_q0) < $signed(accu_3_V_fu_1956_p2)) ? 1'b1 : 1'b0);

assign slt14_fu_2154_p2 = (($signed(threshs0_m_threshold_7_q0) < $signed(accu_4_V_fu_1982_p2)) ? 1'b1 : 1'b0);

assign slt15_fu_2166_p2 = (($signed(threshs0_m_threshold_5_q0) < $signed(accu_5_V_fu_2008_p2)) ? 1'b1 : 1'b0);

assign slt16_fu_2178_p2 = (($signed(threshs0_m_threshold_3_q0) < $signed(accu_6_V_fu_2034_p2)) ? 1'b1 : 1'b0);

assign slt17_fu_2190_p2 = (($signed(threshs0_m_threshold_1_q0) < $signed(accu_7_V_fu_2060_p2)) ? 1'b1 : 1'b0);

assign slt_fu_2106_p2 = (($signed(threshs0_m_threshold_15_q0) < $signed(accu_0_V_fu_1878_p2)) ? 1'b1 : 1'b0);

assign start_out = real_start;

assign threshs0_m_threshold_10_address0 = tmp_137_i_i_fu_1759_p1;

assign threshs0_m_threshold_11_address0 = tmp_137_i_i_fu_1759_p1;

assign threshs0_m_threshold_12_address0 = tmp_137_i_i_fu_1759_p1;

assign threshs0_m_threshold_13_address0 = tmp_137_i_i_fu_1759_p1;

assign threshs0_m_threshold_14_address0 = tmp_137_i_i_fu_1759_p1;

assign threshs0_m_threshold_15_address0 = tmp_137_i_i_fu_1759_p1;

assign threshs0_m_threshold_1_address0 = tmp_137_i_i_fu_1759_p1;

assign threshs0_m_threshold_2_address0 = tmp_137_i_i_fu_1759_p1;

assign threshs0_m_threshold_3_address0 = tmp_137_i_i_fu_1759_p1;

assign threshs0_m_threshold_4_address0 = tmp_137_i_i_fu_1759_p1;

assign threshs0_m_threshold_5_address0 = tmp_137_i_i_fu_1759_p1;

assign threshs0_m_threshold_6_address0 = tmp_137_i_i_fu_1759_p1;

assign threshs0_m_threshold_7_address0 = tmp_137_i_i_fu_1759_p1;

assign threshs0_m_threshold_8_address0 = tmp_137_i_i_fu_1759_p1;

assign threshs0_m_threshold_9_address0 = tmp_137_i_i_fu_1759_p1;

assign threshs0_m_threshold_address0 = tmp_137_i_i_fu_1759_p1;

assign tile_fu_1053_p2 = (32'd1 + tile_assign_fu_176);

assign tmp153_fu_1869_p2 = ($signed(p_accu_V_0_i_i_fu_1851_p3) + $signed(tmp_142_0_cast_i_i_fu_1865_p1));

assign tmp154_cast_fu_1875_p1 = $signed(tmp154_reg_2766);

assign tmp154_fu_1494_p2 = ($signed(tmp_142_0_1_cast_i_i_fu_1479_p1) + $signed(tmp_142_0_2_cast_i_i_fu_1490_p1));

assign tmp156_fu_1895_p2 = ($signed(p_accu_V_1_i_i_fu_1844_p3) + $signed(tmp_142_1_cast_i_i_fu_1891_p1));

assign tmp157_cast_fu_1901_p1 = $signed(tmp157_reg_2776);

assign tmp157_fu_1531_p2 = ($signed(tmp_142_1_1_cast_i_i_fu_1516_p1) + $signed(tmp_142_1_2_cast_i_i_fu_1527_p1));

assign tmp159_fu_1921_p2 = ($signed(p_accu_V_2_i_i_fu_1837_p3) + $signed(tmp_142_2_cast_i_i_fu_1917_p1));

assign tmp160_cast_fu_1927_p1 = $signed(tmp160_reg_2786);

assign tmp160_fu_1568_p2 = ($signed(tmp_142_2_1_cast_i_i_fu_1553_p1) + $signed(tmp_142_2_2_cast_i_i_fu_1564_p1));

assign tmp162_fu_1947_p2 = ($signed(p_accu_V_3_i_i_fu_1830_p3) + $signed(tmp_142_3_cast_i_i_fu_1943_p1));

assign tmp163_cast_fu_1953_p1 = $signed(tmp163_reg_2796);

assign tmp163_fu_1605_p2 = ($signed(tmp_142_3_1_cast_i_i_fu_1590_p1) + $signed(tmp_142_3_2_cast_i_i_fu_1601_p1));

assign tmp165_fu_1973_p2 = ($signed(p_accu_V_4_i_i_fu_1823_p3) + $signed(tmp_142_4_cast_i_i_fu_1969_p1));

assign tmp166_cast_fu_1979_p1 = $signed(tmp166_reg_2806);

assign tmp166_fu_1642_p2 = ($signed(tmp_142_4_1_cast_i_i_fu_1627_p1) + $signed(tmp_142_4_2_cast_i_i_fu_1638_p1));

assign tmp168_fu_1999_p2 = ($signed(p_accu_V_5_i_i_fu_1816_p3) + $signed(tmp_142_5_cast_i_i_fu_1995_p1));

assign tmp169_cast_fu_2005_p1 = $signed(tmp169_reg_2816);

assign tmp169_fu_1679_p2 = ($signed(tmp_142_5_1_cast_i_i_fu_1664_p1) + $signed(tmp_142_5_2_cast_i_i_fu_1675_p1));

assign tmp171_fu_2025_p2 = ($signed(p_accu_V_6_i_i_fu_1809_p3) + $signed(tmp_142_6_cast_i_i_fu_2021_p1));

assign tmp172_cast_fu_2031_p1 = $signed(tmp172_reg_2826);

assign tmp172_fu_1716_p2 = ($signed(tmp_142_6_1_cast_i_i_fu_1701_p1) + $signed(tmp_142_6_2_cast_i_i_fu_1712_p1));

assign tmp174_fu_2051_p2 = ($signed(p_accu_V_7_i_i_fu_1802_p3) + $signed(tmp_142_7_cast_i_i_fu_2047_p1));

assign tmp175_cast_fu_2057_p1 = $signed(tmp175_reg_2836);

assign tmp175_fu_1753_p2 = ($signed(tmp_142_7_1_cast_i_i_fu_1738_p1) + $signed(tmp_142_7_2_cast_i_i_fu_1749_p1));

assign tmp_134_0_i_i_fu_1041_p1 = tile_assign_fu_176;

assign tmp_137_i_i_fu_1759_p1 = nf_assign_load_reg_2576_pp0_iter2_reg;

assign tmp_142_0_1_cast_i_i_fu_1479_p1 = $signed(tmp_142_0_1_i_i_fu_1472_p3);

assign tmp_142_0_1_i_i_fu_1472_p3 = {{r_V_9_0_0_1_i_i_reg_2646}, {1'd0}};

assign tmp_142_0_2_cast_i_i_fu_1490_p1 = $signed(tmp_142_0_2_i_i_fu_1483_p3);

assign tmp_142_0_2_i_i_fu_1483_p3 = {{r_V_9_0_0_2_i_i_reg_2651}, {1'd0}};

assign tmp_142_0_cast_i_i_fu_1865_p1 = $signed(tmp_142_0_i_i_fu_1858_p3);

assign tmp_142_0_i_i_fu_1858_p3 = {{r_V_9_0_0_i_i_reg_2761}, {1'd0}};

assign tmp_142_1_1_cast_i_i_fu_1516_p1 = $signed(tmp_142_1_1_i_i_fu_1509_p3);

assign tmp_142_1_1_i_i_fu_1509_p3 = {{r_V_9_0_1_1_i_i_reg_2661}, {1'd0}};

assign tmp_142_1_2_cast_i_i_fu_1527_p1 = $signed(tmp_142_1_2_i_i_fu_1520_p3);

assign tmp_142_1_2_i_i_fu_1520_p3 = {{r_V_9_0_1_2_i_i_reg_2666}, {1'd0}};

assign tmp_142_1_cast_i_i_fu_1891_p1 = $signed(tmp_142_1_i_i_fu_1884_p3);

assign tmp_142_1_i_i_fu_1884_p3 = {{r_V_9_0_1_i_i_reg_2771}, {1'd0}};

assign tmp_142_2_1_cast_i_i_fu_1553_p1 = $signed(tmp_142_2_1_i_i_fu_1546_p3);

assign tmp_142_2_1_i_i_fu_1546_p3 = {{r_V_9_0_2_1_i_i_reg_2676}, {1'd0}};

assign tmp_142_2_2_cast_i_i_fu_1564_p1 = $signed(tmp_142_2_2_i_i_fu_1557_p3);

assign tmp_142_2_2_i_i_fu_1557_p3 = {{r_V_9_0_2_2_i_i_reg_2681}, {1'd0}};

assign tmp_142_2_cast_i_i_fu_1917_p1 = $signed(tmp_142_2_i_i_fu_1910_p3);

assign tmp_142_2_i_i_fu_1910_p3 = {{r_V_9_0_2_i_i_reg_2781}, {1'd0}};

assign tmp_142_3_1_cast_i_i_fu_1590_p1 = $signed(tmp_142_3_1_i_i_fu_1583_p3);

assign tmp_142_3_1_i_i_fu_1583_p3 = {{r_V_9_0_3_1_i_i_reg_2691}, {1'd0}};

assign tmp_142_3_2_cast_i_i_fu_1601_p1 = $signed(tmp_142_3_2_i_i_fu_1594_p3);

assign tmp_142_3_2_i_i_fu_1594_p3 = {{r_V_9_0_3_2_i_i_reg_2696}, {1'd0}};

assign tmp_142_3_cast_i_i_fu_1943_p1 = $signed(tmp_142_3_i_i_fu_1936_p3);

assign tmp_142_3_i_i_fu_1936_p3 = {{r_V_9_0_3_i_i_reg_2791}, {1'd0}};

assign tmp_142_4_1_cast_i_i_fu_1627_p1 = $signed(tmp_142_4_1_i_i_fu_1620_p3);

assign tmp_142_4_1_i_i_fu_1620_p3 = {{r_V_9_0_4_1_i_i_reg_2706}, {1'd0}};

assign tmp_142_4_2_cast_i_i_fu_1638_p1 = $signed(tmp_142_4_2_i_i_fu_1631_p3);

assign tmp_142_4_2_i_i_fu_1631_p3 = {{r_V_9_0_4_2_i_i_reg_2711}, {1'd0}};

assign tmp_142_4_cast_i_i_fu_1969_p1 = $signed(tmp_142_4_i_i_fu_1962_p3);

assign tmp_142_4_i_i_fu_1962_p3 = {{r_V_9_0_4_i_i_reg_2801}, {1'd0}};

assign tmp_142_5_1_cast_i_i_fu_1664_p1 = $signed(tmp_142_5_1_i_i_fu_1657_p3);

assign tmp_142_5_1_i_i_fu_1657_p3 = {{r_V_9_0_5_1_i_i_reg_2721}, {1'd0}};

assign tmp_142_5_2_cast_i_i_fu_1675_p1 = $signed(tmp_142_5_2_i_i_fu_1668_p3);

assign tmp_142_5_2_i_i_fu_1668_p3 = {{r_V_9_0_5_2_i_i_reg_2726}, {1'd0}};

assign tmp_142_5_cast_i_i_fu_1995_p1 = $signed(tmp_142_5_i_i_fu_1988_p3);

assign tmp_142_5_i_i_fu_1988_p3 = {{r_V_9_0_5_i_i_reg_2811}, {1'd0}};

assign tmp_142_6_1_cast_i_i_fu_1701_p1 = $signed(tmp_142_6_1_i_i_fu_1694_p3);

assign tmp_142_6_1_i_i_fu_1694_p3 = {{r_V_9_0_6_1_i_i_reg_2736}, {1'd0}};

assign tmp_142_6_2_cast_i_i_fu_1712_p1 = $signed(tmp_142_6_2_i_i_fu_1705_p3);

assign tmp_142_6_2_i_i_fu_1705_p3 = {{r_V_9_0_6_2_i_i_reg_2741}, {1'd0}};

assign tmp_142_6_cast_i_i_fu_2021_p1 = $signed(tmp_142_6_i_i_fu_2014_p3);

assign tmp_142_6_i_i_fu_2014_p3 = {{r_V_9_0_6_i_i_reg_2821}, {1'd0}};

assign tmp_142_7_1_cast_i_i_fu_1738_p1 = $signed(tmp_142_7_1_i_i_fu_1731_p3);

assign tmp_142_7_1_i_i_fu_1731_p3 = {{r_V_9_0_7_1_i_i_reg_2751}, {1'd0}};

assign tmp_142_7_2_cast_i_i_fu_1749_p1 = $signed(tmp_142_7_2_i_i_fu_1742_p3);

assign tmp_142_7_2_i_i_fu_1742_p3 = {{r_V_9_0_7_2_i_i_reg_2756}, {1'd0}};

assign tmp_142_7_cast_i_i_fu_2047_p1 = $signed(tmp_142_7_i_i_fu_2040_p3);

assign tmp_142_7_i_i_fu_2040_p3 = {{r_V_9_0_7_i_i_reg_2831}, {1'd0}};

assign tmp_145_0_1_i_i_fu_2215_p1 = tmp_i446_i_i_reg_2926;

assign tmp_145_1_1_i_i_fu_2237_p1 = tmp_i448_i_i_reg_2936;

assign tmp_145_2_1_i_i_fu_2259_p1 = tmp_i450_i_i_reg_2946;

assign tmp_145_3_1_i_i_fu_2281_p1 = tmp_i452_i_i_reg_2956;

assign tmp_145_4_1_i_i_fu_2303_p1 = tmp_i454_i_i_reg_2966;

assign tmp_145_5_1_i_i_fu_2325_p1 = tmp_i456_i_i_reg_2976;

assign tmp_145_6_1_i_i_fu_2347_p1 = tmp_i458_i_i_reg_2986;

assign tmp_145_7_1_i_i_fu_2369_p1 = tmp_i460_i_i_reg_2996;

assign tmp_183_fu_586_p2 = tmp_loc_dout << 32'd3;

assign tmp_184_fu_635_p1 = sf_5_fu_180[3:0];

assign tmp_185_fu_631_p1 = sf_5_fu_180[3:0];

assign tmp_187_fu_1100_p1 = ap_phi_reg_pp0_iter2_act_m_val_V_reg_566[7:0];

assign tmp_33_i_i_fu_642_p2 = ((sf_5_fu_180 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_34_i_i_fu_654_p2 = ((sf_fu_648_p2 == 32'd9) ? 1'b1 : 1'b0);

assign tmp_35_i_i_fu_674_p2 = ((nf_fu_668_p2 == 32'd8) ? 1'b1 : 1'b0);

assign tmp_fu_580_p2 = tmp_loc_dout << 32'd6;

assign tmp_i446_i_i_fu_2112_p2 = (($signed(threshs0_m_threshold_14_q0) < $signed(accu_0_V_fu_1878_p2)) ? 1'b1 : 1'b0);

assign tmp_i448_i_i_fu_2124_p2 = (($signed(threshs0_m_threshold_12_q0) < $signed(accu_1_V_fu_1904_p2)) ? 1'b1 : 1'b0);

assign tmp_i450_i_i_fu_2136_p2 = (($signed(threshs0_m_threshold_10_q0) < $signed(accu_2_V_fu_1930_p2)) ? 1'b1 : 1'b0);

assign tmp_i452_i_i_fu_2148_p2 = (($signed(threshs0_m_threshold_8_q0) < $signed(accu_3_V_fu_1956_p2)) ? 1'b1 : 1'b0);

assign tmp_i454_i_i_fu_2160_p2 = (($signed(threshs0_m_threshold_6_q0) < $signed(accu_4_V_fu_1982_p2)) ? 1'b1 : 1'b0);

assign tmp_i456_i_i_fu_2172_p2 = (($signed(threshs0_m_threshold_4_q0) < $signed(accu_5_V_fu_2008_p2)) ? 1'b1 : 1'b0);

assign tmp_i458_i_i_fu_2184_p2 = (($signed(threshs0_m_threshold_2_q0) < $signed(accu_6_V_fu_2034_p2)) ? 1'b1 : 1'b0);

assign tmp_i460_i_i_fu_2196_p2 = (($signed(threshs0_m_threshold_q0) < $signed(accu_7_V_fu_2060_p2)) ? 1'b1 : 1'b0);

assign tmp_i_i_1231_fu_622_p2 = ((nf_assign_fu_184 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_i_i_fu_592_p2 = (tmp_fu_580_p2 + tmp_183_fu_586_p2);

assign weights0_m_weights_V_1_address0 = tmp_134_0_i_i_fu_1041_p1;

assign weights0_m_weights_V_2_address0 = tmp_134_0_i_i_fu_1041_p1;

assign weights0_m_weights_V_3_address0 = tmp_134_0_i_i_fu_1041_p1;

assign weights0_m_weights_V_4_address0 = tmp_134_0_i_i_fu_1041_p1;

assign weights0_m_weights_V_5_address0 = tmp_134_0_i_i_fu_1041_p1;

assign weights0_m_weights_V_6_address0 = tmp_134_0_i_i_fu_1041_p1;

assign weights0_m_weights_V_7_address0 = tmp_134_0_i_i_fu_1041_p1;

assign weights0_m_weights_V_address0 = tmp_134_0_i_i_fu_1041_p1;

assign wgt_M_instance_0_V_11_fu_1152_p1 = weights0_m_weights_V_1_q0[1:0];

assign wgt_M_instance_0_V_12_fu_1196_p1 = weights0_m_weights_V_2_q0[1:0];

assign wgt_M_instance_0_V_13_fu_1240_p1 = weights0_m_weights_V_3_q0[1:0];

assign wgt_M_instance_0_V_14_fu_1284_p1 = weights0_m_weights_V_4_q0[1:0];

assign wgt_M_instance_0_V_15_fu_1328_p1 = weights0_m_weights_V_5_q0[1:0];

assign wgt_M_instance_0_V_16_fu_1372_p1 = weights0_m_weights_V_6_q0[1:0];

assign wgt_M_instance_0_V_17_fu_1416_p1 = weights0_m_weights_V_7_q0[1:0];

assign wgt_M_instance_0_V_fu_1076_p1 = weights0_m_weights_V_q0[1:0];

assign wgt_M_instance_1_V_11_fu_1156_p4 = {{weights0_m_weights_V_1_q0[3:2]}};

assign wgt_M_instance_1_V_12_fu_1200_p4 = {{weights0_m_weights_V_2_q0[3:2]}};

assign wgt_M_instance_1_V_13_fu_1244_p4 = {{weights0_m_weights_V_3_q0[3:2]}};

assign wgt_M_instance_1_V_14_fu_1288_p4 = {{weights0_m_weights_V_4_q0[3:2]}};

assign wgt_M_instance_1_V_15_fu_1332_p4 = {{weights0_m_weights_V_5_q0[3:2]}};

assign wgt_M_instance_1_V_16_fu_1376_p4 = {{weights0_m_weights_V_6_q0[3:2]}};

assign wgt_M_instance_1_V_17_fu_1420_p4 = {{weights0_m_weights_V_7_q0[3:2]}};

assign wgt_M_instance_1_V_fu_1080_p4 = {{weights0_m_weights_V_q0[3:2]}};

assign wgt_M_instance_2_V_11_fu_1166_p4 = {{weights0_m_weights_V_1_q0[5:4]}};

assign wgt_M_instance_2_V_12_fu_1210_p4 = {{weights0_m_weights_V_2_q0[5:4]}};

assign wgt_M_instance_2_V_13_fu_1254_p4 = {{weights0_m_weights_V_3_q0[5:4]}};

assign wgt_M_instance_2_V_14_fu_1298_p4 = {{weights0_m_weights_V_4_q0[5:4]}};

assign wgt_M_instance_2_V_15_fu_1342_p4 = {{weights0_m_weights_V_5_q0[5:4]}};

assign wgt_M_instance_2_V_16_fu_1386_p4 = {{weights0_m_weights_V_6_q0[5:4]}};

assign wgt_M_instance_2_V_17_fu_1430_p4 = {{weights0_m_weights_V_7_q0[5:4]}};

assign wgt_M_instance_2_V_fu_1090_p4 = {{weights0_m_weights_V_q0[5:4]}};

always @ (posedge ap_clk) begin
    tmp_i_i_reg_2525[2:0] <= 3'b000;
    tmp154_reg_2766[0] <= 1'b0;
    tmp157_reg_2776[0] <= 1'b0;
    tmp160_reg_2786[0] <= 1'b0;
    tmp163_reg_2796[0] <= 1'b0;
    tmp166_reg_2806[0] <= 1'b0;
    tmp169_reg_2816[0] <= 1'b0;
    tmp172_reg_2826[0] <= 1'b0;
    tmp175_reg_2836[0] <= 1'b0;
end

endmodule //Matrix_Vector_Activa_4
